{
  "_id": "validatesubmitprice_processor",
  "name": "validatesubmitprice_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "const formElementName = 'pricelimits';\r\nlet data = req.body.bulkPayLoadData || [];\r\nconst serverTimezoneOffset = new Date().getTimezoneOffset();\r\nconst today = moment(moment().format('YYYY-MM-DD HH:mm'), 'YYYY-MM-DD HH:mm');\r\nconst parentMsg = 'Invalid start date\/time. Please review your entry';\r\nconst childMsg = 'Invalid start date\/time. Please review your entry';\r\n\/\/ data = data.filter(o=>o.status!='Expired').map((i, index) => ({\r\n\/\/   ...i,\r\n\/\/   index: index,\r\n\/\/   startTime: i.publishImmediately\r\n\/\/     ? moment()\r\n\/\/         .add(\r\n\/\/           i.clientTimezoneOffset\r\n\/\/             ? serverTimezoneOffset - i.clientTimezoneOffset\r\n\/\/             : 0,\r\n\/\/           'minutes'\r\n\/\/         )\r\n\/\/         .format('HH:mm')\r\n\/\/     : i.startTime,\r\n\/\/   startDateTime: i.publishImmediately\r\n\/\/     ? moment().utc().format('YYYY-MM-DDTHH:mm') + ':00Z'\r\n\/\/     : i.startDateTime,\r\n\/\/ }));\r\ndata.filter(o=>o.status!='Expired').forEach(i => {\r\n  i.startTime= i.publishImmediately\r\n    ? moment()\r\n        .add(\r\n          i.clientTimezoneOffset\r\n            ? serverTimezoneOffset - i.clientTimezoneOffset\r\n            : 0,\r\n          'minutes'\r\n        )\r\n        .format('HH:mm')\r\n    : i.startTime;\r\n  i.startDateTime= i.publishImmediately\r\n    ? moment().utc().format('YYYY-MM-DDTHH:mm:ss[Z]')\r\n    : i.startDateTime;\r\n});\r\n\r\nconst errorWithDates = data.filter((i) =>\r\n  today.isAfter(\r\n    moment(i.startDate + ' ' + i.startTime, 'YYYY-MM-DD HH:mm:ss[Z]').add(\r\n      i.clientTimezoneOffset\r\n        ?  i.clientTimezoneOffset - serverTimezoneOffset\r\n        : 0,\r\n      'minutes'\r\n    )\r\n  ) && i.status != 'Expired'\r\n);\r\nif (errorWithDates && errorWithDates.length > 0) {\r\n  res.status(400).send({\r\n    errorCode: '004',\r\n    errorMessage: parentMsg,\r\n    errorContext: null,\r\n    errorLocalizedMessage: parentMsg,\r\n    errors: [\r\n      {\r\n        errorCode: '004',\r\n        errorMessage: parentMsg,\r\n        errorContext: `{formarray:${formElementName}}`,\r\n        errorLocalizedMessage: parentMsg,\r\n        errors: errorWithDates.map((i) => ({\r\n          errorCode: '004',\r\n          errorMessage: childMsg,\r\n          errorContext: `{formarray:${i.index}}`,\r\n          errorLocalizedMessage: childMsg,\r\n          errors: [\r\n            {\r\n              errorCode: '004',\r\n              errorMessage: childMsg,\r\n              errorContext: `{field:formattedStartTime}`,\r\n              errorLocalizedMessage: childMsg,\r\n              errors: null,\r\n            },\r\n          ],\r\n        })),\r\n      },\r\n    ],\r\n  });\r\n} else {\r\n  res.status(200).send(data);\r\n}",
  "sys__UUID": "10731253-4484-4320-9ab6-b88eda03142f"
}
