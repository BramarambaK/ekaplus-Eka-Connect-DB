{
  "_id": "format_data_gps_price_processor",
  "name": "format_data_gps_price_processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "isNode":true,
  "snippet": "var priceArrayReceived = req.body.bulkPayLoadData;\r\nconst today = moment.utc();\r\nconst serverTimezoneOffset = new Date().getTimezoneOffset();\r\n\/\/  console.log('priceArrayReceived - ' + JSON.stringify(priceArrayReceived));\r\n\/\/formatting the prcie data to GPS price format\r\nvar gpsFormattedPrice = {\r\n  PriceUpdateRequest_PriceUpdateRequestRaws: [],\r\n};\r\n\r\nfor (let i = 0; i < priceArrayReceived.length; i++) {\r\n  var gpsFormattedPriceFields = {\r\n    BpRefNo: null,\r\n    BpExternalCode: null,\r\n    Season: null,\r\n    Product: null,\r\n    Quality: null,\r\n    Site: null,\r\n    PricingOption: null,\r\n    StartDateTime: null,\r\n    EndDateTime: null,\r\n    Sustainable: null,\r\n    Price: null,\r\n    Status: null,\r\n    PriceId: null,\r\n    MarketType: null,\r\n    PaymentTerm: null,\r\n  };\r\n  for (let keyGPSFormattedPriceFields in gpsFormattedPriceFields) {\r\n    if (\r\n      keyGPSFormattedPriceFields == 'PriceId' &&\r\n      priceArrayReceived[i].externalPriceId\r\n    )\r\n      gpsFormattedPriceFields.PriceId = priceArrayReceived[i].externalPriceId;\r\n    else {\r\n      for (let keyReceived in priceArrayReceived[i]) {\r\n        \/\/ for (let keyGPSFormattedPriceFields in gpsFormattedPriceFields) {\r\n        if (\r\n          keyReceived.toLowerCase() == keyGPSFormattedPriceFields.toLowerCase()\r\n        ) {\r\n          gpsFormattedPriceFields[keyGPSFormattedPriceFields] =\r\n            priceArrayReceived[i][keyReceived];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const start = moment.utc(\r\n    priceArrayReceived[i].startDateTime,\r\n    'YYYY-MM-DDTHH:mm:ss[Z]'\r\n  );\r\n  const end = moment.utc(\r\n    priceArrayReceived[i].endDateTime,\r\n    'YYYY-MM-DDTHH:mm:ss[Z]'\r\n  );\r\n\r\n  let status = priceArrayReceived[i].status;\r\n  if (status != 'Expired' && moment(start).isValid() && moment(end).isValid()) {\r\n    if (\r\n      moment(end).isSameOrAfter(today) &&\r\n      moment(start).isSameOrBefore(today)\r\n    ) {\r\n      status = 'Active';\r\n    } else if (moment(start).isAfter(today) && moment(end).isAfter(today)) {\r\n      status = 'Scheduled';\r\n    } else if (moment(start).isBefore(today) && moment(end).isBefore(today)) {\r\n      status = 'Expired';\r\n    }\r\n  }\r\n  gpsFormattedPriceFields['StartDateTime'] =\r\n    priceArrayReceived[i].startDateTime;\r\n  gpsFormattedPriceFields['EndDateTime'] = priceArrayReceived[i].endDateTime;\r\n  gpsFormattedPriceFields['Status'] = status;\r\n  gpsFormattedPrice['PriceUpdateRequest_PriceUpdateRequestRaws'].push({\r\n    ...gpsFormattedPriceFields,\r\n  });\r\n}\r\nconsole.log('gpsFormattedPrice - ' + JSON.stringify(gpsFormattedPrice));\r\nres.status(200).send(gpsFormattedPrice);",
  "sys__UUID": "09aed869-4de6-4ffd-99e3-9e1ffa3a0272",
  "type": "processor"
}
