{
  "_id": "contractbuyerlisting_processor",
  "name": "contractbuyerlisting_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "  const connect = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_connect_host + `/workflow/data/`,\r\n    headers: {\r\n      Authorization: req.headers.authorization,\r\n      'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    body: {\r\n      appId: '12325a98-a959-4939-9005-4158d136afcd',\r\n      workFlowTask: 'contractqueryElastic',\r\n      qP: {\r\n        from: 0,\r\n        size: 10000\r\n      }\r\n    },\r\n    json: true\r\n  };\r\n\r\n  function get_elasticData() {\r\n    return new Promise(function(resolve, reject) {\r\n      request(connect, function(error, response, body) {\r\n        if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n          resolve(body);\r\n        } else {\r\n          reject(body);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  get_elasticData()\r\n    .then(records => {\r\n      let result = records.data.filter(i => {\r\n        if (i.contractRefNo && i.contractItemRefNo) {\r\n          i.contractRefNo = i.contractRefNo + ' ' + i.contractItemRefNo;\r\n        }\r\n        if (\r\n          (i.contractType == 'Sell' && (i.fulfillmentStatus && i.fulfillmentStatus.toLowerCase() == 'fulfilled')) ||\r\n          (i.positionStatus && i.positionStatus.toLowerCase() == 'cancelled')\r\n        ) {\r\n          i.contractStatus = 'Complete';\r\n        }\r\n        if ((i.contractType == 'Sell' && i.fulfillmentStatus && i.fulfillmentStatus.toLowerCase() != 'fulfilled')&&\r\n          (i.positionStatus && i.positionStatus.toLowerCase() != 'cancelled')\r\n        ) {\r\n          i.contractStatus = 'Open';\r\n        }\r\n        return i;\r\n      });\r\n      res.status(200).send(result);\r\n    })\r\n    .catch(function(err) {\r\n      return res.status(500).send(err);\r\n    });",
  "sys__UUID": "3168c378-d13a-432f-b3c6-7323b3530185"
}
