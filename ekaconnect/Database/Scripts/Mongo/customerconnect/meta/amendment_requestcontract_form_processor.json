{
  "_id": "amendment_requestcontract_form_processor",
  "name": "amendment_requestcontract_form_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "  const userInfo = req.body.propertyList.eka_connect_host + '/api/getbpuserinfo';\r\n\r\n    const data = req.body.selectedData.requesteddetails.amendment_requestcontractdetailsform\r\n      ? req.body.selectedData.requesteddetails.amendment_requestcontractdetailsform\r\n      : req.body.selectedData.requesteddetails.data;\r\n\r\n    const app_home = req.body.propertyList.CONTRACT_BROWSE_BIDS_URL;\r\n    const currDate = moment(new Date()).format('MM-YYYY');\r\n    let disableDelivery;\r\n    let shipmentPeriodFrom = data.amendedShipmentFrom\r\n      ? moment(data.amendedShipmentFrom).format('MMM YYYY')\r\n      : moment(data.shipmentPeriodFrom).format('MMM YYYY');\r\n    let shipmentPeriodTo = data.amendedShipmentTo\r\n      ? moment(data.amendedShipmentTo).format('MMM YYYY')\r\n      : moment(data.shipmentPeriodTo).format('MMM YYYY');\r\n    let cpName = data.counterPartyName;\r\n    let selectedAmendedCity = '';\r\n    //data.amendedCity || (data.dischargeLocationType != 'Storage Location') ? 'abc' : data.dischargeLocationCity;\r\n    if (data.amendedCity) {\r\n      selectedAmendedCity = data.amendedCity;\r\n    } else {\r\n      if (data.dischargeLocationType != 'Storage Location') {\r\n        selectedAmendedCity = data.deliveryLocationGroupName;\r\n      } else {\r\n        selectedAmendedCity = data.dischargeLocationCity;\r\n      }\r\n    }\r\n    if (currDate >= moment(data.shipmentPeriodFrom).format('MM-YYYY')) {\r\n      disableDelivery = true;\r\n      // shipmentPeriodTo = moment(shipmentPeriodTo)\r\n      //   .add(1, 'months')\r\n      //   .format('MMM YYYY');\r\n    } else {\r\n      disableDelivery = false;\r\n    }\r\n    // disableDelivery = false;\r\n    // data.amendment_requestcontractdetailsform ? delete data.amendment_requestcontractdetailsform : null;\r\n    data.isMultiGrade = data.isMultiGrade == true || (data.isMultiGrade + '').toLowerCase() == 'y' ? 'Y' : 'N';\r\n    data.multiGradeDifferentialDetails =\r\n      req.body.selectedData.contractlistingcomposite.contractopen.multiGradeDifferentialDetails;\r\n    let amendedData = {\r\n      appHome: app_home,\r\n      amendedShipmentFrom: shipmentPeriodFrom,\r\n      amendedShipmentTo: shipmentPeriodTo,\r\n      disableDelivery: disableDelivery,\r\n      amendmentCounterPartyName: cpName,\r\n      amendedCity: selectedAmendedCity,\r\n      amendedQuality: data.quality,\r\n      amendedPrice: data.contractPrice,\r\n      amendedFullname: data.amendedFullname ? data.amendedFullname : data.fullname ? data.fullname : null,\r\n      amendedFreightOrganise:\r\n        data.INCOTerm.toLowerCase() == 'db'\r\n          ? 'I will organise my own freight (Delivered Buyer)'\r\n          : data.INCOTerm.toLowerCase() == 'ex-farm'\r\n          ? 'Cargill to pick up (Ex-Farm)'\r\n          : '',\r\n      amendedPhonenumber: data.amendedPhonenumber\r\n        ? data.amendedPhonenumber\r\n        : data.phonenumber\r\n        ? data.phonenumber\r\n        : null,\r\n      amendedEmail: data.amendedEmail ? data.amendedEmail : data.email ? data.email : null,\r\n      amendedPickuplocation: data.amendedPickuplocation\r\n        ? data.amendedPickuplocation\r\n        : data.pickuplocation\r\n        ? data.pickuplocation\r\n        : null,\r\n      amendedBrokerRefNo: data.amendedBrokerRefNo ? data.amendedBrokerRefNo : data.brokerRefNo,\r\n      amendedSpread: !data.spread\r\n        ? ''\r\n        : data.spread.toLowerCase().includes('fix')\r\n        ? 'Fix multi-grade spreads as above'\r\n        : 'Leave floating'\r\n    };\r\n\r\n    const getData = url =>\r\n      new Promise(function(resolve, reject) {\r\n        request(\r\n          {\r\n            method: 'GET',\r\n            url,\r\n            headers: {\r\n              Authorization: req.headers.authorization,\r\n              'X-TenantID': req.headers['X-TenantID'],\r\n              'Content-Type': 'application/json'\r\n            },\r\n            json: true\r\n          },\r\n          function(err, response, body) {\r\n            if (response && response.statusCode >= 200 && response.statusCode <= 299) {\r\n              resolve(body);\r\n            } else {\r\n              reject(body);\r\n            }\r\n          }\r\n        );\r\n      });\r\n\r\n    const bpList = new Promise((resolve, reject) => {\r\n      getData(userInfo)\r\n        .then(t => {\r\n          // resolve(t);\r\n          resolve({\r\n            roles: t.data.Role,\r\n            refNo: t.data.refNo,\r\n            name: t.firstName + ' ' + t.lastName\r\n          });\r\n        })\r\n        .catch(err => {\r\n          reject(err);\r\n          handleErrorResponse(req, '', err, '');\r\n        });\r\n    });\r\n\r\n    bpList\r\n      .then(user => {\r\n        res.status(200).send({\r\n          ...data,\r\n          ...amendedData,\r\n          userRole: user.roles.toString(),\r\n          amendedRefNo: user.roles.toString().toLowerCase().includes('dxp_cacp_broker') ? user.refNo : data.brokerBPRefNo\r\n        });\r\n      })\r\n      .catch(err => {\r\n        var data = {};\r\n        console.error(err);\r\n        res.status(400).send('Failed to fetch user roles');\r\n        handleErrorResponse(req, '', err, '');\r\n      });",
  "sys__UUID": "b3ad6b3a-0948-4076-a97a-a50f7b3507d1"
}
