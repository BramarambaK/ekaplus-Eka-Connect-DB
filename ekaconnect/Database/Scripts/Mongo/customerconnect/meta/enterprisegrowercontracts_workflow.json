{
  "_id": "enterprisegrowercontracts_workflow",
  "componentType": "UserTask",
  "objectAction": "LISTVIEW",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "taskId": "enterprisegrowercontracts",
  "label": "Manage Contracts",
  "object": "46e84f42-6288-4027-b6d0-fd1c11019259",
  "sys__UUID": "7882bc87-53c5-4843-b809-a5b0487f9ae2",
  "type": "workflow",
  "lazyLoading": false,
  "rows": 20,
  "layout": {
    "mdmPayload": {},
    "name": "list",
    "tableStyle": {
      "width": "100%",
      "min-height": "300px"
    },
    "getInitialData": false,
    "searchPlaceHolder": "Search Request ID and more",
    "messages": {
      "emptyText": "<span>You have no contract requests</span><br><span>This may be the answer you're looking for. try removing or changing your filters to make them less specific</span>"
    },
    "options": {
      "filter": true,
      "lastUpdated": false,
      "columnFilter": true,
      "search": true,
      "reload": true,
      "reset": true,
      "export": true,
      "operationV2": true,
      "customization": true
    },
    "lazyLoading": false,
    "showCheckbox": true,
    "selectAll": false,
    "theme": "theme-grid-customer-connect",
    "selectionMode": "single",
    "resetSelection": true,
    "tableEditing": false,
    "freezeColumn": true,
    "dependentPrimaryFilters": true,
    "suppressMdmError": true
  },
  "template": [
    {
      "deviceType": "web",
      "template": "cargill-web",
      "config": {
        "aside": ""
      }
    },
    {
      "deviceType": "mobile",
      "template": "cargill-mobile",
      "config": {
        "aside": ""
      }
    }
  ],
  "fields": [
    {
      "filter": false,
      "edit": false,
      "label": "Request ID",
      "sort": true,
      "key": "requestId",
      "hidden": false,
      "category": "link",
      "task": "custom-link",
      "primaryKey": {
        "field": "sys__UUID"
      }
    },
    {
      "filter": true,
      "highlight": {
        "Approved": "cargill-table-listing-status-btn-green",
        "Action required": "cargill-table-listing-status-btn-orange",
        "Rejected": "cargill-table-listing-status-btn-red",
        "Awaiting review": "cargill-table-listing-status-btn-blue",
        "Withdrawn": "cargill-table-listing-status-btn-grey",
        "Expired": "cargill-table-listing-status-btn-grey"
      },
      "edit": true,
      "label": "Request status",
      "sort": true,
      "key": "approvalStatus",
      "primaryFilter": true
    },
    {
      "filter": true,
      "edit": false,
      "label": "Requested date",
      "sort": true,
      "key": "requestedDate",
      "dateformat": "DD/MM/YYYY",
      "sourceDateFormat": "DD-MM-YYYY"
    },
    {
      "filter": true,
      "edit": false,
      "label": "Request type",
      "sort": true,
      "key": "requestType",
      "primaryFilter": true
    },
    {
      "filter": false,
      "edit": false,
      "label": "Contract ID",
      "sort": true,
      "key": "contractRefNo",
      "task": "download-link",
      "UIupdates": {
        "listValue": "if(data.contractRefNo == '' || data.contractRefNo == '-') { \r\n  data.sys__state['contractRefNo']['hyperlink'] = false\r\n} else{\r\n  data.sys__state['contractRefNo']['hyperlink'] = true\r\n}\r\nreturn data.contractRefNo;"
      }
    },
    {
      "filter": true,
      "edit": false,
      "label": "Commodity",
      "sort": true,
      "key": "product",
      "primaryFilter": true
    },
    {
      "filter": true,
      "edit": false,
      "label": "Grade",
      "sort": true,
      "key": "quality",
      "primaryFilter": false,
      "UIupdates": {
        "listValue": "return ('${isMultiGrade}'.toLowerCase()== 'y' && !'${quality}'.includes('MG') ? '${quality}' + ' MG' : '${quality}')"
      }
    },
    {
      "filter": true,
      "edit": false,
      "label": "Season",
      "sort": true,
      "key": "cropYear",
      "primaryFilter": false
    },
    {
      "filter": false,
      "edit": false,
      "label": "Contract quantity (MT)",
      "sort": true,
      "key": "contractItemQuantity",
      "width": "170px",
      "UIupdates": {
        "listValue": "return '${contractItemQuantity}' ? Number('${contractItemQuantity}').toFixed(2) : '-'"
      }
    },
    {
      "filter": true,
      "edit": false,
      "label": "Price (/MT)",
      "sort": true,
      "key": "contractPrice",
      "UIupdates": {
        "listValue": "return '${requestType}'.toLowerCase()=='amendment' && '${amendedPrice}'?'$'+Number('${amendedPrice}').toFixed(2): '$'+Number('${contractPrice}').toFixed(2)"
      }
    },
    {
      "filter": true,
      "edit": false,
      "label": "Delivery location",
      "sort": true,
      "key": "dischargeLocationCity",
      "width": "160px",
      "UIupdates": {
        "listValue": "return '${requestType}'.toLowerCase()=='amendment' && '${amendedCity}'? '${amendedCity}' : '${locationGroupType}'.toLowerCase() == 'specific location'? '${dischargeLocationCity}':'${locationGroupType}'.toLowerCase() != 'specific location'? '${deliveryLocationGroupName}' || '${dischargeLocationCountry}'.split('_')[1] : '${dischargeLocationCountry}' && '${dischargeLocationCountry}'.split('_').length >1? '${dischargeLocationCountry}'.split('_')[1]: '-'"
      }
    },
    {
      "filter": false,
      "edit": false,
      "label": "Delivery term",
      "sort": true,
      "key": "INCOTerm"
    },
    {
      "filter": true,
      "edit": false,
      "label": "Delivery start",
      "sort": true,
      "key": "shipmentPeriodFrom",
      "dateformat": "DD/MM/YYYY",
      "sourceDateFormat": "YYYY-MM-DD",
      "UIupdates": {
        "listValue": "return '${requestType}'.toLowerCase()=='amendment' && '${amendedShipmentFrom}' ? '${amendedShipmentFrom}' : '${shipmentPeriodFrom}'"
      }
    },
    {
      "filter": true,
      "edit": false,
      "label": "Delivery end",
      "sort": true,
      "key": "shipmentPeriodTo",
      "dateformat": "DD/MM/YYYY",
      "sourceDateFormat": "YYYY-MM-DD",
      "UIupdates": {
        "listValue": "return '${requestType}'.toLowerCase()=='amendment' && '${amendedShipmentTo}'? '${amendedShipmentTo}' : '${shipmentPeriodTo}'"
      }
    },
    {
      "filter": true,
      "edit": false,
      "label": "Requested by",
      "sort": true,
      "key": "requestedBy"
    },
    {
      "filter": true,
      "edit": false,
      "label": "Bid ID",
      "sort": true,
      "key": "bidid",
      "UIupdates": {
        "listValue": "return '${requestType}'.toLowerCase() == 'amendment' ? '-' : '${bidid}' "
      }
    },
    {
      "filter": true,
      "edit": false,
      "label": "Trading name",
      "sort": true,
      "key": "counterPartyName",
      "primaryFilter": true,
      "UIupdates": {
        "listValue": "return '${counterPartyName}' ? '${counterPartyName}' : '-'"
      }
    }
  ],
  "decisions": [
    {
      "btnClass": "btn-success custom-link",
      "objectAction": "CREATE",
      "labelkey": "CREATE_GMR_BASIC",
      "selection": "global",
      "outcomes": [
        {
          "data": "selected.enterpriselistingcomposite.enterprisegrowercontracts",
          "name": "contractrequestdetailscomposite",
          "setSelected": ["selected.contractrequestdetailscomposite.data"]
        }
      ],
      "position": "top",
      "label": "View request details",
      "hideButtonExpression": "return ${enterpriselistingcomposite.enterprisegrowercontracts}['requestType'].toLowerCase() == 'offer to sell'",
      "iconClass": "createicon"
    },
    {
      "btnClass": "btn-success custom-link",
      "objectAction": "CREATE",
      "labelkey": "CREATE_GMR_BASIC",
      "selection": "global",
      "outcomes": [
        {
          "data": "selected.enterpriselistingcomposite.enterprisegrowercontracts",
          "name": "offerforcontractdetailscomposite",
          "setSelected": ["selected.offerforcontractdetailscomposite.data"]
        }
      ],
      "position": "top",
      "label": "View request details",
      "hideButtonExpression": "return ${enterpriselistingcomposite.enterprisegrowercontracts}['requestType'].toLowerCase() != 'offer to sell'",
      "iconClass": "createicon"
    },
    {
      "objectAction": "READ",
      "selection": "custom-link",
      "outcomes": [
        {
          "name": "contractrequestdetailscomposite",
          "setSelected": ["selected.contractrequestdetailscomposite.data"]
        }
      ]
    },
    {
      "btnClass": "btn-success custom-link",
      "objectAction": "CREATE",
      "labelkey": "CREATE_GMR_BASIC",
      "selection": "download-link",
      "task": "EXTERNAL_CONTRACT_DOWNLOADDOC",
      "workflowTaskName": "EXTERNAL_CONTRACT_DOWNLOADDOC",
      "outcomes": [
        {
          "data": "selected.enterpriselistingcomposite.enterprisegrowercontracts",
          "name": "enterprisegrowercontracts",
          "type": "downloadCST",
          "workflowTaskName": "EXTERNAL_CONTRACT_DOWNLOADDOC",
          "setSelected": [
            "selected.enterpriselistingcomposite.enterprisegrowercontracts"
          ]
        }
      ],
      "position": "top",
      "label": "View contract",
      "disabled": "(selected.enterpriselistingcomposite.enterprisegrowercontracts.hasOwnProperty('approvalStatus') && selected.enterpriselistingcomposite.enterprisegrowercontracts.approvalStatus == 'Approved') ? false : true",
      "iconClass": "createicon"
    },
    {
      "objectAction": "CREATE",
      "selection": "download-link",
      "task": "EXTERNAL_CONTRACT_DOWNLOADDOC",
      "workflowTaskName": "EXTERNAL_CONTRACT_DOWNLOADDOC",
      "outcomes": [
        {
          "name": "contractrequestdetailscomposite",
          "type": "downloadCST",
          "workflowTaskName": "EXTERNAL_CONTRACT_DOWNLOADDOC",
          "setSelected": [
            "selected.enterpriselistingcomposite.enterprisegrowercontracts.data"
          ]
        }
      ]
    }
  ],
  "labelKey": "LIST"
}
