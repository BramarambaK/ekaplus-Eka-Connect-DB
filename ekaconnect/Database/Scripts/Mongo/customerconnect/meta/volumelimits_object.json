{
  "_id": "volumelimits_object",
  "name": "volumelimits_object",
  "label": "VolumeLimits Object",
  "type": "object",
  "version": "1",
  "objectAction": {
    "CREATE": "POST",
    "UPDATE": "PUT",
    "READ": "GET",
    "LISTVIEW": "GET",
    "DELETE": "DELETE"
  },
  "translatableKeys": [],
  "uniqueFields": [
    "bpRefNo",
    "region",
    "product",
    "site",
    "quality",
    "season",
    "bpExternalCode"
  ],
  "fields": {
    "bpRefNo": {
      "bpRefNo": "Account",
      "labelKey": "bpRefNo",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "ngrFilterKey",
      "children": ["bpRefNo", "season"]
    },
    "bpExternalCode": {
      "bpExternalCode": "BP External Code",
      "labelKey": "bpExternalCode",
      "type": "textbox",
      "isRequired": true,
      "dataType": "String"
    },
    "bpExternalName": {
      "bpExternalName": "BP External Name",
      "labelKey": "bpExternalName",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "accountBPName": {
      "accountBPName": "Account",
      "labelKey": "accountBPName",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "season": {
      "season": "Season",
      "labelKey": "season",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "harvestSeasonKey",
      "parent": ["bpRefNo"]
    },
    "tonnagelimits": {
      "tonnagelimits": "Enter limits",
      "labelKey": "tonnagelimits",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String"
    },
    "enterprices": {
      "enterprices": "Enter price",
      "labelKey": "enterprices",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String"
    },
    "bpName": {
      "bpName": "BP Name",
      "labelKey": "bpName",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "limits": {
      "limits": "Enter limits",
      "labelKey": "limits",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String"
    },
    "region": {
      "region": "Port zone",
      "labelKey": "region",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "portzoneKey",
      "children": ["site", "oldDailylimit", "dailypurchased"]
    },
    "product": {
      "product": "Commodity",
      "labelKey": "product",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "commodityKey",
      "children": ["quality", "oldDailylimit", "dailypurchased"]
    },
    "quality": {
      "quality": "Grade",
      "labelKey": "quality",
      "type": "multiselect",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "gradeKey",
      "parent": ["product"],
      "children": ["oldDailylimit", "dailypurchased"],
      "UIupdates": {
        "disability": "return ('${product}' === '' || '${product}' === 'null' ) ? true : false"
      }
    },
    "site": {
      "site": "Site",
      "labelKey": "site",
      "type": "multiselect",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "siteKey",
      "parent": ["region"],
      "children": ["oldDailylimit", "dailypurchased"],
      "UIupdates": {
        "disability": "return ('${region}' === '' || '${region}' === 'null' ) ? true : false"
      }
    },
    "dailyLimit": {
      "dailyLimit": "New limit (MT)",
      "labelKey": "dailyLimit",
      "type": "textbox",
      "isRequired": true,
      "dataType": "Number",
      "maxlength": "20",
      "validationRegex": "^[0-9]*$",
      "customRangeFilter": "rangefilter",
      "inputMode": "decimal"
    },
    "newDailylimit": {
      "newDailylimit": "Daily limit (MT)",
      "labelKey": "newDailylimit",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "dailypurchased": {
      "dailypurchased": "Daily purchased (MT)",
      "labelKey": "dailypurchased",
      "type": "textbox",
      "isRequired": false,
      "dataType": "Number",
      "placeholder": "0.00",
      "serviceKey": "dailypurchasedKey",
      "parent": ["region", "product", "quality", "site"],
      "UIupdates" : {
        "listValue" : "return (('${dailypurchased}' == '-'||'${dailypurchased}' === '0.00')?'0.00': '${dailypurchased}')"
    },
      "customRangeFilter": "rangefilter"
    },
    "oldDailylimit": {
      "oldDailylimit": "Current daily limit (MT)",
      "labelKey": "oldDailylimit",
      "type": "textbox",
      "isRequired": false,
      "dataType": "Number",
      "placeholder": "-",
      "serviceKey": "oldDailylimitKey",
      "parent": ["region", "product", "quality", "site"]
    },
    "pricingOption": {
      "pricingOption": "Pricing options",
      "labelKey": "pricingOption",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String"
    },
    "quantityUnit": {
      "quantityUnit": "Quantity Unit",
      "labelKey": "quantityUnit",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "openQuantity": {
      "openQuantity": "Open Quantity",
      "labelKey": "openQuantity",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "payincrement": {
      "payincrement": "Pay increment",
      "labelKey": "payincrement",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String"
    },
    "price": {
      "price": "Prices ($/MT)",
      "labelKey": "price",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "startDate": {
      "startDate": "Start date",
      "labelKey": "startDate",
      "type": "datepicker",
      "dataType": "Date",
      "customDateFilter": "datefilter"
    },
    "startTime": {
      "startTime": "Ticket Filter",
      "labelKey": "startTime",
      "type": "dropdown"
    },
    "endDate": {
      "endDate": "End date",
      "labelKey": "endDate",
      "type": "datepicker",
      "isRequired": false,
      "dataType": "Date",
      "customDateFilter": "datefilter"
    },
    "endTime": {
      "endTime": "End time",
      "labelKey": "endTime",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String"
    },
    "ngrFilter": {
      "ngrFilter": "Filter",
      "labelKey": "ngrFilter",
      "type": "multiselect",
      "serviceKey": "ngrFilterKey"
    },
    "ngrGCSFilter": {
      "ngrFilter": "Filter",
      "labelKey": "ngrGCSFilter",
      "type": "multiselect",
      "serviceKey": "ngrGCSFilterKey"
    },
    "active": {
      "active": "Active",
      "labelKey": "active",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String"
    },
    "limitBreachStatus": {
      "limitBreachStatus": "Limit Breach Status",
      "labelKey": "limitBreachStatus",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "actualPurchased": {
      "actualPurchased": "Actual Purchased",
      "labelKey": "actualPurchased",
      "type": "textbox",
      "isRequired": false,
      "dataType": "Number",
      "maxlength": "20",
      "validationRegex": "^[0-9]*$"
    },
    "isInternalBp": {
      "isInternalBp": "Is Internal BP",
      "labelKey": "isInternalBp",
      "type": "textbox",
      "sourceTextFormat": {
        "textFormatLabel": "Y/<blank>",
        "textFormat": "^$|\\s*$|Y"
      },
      "isRequired": false,
      "dataType": "String"
    },
    "isProcessing": {
      "isProcessing": "Is Processing",
      "labelKey": "isProcessing",
      "type": "checkbox",
      "isRequired": false,
      "dataType": "boolean"
    },
    "sustainable": {
      "sustainable": "Sustainable",
      "labelKey": "sustainable",
      "type": "checkbox",
      "isRequired": false,
      "dataType": "boolean"
    },
    "marketType": {
      "marketType": "Market Type",
      "labelKey": "marketType",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "profitCenter": {
      "profitCenter": "Profit Center",
      "labelKey": "profitCenter",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "dailypurchasedByContractOffer": {
      "dailypurchasedByContractOffer": "Daily Purchased By Contract Offer",
      "labelKey": "dailypurchasedByContractOffer",
      "type": "textbox",
      "isRequired": false,
      "dataType": "Number"
    }
  },
  "sys__UUID": "c98119db-1f7c-4802-b72a-6678f1ecc0f3"
}
