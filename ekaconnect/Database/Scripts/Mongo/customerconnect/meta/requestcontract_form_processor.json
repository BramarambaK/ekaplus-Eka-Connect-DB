{
  "_id": "requestcontract_form_processor",
  "name": "requestcontract_form_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "   const userInfo = req.body.propertyList.eka_connect_host + '/api/getbpuserinfo';\r\n\r\nlet data = req.body.selectedData.requestDetails\r\n  ? req.body.selectedData.requestDetails.requestcontractdetailsform\r\n  : req.body.selectedData.requestcontractcomposite.queryParams ||\r\n    req.body.selectedData.requestcontractcomposite.requestcontractdetailsform;\r\nconst fieldChangeToTitleCase = [\r\n  'product',\r\n  'dischargeLocationCity',\r\n  'dischargeLocationCountry',\r\n  'dischargeLocationState'\r\n];\r\nconst fieldChangeToUpperCase = ['paymentTerms', 'quality'];\r\nconst toTitleCase = phrase => {\r\n  phrase = phrase\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(' ');\r\n\r\n  if (phrase.includes('_')) {\r\n    phrase = phrase\r\n      .toLowerCase()\r\n      .split('_')\r\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n      .join('_');\r\n  }\r\n  return phrase;\r\n};\r\nfieldChangeToTitleCase.map(element => {\r\n  if (data && data[element]) {\r\n    data[element] = toTitleCase(data[element]);\r\n    if (element == 'dischargeLocationCity' && data['dischargeLocationCity'].includes('flow')) {\r\n      data['dischargeLocationCity'] = data['dischargeLocationCity'].replace('flow', 'Flow');\r\n    }\r\n  }\r\n});\r\nfieldChangeToUpperCase.map(element => {\r\n  if (data && data[element]) {\r\n    data[element] = data[element].toUpperCase();\r\n  }\r\n});\r\nconst app_home = req.body.propertyList.CONTRACT_BROWSE_BIDS_URL;\r\nlet locationCountryCity = data.dischargeLocationCountry;\r\nif (data && data.dischargeLocationCity) {\r\n  locationCountryCity = locationCountryCity + ' ' + data.dischargeLocationCity;\r\n}\r\nconst shipmentFromDate = moment(data.shipmentPeriodFrom).format('MMM YYYY');\r\nconst shipmentToDate = moment(data.shipmentPeriodTo).format('MMM YYYY');\r\ndata.multiGradeDifferentialDetails =\r\n  req.body.selectedData.requestcontractcomposite.queryParams.multiGradeDifferentialDetails;\r\n\r\nconst getData = url =>\r\n  new Promise(function(resolve, reject) {\r\n    request(\r\n      {\r\n        method: 'GET',\r\n        url,\r\n        headers: {\r\n          Authorization: req.headers.authorization,\r\n          'X-TenantID': req.headers['X-TenantID'],\r\n          'Content-Type': 'application/json'\r\n        },\r\n        json: true\r\n      },\r\n      function(err, response, body) {\r\n        if (response && response.statusCode >= 200 && response.statusCode <= 299) {\r\n          resolve(body);\r\n        } else {\r\n          reject(body);\r\n        }\r\n      }\r\n    );\r\n  });\r\n\r\nconst bpList = new Promise((resolve, reject) => {\r\n  getData(userInfo)\r\n    .then(t => {\r\n      // resolve(t);\r\n      resolve({\r\n        roles: t.data.Role,\r\n        refNo: t.data.refNo\r\n      });\r\n    })\r\n    .catch(err => {\r\n      reject(err);\r\n      handleErrorResponse(req, '', err, '');\r\n    });\r\n});\r\n\r\nbpList\r\n  .then(user => {\r\n    res.status(200).send({\r\n      ...data,\r\n      appHome: app_home,\r\n      dischargeLocationCountryCity: locationCountryCity,\r\n      shipmentPeriodFromDate: shipmentFromDate,\r\n      shipmentPeriodToDate: shipmentToDate,\r\n      quality: data.quality.includes('MG')\r\n        ? data.quality\r\n        : (data.isMultiGrade + '').toLowerCase() == 'y' || data.isMultiGrade == true\r\n        ? data.quality + ' MG'\r\n        : data.quality,\r\n      INCOTerm: data.INCOTerm.toUpperCase(),\r\n      userRole: user.roles.toString(),\r\n      refNo: user.roles.toString().toLowerCase().includes('dxp_cacp_broker') ? user.refNo : ''\r\n    });\r\n  })\r\n  .catch(err => {\r\n    var data = {};\r\n    console.error(err);\r\n    res.status(400).send('Failed to fetch user roles');\r\n    handleErrorResponse(req, '', err, '');\r\n  }); ",
  "sys__UUID": "af19319b-6519-4ff2-8a90-29bd018bb9d5"
}
