{
  "_id": "BP_UserList_Ref_processor",
  "name": "BP_UserList_Ref",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "req.body.mdmProcessorServiceKey = JSON.parse(req.body.mdmProcessorServiceKey);\r\nvar serviceKey = req.body.mdmProcessorServiceKey[0].serviceKey;\r\nvar businessParties = {\r\n  method: \"GET\",\r\n  url:\r\n    req.body.propertyList.platform_url +\r\n    \"/spring/customers/getBusinessPartyDetails\",\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n  },\r\n  json: true,\r\n};\r\nfunction get_businessParties() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(businessParties, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nvar email = {\r\n  method: \"GET\",\r\n  url: req.body.propertyList.platform_url + \"/cac-security/api/userinfo\",\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n  },\r\n  json: true,\r\n};\r\nfunction get_email() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(email, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nvar customer = {\r\n  method: \"GET\",\r\n  url:\r\n    req.body.propertyList.platform_url +\r\n    \"/spring/registration/getTenantCustomerByName?username=\",\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n  },\r\n  json: true,\r\n};\r\nfunction get_customer() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(customer, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction formatData(n) {\r\n  return n\r\n    .toString()\r\n    .split(/(?=(?:\\d{3})+(?:\\.|$))/g)\r\n    .join(\" \");\r\n}\r\n\r\nvar customerType;\r\nget_email()\r\n  .then((user) => {\r\n    customer.url = customer.url + user.email;\r\n    get_customer()\r\n      .then((userInfo) => {\r\n        customerType = userInfo.customerType;\r\n        get_businessParties()\r\n          .then((result) => {\r\n            let businessPartiesList = result.data;\r\n            var mdmData = [];\r\n            var data = {};\r\n            businessPartiesList.forEach((bp) => {\r\n              if (customerType == \"Demand Customer\") {\r\n  mdmData.push({ key: bp.c1, value: `${bp.c2}\\n${formatData(bp.c1)}` }); \r\n              }\r\n     else { \r\n        mdmData.push({ key: bp.c1, value: `${bp.c2}\\n${bp.c1}` });\r\n } \r\n            });\r\n\t\t\tmdmData.sort(objSorter(\"value\"));\r\n            data[serviceKey] = mdmData;\r\n            res.status(200).send(data);\r\n          })\r\n          .catch((err) => {\r\n            var data = {};\r\n            data[serviceKey] = [];\r\n            res.status(200).send(data);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        var data = {};\r\n        data[serviceKey] = [];\r\n        res.status(200).send(data);\r\n      });\r\n  })\r\n  .catch((err) => {\r\n    var data = {};\r\n    data[serviceKey] = [];\r\n    res.status(200).send(data);\r\n  });\r\n  \r\n  var objSorter = prop => (obj1, obj2) => {\r\n        if ( obj1[prop] < obj2[prop] ){\r\n          return -1;\r\n        }\r\n        if ( obj1[prop] > obj2[prop] ){\r\n          return 1;\r\n        }\r\n        return 0;\r\n      };",
  "sys__UUID": "9a08b2ac-3105-403e-9ca9-df819ed75bc6"
}
