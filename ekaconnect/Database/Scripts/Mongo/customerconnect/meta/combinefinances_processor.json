{
  "_id": "combinefinances_processor",
  "name": "combinefinances_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "var finalData = [];\r\nvar accountData = {\r\n  method: \"GET\",\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    \"/data/12325a98-a959-4939-9005-4158d136afcd/967db9f1-f006-400f-8dee-e81692973390\",\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nfunction get_accountData() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(accountData, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nvar paymentData = {\r\n  method: \"GET\",\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    \"/data/12325a98-a959-4939-9005-4158d136afcd/4465c36c-84ab-403b-a61e-cf73a37705fe\",\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nfunction get_paymentData() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(paymentData, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nPromise.all([get_accountData(), get_paymentData()])\r\n  .then((data) => {\r\n    data[0].forEach((el) => {\r\n      let record = { ...el };\r\n      record.serialNo = `${el.payeeID}${el.bpRefNo}`;\r\n      record.cardType =\r\n        el.type == \"Accounts Payables\"\r\n          ? \"Payable Invoices\"\r\n          : \"Receivable Invoices\";\r\n      delete record[\"_id\"];\r\n      delete record.sys__updatedOn;\r\n      delete record.sys__data__state;\r\n      delete record.refType;\r\n      delete record.refTypeId;\r\n      delete record.userId;\r\n      delete record.sys__createdBy;\r\n      delete record.sys__createdOn;\r\n      delete record.object;\r\n      delete record.sys__UUID;\r\n      finalData.push(record);\r\n    });\r\n    data[1].forEach((el) => {\r\n      let record = { ...el };\r\n      record.serialNo = `${el.paymentreceiptNo}${el.bpRefNo}`;\r\n      record.cardType = \"Remittance advice\";\r\n      delete record[\"_id\"];\r\n      delete record.sys__updatedOn;\r\n      delete record.sys__data__state;\r\n      delete record.refType;\r\n      delete record.refTypeId;\r\n      delete record.userId;\r\n      delete record.sys__createdBy;\r\n      delete record.sys__createdOn;\r\n      delete record.object;\r\n      delete record.sys__UUID;\r\n      finalData.push(record);\r\n    });\r\n    console.log(finalData);\r\n    res.status(200).send(finalData);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    res.status(500).send(err);\r\n  });\r\n",
  "sys__UUID": "b62ccc68-eec0-40d7-95d2-8015bf0fea03"
}
