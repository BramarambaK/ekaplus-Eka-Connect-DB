{
  "_id": "contract_withdraw_processor",
  "name": "contract_withdraw_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "object": "46e84f42-6288-4027-b6d0-fd1c11019259",
  "snippet": "var payloadData;\r\nvar payloadDataOpenTab = [];\r\nvar withdrawnRequestId;\r\nif (!Array.isArray(req.body.bulkPayLoadData)) {\r\n  payloadData = [\r\n    (({ contractRefNo, contractItemRefNo, requestIdUnique, requestType }) => ({\r\n      contractRefNo,\r\n      contractItemRefNo,\r\n      requestIdUnique,\r\n      approvalStatus: 'Withdrawn',\r\n      isRequestActive: false,\r\n      requestType,\r\n    }))(req.body),\r\n  ];\r\n  withdrawnRequestId = req.body.requestId;\r\n} else {\r\n  payloadData = req.body.bulkPayLoadData.map(\r\n    ({ contractRefNo, contractItemRefNo, requestIdUnique, requestType }) => ({\r\n      contractRefNo: contractRefNo,\r\n      contractItemRefNo: contractItemRefNo,\r\n      requestIdUnique: requestIdUnique,\r\n      approvalStatus: 'Withdrawn',\r\n      isRequestActive: false,\r\n      requestType,\r\n    })\r\n  );\r\n  withdrawnRequestId = payloadData.length + ' request';\r\n}\r\nvar contractRequestConnectData = {\r\n  method: 'GET',\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    '/data/12325a98-a959-4939-9005-4158d136afcd/3725efac-7f2a-462b-8af0-5462e33cf544',\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    'X-TenantID': req.headers['x-tenantid'],\r\n    requestid: req.headers['requestid'] + '-processor',\r\n  },\r\n  body: {\r\n    filterData: {\r\n      filter: [\r\n        {\r\n          fieldName: 'contractRefNo',\r\n          operator: 'in',\r\n          value: [],\r\n        },\r\n        {\r\n          fieldName: 'contractItemRefNo',\r\n          operator: 'eq',\r\n          value: 1,\r\n        },\r\n        {\r\n          fieldName: 'requestType',\r\n          operator: 'in',\r\n          value: ['New contract'],\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  json: true,\r\n};\r\n\r\nfunction get_contractRequestconnectData() {\r\n  return new Promise(function (resolve, reject) {\r\n    // console.log(\"get_contractRequestconnectData Request-\" +JSON.stringify(contractRequestConnectData));\r\n    request(contractRequestConnectData, function (err, response, body) {\r\n      //   console.log(\"get_contractRequestconnectData Response-\" + JSON.stringify(body));\r\n      if (response.statusCode === 200) resolve(body);\r\n      else {\r\n        reject(err || body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nvar connectUpdateContractDomainData = {\r\n  method: 'POST',\r\n  url: req.body.propertyList.eka_connect_host + '/workflow',\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    'X-TenantID': req.headers['x-tenantid'],\r\n    requestid: req.headers['requestid'] + '-processor-delete',\r\n  },\r\n  body: {\r\n    output: {\r\n      update_contractDomainData: [],\r\n    },\r\n    task: 'update_contractDomainData',\r\n    appId: '12325a98-a959-4939-9005-4158d136afcd',\r\n    workflowTaskName: 'update_contractDomainData',\r\n  },\r\n  json: true,\r\n};\r\n\r\nconst objid = '46e84f42-6288-4027-b6d0-fd1c11019259';\r\nconst appid = '12325a98-a959-4939-9005-4158d136afcd';\r\nvar connect = {\r\n  method: 'GET',\r\n  body: {\r\n    filterData: {\r\n      filter: [\r\n        {\r\n          fieldName: 'contractItemRefNo',\r\n          value: payloadData.map((i) => i.contractItemRefNo),\r\n          operator: 'in',\r\n        },\r\n        {\r\n          fieldName: 'contractRefNo',\r\n          value: payloadData.map((i) => i.contractRefNo),\r\n          operator: 'in',\r\n        },\r\n        {\r\n          fieldName: 'requestIdUnique',\r\n          value: payloadData.map((i) => i.requestIdUnique),\r\n          operator: 'in',\r\n        },\r\n        {\r\n          fieldName: 'approvalStatus',\r\n          value: 'Awaiting review',\r\n          operator: 'eq',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  url: req.body.propertyList.eka_connect_host + '/data/' + appid + '/' + objid,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    'X-TenantID': req.headers['x-tenantid'],\r\n    requestid: req.headers['requestid'] + '-processor',\r\n  },\r\n  json: true,\r\n};\r\n\r\nfunction getRequestStatus() {\r\n  console.log('connect obj', JSON.stringify(connect));\r\n  return new Promise(function (resolve, reject) {\r\n    request(connect, function (err, response, body) {\r\n      console.log('res', JSON.stringify(body));\r\n      if (err || body.error) {\r\n        console.log('error occured ::' + body.error);\r\n        reject(body);\r\n      } else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction get_connectData(connectUrl) {\r\n  console.log('reuwst', connectUrl);\r\n  return new Promise(function (resolve, reject) {\r\n    request(connectUrl, function (err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        //   console.log('sucess 1', body);\r\n        resolve(body);\r\n      } else {\r\n        console.log('faliure 1', body);\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nconst sendError = (message, context, localizedMessage) =>\r\n  res.status(400).send({\r\n    errorCode: '004',\r\n    errorMessage: message,\r\n    errorContext: null,\r\n    errorLocalizedMessage: localizedMessage,\r\n    errors: [\r\n      {\r\n        errorCode: '004',\r\n        errorMessage: message,\r\n        errorContext: context,\r\n        errorLocalizedMessage: localizedMessage,\r\n        errors: null,\r\n      },\r\n    ],\r\n  });\r\n\r\ngetRequestStatus()\r\n  .then(async function (data) {\r\n    if (data.length == payloadData.length) {\r\n      // (async () => {\r\n      contractRequestConnectData.body.filterData.filter[0].value = payloadData\r\n        .filter((o) => o.requestType == 'Amendment')\r\n        .map((o) => o.contractRefNo);\r\n      // await get_contractRequestconnectData()\r\n      await get_contractRequestconnectData()\r\n        .then((result) => {\r\n          payloadData\r\n            .filter((o) => o.requestType == 'Amendment')\r\n            .forEach((element) => {\r\n              let out = result.find(\r\n                (o) => o.contractRefNo == element.contractRefNo\r\n              );\r\n              payloadDataOpenTab.push(\r\n                (({ contractRefNo, contractItemRefNo }) => ({\r\n                  contractRefNo,\r\n                  contractItemRefNo,\r\n                  requestIdUnique: out ? out.requestId + '-' : '-',\r\n                  approvalStatus: 'Withdrawn',\r\n                  isRequestActive: false,\r\n                }))(element)\r\n              );\r\n            });\r\n        })\r\n        .catch((err) => {\r\n          console.error(err);\r\n          res.status(400).send(err);\r\n        });\r\n\r\n      payloadData.push(...payloadDataOpenTab);\r\n      console.log('payloadData' + JSON.stringify(payloadData));\r\n      connectUpdateContractDomainData.body.output.update_contractDomainData =\r\n        payloadData;\r\n      get_connectData(connectUpdateContractDomainData)\r\n        .then((result) => {\r\n          res.status(200).send({\r\n            requestId: withdrawnRequestId,\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log('Error:', err);\r\n          res.status(500).send(err);\r\n        });\r\n      // })().catch(err => {\r\n      //   console.log('Error:', err);\r\n      //   res.status(500).send(err);\r\n      // });\r\n    } else {\r\n      sendError(\r\n        'Contract is already withdrawn please refresh the page.',\r\n        '',\r\n        'Your request was unable to be processed. Please contact the Grower Services team on 1800 447 246 if this issue persists.'\r\n      );\r\n      // res\r\n      //   .status(400)\r\n      //   .send(\r\n      //     'Your request was unable to be processed. Please contact the Grower Services team on 1800 447 246 if this issue persists.'\r\n      //   );\r\n    }\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n    res\r\n      .status(400)\r\n      .send(\r\n        'Your request was unable to be processed. Please contact the Grower Services team on 1800 447 246 if this issue persists.'\r\n      );\r\n  });",
  "sys__UUID": "009c0cee-a5c1-482b-af41-bc8cff5b0b13"
}
