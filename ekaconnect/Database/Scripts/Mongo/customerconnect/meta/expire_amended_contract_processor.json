{
  "_id": "expire_amended_contract_processor",
  "name": "expire_amended_contract_processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "const appId = '12325a98-a959-4939-9005-4158d136afcd';\r\nconst contractDomainObjId = '46e84f42-6288-4027-b6d0-fd1c11019259';\r\nvar moment = require('moment');\r\n\r\nvar expiryDate = moment\r\n  .utc(\r\n    moment().subtract(\r\n      req.body.propertyList.cargill_modified_request_expiry_time - 1,\r\n      'days'\r\n    )\r\n  )\r\n  .format();\r\nconsole.log('expiryDate:' + expiryDate);\r\n\r\nvar connectDataContractDomain = {\r\n  method: 'GET',\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    `\/data\/${appId}\/${contractDomainObjId}`,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    'X-TenantID': req.headers['x-tenantid'],\r\n  },\r\n  body: {\r\n    filterData: {\r\n      filter: [\r\n        {\r\n          fieldName: 'approvalStatus',\r\n          operator: 'eq',\r\n          value: 'Action required',\r\n        },\r\n        {\r\n          fieldName: 'sys__updatedOn',\r\n          operator: 'lt',\r\n          value: `$UTCDateTime:${expiryDate}`,\r\n        },\r\n        {\r\n          fieldName: 'isRequestedByEkaCCSystem',\r\n          operator: 'eq',\r\n          value: true,\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  json: true,\r\n};\r\n\r\nvar contractRequestConnectData = {\r\n  method: 'GET',\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    '\/data\/12325a98-a959-4939-9005-4158d136afcd\/3725efac-7f2a-462b-8af0-5462e33cf544',\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    'X-TenantID': req.headers['x-tenantid'],\r\n    requestid: req.headers['requestid'] + '-processor',\r\n  },\r\n  body: {\r\n    filterData: {\r\n      filter: [\r\n        {\r\n          fieldName: 'contractRefNo',\r\n          operator: 'in',\r\n          value: [],\r\n        },\r\n        {\r\n          fieldName: 'contractItemRefNo',\r\n          operator: 'eq',\r\n          value: 1,\r\n        },\r\n        {\r\n          fieldName: 'requestType',\r\n          operator: 'eq',\r\n          value: 'New contract',\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  json: true,\r\n};\r\nfunction get_connectData_contractDomain() {\r\n  return new Promise(function (resolve, reject) {\r\n    \/\/ console.log('ContractDomain Request - ' + connectDataContractDomain.url);\r\n    \/\/ console.log('ContractDomain Body -' + JSON.stringify(connectDataContractDomain.body));\r\n    request(connectDataContractDomain, function (err, response, body) {\r\n      \/\/ console.log('ContractDomain Response - ' + JSON.stringify(body));\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body); \/\/Success\r\n      } else {\r\n        reject(body); \/\/Failure\r\n      }\r\n    });\r\n  });\r\n}\r\nfunction get_contractRequestconnectData() {\r\n  return new Promise(function (resolve, reject) {\r\n    \/\/ console.log(\"get_contractRequestconnectData Request-\" +JSON.stringify(contractRequestConnectData));\r\n    request(contractRequestConnectData, function (err, response, body) {\r\n      \/\/   console.log(\"get_contractRequestconnectData Response-\" + JSON.stringify(body));\r\n      if (response.statusCode === 200) resolve(body);\r\n      else {\r\n        reject(err || body);\r\n      }\r\n    });\r\n  });\r\n}\r\nPromise.all([get_connectData_contractDomain()])\r\n  .then(function (result) {\r\n    var contractDomainData = result[0];\r\n    contractRequestConnectData.body.filterData.filter[0].value =\r\n      contractDomainData.map((e) => e.contractRefNo);\r\n\r\n    var contractDomainDataToBeUpdated = [];\r\n    get_contractRequestconnectData()\r\n      .then((requestconnectData) => {\r\n        for (let i = 0; i < contractDomainData.length; i++) {\r\n          let out = requestconnectData.find(\r\n            (o) => o.contractRefNo == contractDomainData[i].contractRefNo\r\n          );\r\n          contractDomainDataToBeUpdated.push(\r\n            {\r\n              contractRefNo: contractDomainData[i].contractRefNo,\r\n              contractItemRefNo: contractDomainData[i].contractItemRefNo,\r\n              requestIdUnique: contractDomainData[i].requestIdUnique,\r\n              isRequestActive: false,\r\n              approvalStatus: 'Expired',\r\n            },\r\n            {\r\n              contractRefNo: contractDomainData[i].contractRefNo,\r\n              contractItemRefNo: contractDomainData[i].contractItemRefNo,\r\n              requestIdUnique: out ? out.requestId + '-' : '-',\r\n              isRequestActive: false,\r\n              approvalStatus: 'Approved',\r\n            }\r\n          );\r\n        }\r\n\r\n        console.log(\r\n          'No. of contractDomain records expired' +\r\n            contractDomainDataToBeUpdated.length\r\n        );\r\n        res.status(200).send(contractDomainDataToBeUpdated);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        res.status(400).send(err);\r\n      });\r\n  })\r\n  .catch((err) => res.status(500).send(err));",
  "sys__UUID": "894842ee-54d2-4835-975d-00c5cab0b221",
  "type": "processor"
}
