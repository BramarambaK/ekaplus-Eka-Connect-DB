{
  "_id": "price_notifydelete_processor",
  "name": "price_notifydelete_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "object": "ab3fc628-ecbc-43e0-81cb-aa2d5b6e5c40",
  "snippet": "const appId = req.body[\"processorDetails\"][\"refTypeId\"];\r\nconst objId = req.body[\"processorDetails\"][\"object\"];\r\n\r\nvar connectMeta = {\r\n  method: \"GET\",\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    `\/meta\/app\/${appId}\/object\/${objId}`,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nvar connectData = {\r\n  method: \"GET\",\r\n  url: req.body.propertyList.eka_connect_host + `\/data\/${appId}\/${objId}`,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  body: {\r\n    filterData: {\r\n      filter: [],\r\n    },\r\n  },\r\n  json: true,\r\n};\r\n\r\nfunction get_connectMeta() {\r\n  return new Promise(function (resolve, reject) {\r\n    \/\/ console.log('ConnectMeta Request - ' + connectMeta.url);\r\n    \/\/ console.log('ConnectMeta Body -' + JSON.stringify(connectMeta.body));\r\n    request(connectMeta, function (err, response, body) {\r\n      \/\/ console.log('ConnectMeta Response -' + JSON.stringify(body));\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction get_connectData() {\r\n  return new Promise(function (resolve, reject) {\r\n    \/\/ console.log('ConnectData Request - ' + connectData.url);\r\n    console.log(\"ConnectData Body -\" + JSON.stringify(connectData.body));\r\n    request(connectData, function (err, response, body) {\r\n      \/\/ console.log('ConnectData Response -' + JSON.stringify(body));\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nlet data = req.body.bulkPayLoadData;\r\nlet finalData = [];\r\n\r\nvar uniqueFields = {};\r\nvar isAnyError = false;\r\nvar errorLog = [\r\n  \"This entire request is not commited. Please change and send request again.\",\r\n];\r\n\/\/ console.log(data);\r\nif (data) {\r\n  get_connectMeta()\r\n    .then(async (metaResult) => {\r\n      var uniqueFields = metaResult[\"uniqueFields\"];\r\n      uniqueFields.forEach((element) => {\r\n        connectData.body.filterData.filter.push({\r\n          fieldName: element,\r\n          operator: \"in\",\r\n          value: [],\r\n        });\r\n      });\r\n      for (let i = 0; i < data.length; i++) {\r\n        var uniqueFieldsCheckerInRequest = (arr, target) =>\r\n          target.every((v) => arr.includes(v));\r\n        if (uniqueFieldsCheckerInRequest(Object.keys(data[i]), uniqueFields)) {\r\n          connectData.body.filterData.filter.forEach((item) => {\r\n            if (data[i][item.fieldName])\r\n              item.value.push(data[i][item.fieldName]);\r\n          });\r\n        } else {\r\n          isAnyError = true;\r\n          errorLog.push(\r\n            \"<br>Below request does not contain all unique fields-[\" +\r\n              uniqueFields +\r\n              \"]<br>\"\r\n          );\r\n          errorLog.push(data[i]);\r\n        }\r\n      }\r\n      if (isAnyError) {\r\n        console.log(errorLog);\r\n        res\r\n          .status(500)\r\n          .send(JSON.stringify(errorLog).replace(\/,\/g, \" \").replace(\/:\/g, \"=\"));\r\n      }\r\n\r\n      await get_connectData()\r\n        .then((connectData) => {\r\n          if (connectData.length > 0) {\r\n            var count = 0;\r\n            for (let i = 0; i < data.length; i++) {\r\n              for (let j = 0; j < connectData.length; j++) {\r\n                count = 0;\r\n                for (let k = 0; k < uniqueFields.length; k++) {\r\n                  if (\r\n                    data[i][uniqueFields[k]] == connectData[j][uniqueFields[k]]\r\n                  )\r\n                    count++;\r\n                  else break;\r\n                }\r\n                if (count == uniqueFields.length) {\r\n                  data[i].sys__data__state = \"Delete\";\r\n                  data[i][\"id\"] = connectData[j][\"_id\"];\r\n                  finalData.push(data[i]);\r\n                  break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          res.status(500).send(err);\r\n        });\r\n      console.log(JSON.stringify(finalData));\r\n      res.status(200).send(finalData);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      res.status(500).send(err);\r\n    });\r\n}\r\n",
  "sys__UUID": "3a1932d9-23c3-411f-b4e4-979bc4c3121f"
}
