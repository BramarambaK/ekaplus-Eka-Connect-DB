{
  "_id": "amendticket_details_mdm_processor",
  "name": "amendticket_details_mdm_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "    req.body.mdmKeys = JSON.parse(req.body.mdmProcessorServiceKey);\r\n    const tenant = req.headers['X-TenantID'];\r\n    const listKey = req.body.mdmKeys[0].serviceKey;\r\n    const dependent = req.body.mdmKeys[0].dependsOn;\r\n    const reqBody = {\r\n      \"filterData\": {\r\n        \"filter\": [\r\n          {\r\n            \"fieldName\": \"product\",\r\n            \"value\": dependent[0],\r\n            \"operator\": \"eq\"\r\n          },\r\n          {\r\n            \"fieldName\": \"cropYear\",\r\n            \"value\": dependent[1],\r\n            \"operator\": \"eq\"\r\n          }\r\n        ]\r\n      }\r\n    }\r\n    const getVarietyList = body =>\r\n      new Promise(function (resolve, reject) {\r\n        request(\r\n          {\r\n            method: 'GET',\r\n            url:\r\n              req.body.propertyList.eka_connect_host +\r\n              '/data/12325a98-a959-4939-9005-4158d136afcd/a26737b3-a5a9-4fe9-b6f7-29218a3bc45a',\r\n            headers: {\r\n              Authorization: req.headers.authorization,\r\n              'X-TenantID': tenant\r\n            },\r\n            body,\r\n            json: true\r\n          },\r\n          function (err, response, body) {\r\n            if (response && response.statusCode >= 200 && response.statusCode <= 299) {\r\n              resolve(body);\r\n            } else {\r\n              reject(body);\r\n            }\r\n          }\r\n        );\r\n      });\r\n    const send = (status, message) => res.status(status).send(message);\r\n\r\n\r\n    getVarietyList(reqBody).then((success) => {\r\n      if (success && success.length > 0) {\r\n        const data = {};\r\n        let varietyNameListKey = success.filter(item=>item.varietyName).map(item => {\r\n          if (item && item.varietyName && item.varietyName.length > 1) {\r\n            return {\r\n              key: item.varietyName,\r\n              value: item.varietyName\r\n            }\r\n          }\r\n        });\r\n      \r\n        data[listKey] =  [...new Map(varietyNameListKey.map((item) => [item[\"key\"], item])).values()].sort((a, b) => a.key.localeCompare(b.key));\r\n        res.status(200).send(data);\r\n      } else {\r\n        send(400, 'Variety not available');\r\n      }\r\n    }).catch(err => {\r\n        console.log(err);\r\n        send(500, 'Something went wrong.')\r\n    })",
  "sys__UUID": "0b6fad53-3e42-4110-8ab5-3ad436fa1ecf"
}
