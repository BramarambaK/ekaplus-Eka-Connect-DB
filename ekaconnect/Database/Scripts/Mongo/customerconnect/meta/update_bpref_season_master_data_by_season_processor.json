{
    "_id" : "update_bpref_season_master_data_by_season_processor",
    "name" : "update_bpref_season_master_data_by_season_processor",
    "refType" : "app",
    "refTypeId" : "12325a98-a959-4939-9005-4158d136afcd",
    "snippet" : "const appId = '12325a98-a959-4939-9005-4158d136afcd';\r\nconst seasonMasterDataObjId = '4aa9caf8-8dd8-49a7-8fad-a229c376327c';\r\nconst bprefSeasonDetailsMasterDataObjId = '6d10c2dd-c5c5-451e-88f5-3de80e151bc3';\r\nconst bprefSeasonMasterDataObjId = '1f3e680b-f3dd-418a-8fd4-888e38714cc3';\r\n\r\nvar connectSeasonMasterData = {\r\n    method: \"GET\",\r\n    url: req.body.propertyList.eka_connect_host +\r\n        `\/data\/${appId}\/${seasonMasterDataObjId}`,\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"]\r\n    },\r\n    body: {\r\n        \"pagination\": {\r\n            \"start\": 0,\r\n            \"limit\": 2\r\n        },\r\n        sort: {\r\n            \"season\": \"Desc\"\r\n        },\r\n    },\r\n    json: true\r\n};\r\n\r\nvar connectBPRefSeasonDetailsMasterData = {\r\n    method: \"GET\",\r\n    url: req.body.propertyList.eka_connect_host +\r\n        `\/data\/${appId}\/${bprefSeasonDetailsMasterDataObjId}`,\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"]\r\n    },\r\n    body: {\r\n        filterData: {\r\n            filter: [{\r\n                    fieldName: \"bpRefNo\",\r\n                    operator: \"exists\",\r\n                    value: true\r\n                },\r\n                {\r\n                    fieldName: \"bpExternalCode\",\r\n                    operator: \"exists\",\r\n                    value: true\r\n                },\r\n                {\r\n                    fieldName: \"marketType\",\r\n                    operator: \"ne\",\r\n                    value: \"Contract\"\r\n                },\r\n                {\r\n                    fieldName: \"signed\",\r\n                    operator: \"eq\",\r\n                    value: \"Y\"\r\n                },\r\n                {\r\n                    fieldName: \"isActive\",\r\n                    operator: \"eq\",\r\n                    value: \"Y\"\r\n                },\r\n                {\r\n                    fieldName: \"season\",\r\n                    operator: \"exists\",\r\n                    value: true\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    json: true\r\n};\r\n\r\nvar connectBPRefSeasonMasterData = {\r\n  method: 'GET',\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    `\/data\/${appId}\/${bprefSeasonMasterDataObjId}`,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    'X-TenantID': req.headers['x-tenantid'],\r\n  },\r\n  body: {},\r\n  json: true,\r\n};\r\nfunction get_connectData_SeasonMasterData() {\r\n    return new Promise(function(resolve, reject) {\r\n        console.log('SeasonMasterData Request - ' + connectSeasonMasterData.url);\r\n        console.log('SeasonMasterData Body -' + JSON.stringify(connectSeasonMasterData.body));\r\n        request(connectSeasonMasterData, function(err, response, body) {\r\n            \/\/ console.log('SeasonMasterData Response - ' + JSON.stringify(body));\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body); \/\/Success\r\n            } else {\r\n                reject(body); \/\/Failure\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\nfunction get_connectData_bprefSeasonDetailsMasterData() {\r\n    return new Promise(function(resolve, reject) {\r\n        console.log('BPRefSeasonDetailsMasterData Request - ' + connectBPRefSeasonDetailsMasterData.url);\r\n        console.log('BPRefSeasonDetailsMasterData Body -' + JSON.stringify(connectBPRefSeasonDetailsMasterData.body));\r\n        request(connectBPRefSeasonDetailsMasterData, function(err, response, body) {\r\n            \/\/ console.log('BPRefSeasonDetailsMasterData Response - ' + JSON.stringify(body));\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body); \/\/Success\r\n            } else {\r\n                reject(body); \/\/Failure\r\n            }\r\n        });\r\n    });\r\n};\r\nfunction get_connectData(connectData) {\r\n  return new Promise(function (resolve, reject) {\r\n    console.log('Request url- ' + connectData.url);\r\n    console.log('Body -' + JSON.stringify(connectData.body));\r\n    request(connectData, function (err, response, body) {\r\n      \/\/ console.log('SeasonMasterData Response - ' + JSON.stringify(body));\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body); \/\/Success\r\n      } else {\r\n        reject(body); \/\/Failure\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nPromise.all([get_connectData_SeasonMasterData(), get_connectData_bprefSeasonDetailsMasterData(),get_connectData(connectBPRefSeasonMasterData)]).then(function(result) {\r\n\r\n    const SeasonMasterDataList = result[0].map(item => item[\"season\"]);\r\n    const bprefSeasonDetailsMasterDataList = result[1];\r\n    const bprefSeasonMasterDataList = result[2];\r\n    console.log(\"bprefSeasonDetailsMasterDataList-\" + JSON.stringify(bprefSeasonDetailsMasterDataList));\r\n    var bprefSeasonMasterData = [];\r\n    const bprefSeasonDetailsMasterDataListGrouped = Array.from(\r\n        bprefSeasonDetailsMasterDataList.reduce((m, o) => {\r\n            var key = JSON.stringify(Object.assign(...['bpRefNo', 'bpExternalCode'].map(k => ({ [k]: o[k] }))));\r\n            return m.set(key, (m.get(key) || []).concat(o.season));\r\n        }, new Map),\r\n        ([key, season]) => Object.assign(JSON.parse(key), { season })\r\n    );\r\n    console.log(\"bprefSeasonDetailsMasterDataListGrouped-\" + JSON.stringify(bprefSeasonDetailsMasterDataListGrouped));\r\n    bprefSeasonDetailsMasterDataListGrouped.forEach((bprefSeasonDetailsMasterData) => {\r\n        var bprefCurrentPreviousSeason = SeasonMasterDataList\r\n            .filter(bprefSeason => bprefSeasonDetailsMasterData[\"season\"].includes(bprefSeason))\r\n            .map(season => typeof season === \"undefined\" || !season ? \"\" : season);\r\n        bprefSeasonMasterData.push({\r\n            \"bpRefNo\": bprefSeasonDetailsMasterData[\"bpRefNo\"],\r\n            \"bpExternalCode\": bprefSeasonDetailsMasterData[\"bpExternalCode\"],\r\n            \"currentSeason\": typeof bprefCurrentPreviousSeason[0] === \"undefined\" || !bprefCurrentPreviousSeason[0] ? \"\" : bprefCurrentPreviousSeason[0],\r\n            \"previousSeason\": typeof bprefCurrentPreviousSeason[1] === \"undefined\" || !bprefCurrentPreviousSeason[1] ? \"\" : bprefCurrentPreviousSeason[1]\r\n        });\r\n    });\r\n    bprefSeasonMasterDataList\r\n    .filter(\r\n      (item) =>\r\n        typeof bprefSeasonMasterData.find(\r\n          (item1) =>\r\n            item.bpRefNo == item1.bpRefNo &&\r\n            item.bpExternalCode == item1.bpExternalCode\r\n        ) === 'undefined'\r\n    )\r\n    .forEach((item) => {\r\n      bprefSeasonMasterData.push({\r\n        bpRefNo: item.bpRefNo,\r\n        bpExternalCode: item.bpExternalCode,\r\n        currentSeason: '',\r\n        previousSeason: '',\r\n      });\r\n    });\r\n    console.log(JSON.stringify(bprefSeasonMasterData));\r\n    res.status(200).send(bprefSeasonMasterData);\r\n}).catch(err => {console.log('err',err);res.status(500).send(err);});",
    "sys__UUID" : "43a6387f-1cf2-460f-812c-6d0a889f68b3",
    "type" : "processor"
}