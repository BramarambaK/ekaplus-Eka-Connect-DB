{
  "_id": "price_object",
  "sys__UUID": "ab3fc628-ecbc-43e0-81cb-aa2d5b6e5c40",
  "name": "price_object",
  "label": "Price Object",
  "type": "object",
  "version": "1",
  "objectAction": {
    "CREATE": "POST",
    "UPDATE": "PUT",
    "READ": "GET",
    "LISTVIEW": "GET",
    "DELETE": "DELETE"
  },
  "translatableKeys": [],
  "uniqueFields": [
    "priceId",
    "bpRefNo",
    "product",
    "site",
    "quality",
    "season",
    "bpExternalCode"
  ],
  "fields": {
    "bpRefNo": {
      "bpRefNo": "Account",
      "labelKey": "bpRefNo",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "ngrFilterKey",
      "children": ["season", "clientTimezoneOffset"]
    },
    "bpName": {
      "bpName": "BP Name",
      "labelKey": "bpName",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "bpExternalCode": {
      "bpExternalCode": "BP External Code",
      "labelKey": "bpExternalCode",
      "type": "textbox",
      "isRequired": true,
      "dataType": "String"
    },
    "bpExternalName": {
      "bpExternalName": "BP External Name",
      "labelKey": "bpExternalName",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "season": {
      "season": "Season",
      "labelKey": "season",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "harvestSeasonKey",
      "parent": ["bpRefNo"],
      "children": ["quality", "pricingOption"]
    },
    "priceId": {
      "priceId": "Price Id",
      "labelKey": "priceId",
      "serialNumber": {
        "startsWith": "1",
        "fieldNumericLength": "7",
        "customFormat": "return ('${marketType}'.toUpperCase() == 'CASH') ? 'CASH' : ('${marketType}'.toUpperCase() == 'CONTRACT' || '${marketType}'.toUpperCase() == 'DELIVERED') ? 'CONTRACT' : 'POOL'",
        "isSerialNumberNeededInCustomFormat": true
      }
    },
    "externalPriceId": {
      "externalPriceId": "Price Id sent by external system",
      "labelKey": "externalPriceId",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "product": {
      "product": "Commodity",
      "labelKey": "product",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "commodityKey",
      "children": ["quality"]
    },
    "region": {
      "region": "Port zone",
      "labelKey": "region",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String",
      "serviceKey": "portzoneKey",
      "children": ["site"]
    },
    "pricelimits": {
      "pricelimits": "Enter prices",
      "labelKey": "pricelimits",
      "type": "formarray",
      "isRequired": false,
      "dataType": "formarray"
    },
    "quality": {
      "quality": "Grade",
      "labelKey": "quality",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "gradeKey",
      "parent": ["season"],
      "children": ["site"]
    },
    "site": {
      "site": "Site",
      "labelKey": "site",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "siteKey",
      "parent": ["quality"]
    },
    "pricingOption": {
      "pricingOption": "Pricing option",
      "labelKey": "pricingOption",
      "type": "dropdown",
      "isRequired": true,
      "dataType": "String",
      "serviceKey": "pricingOptionKey",
      "parent": ["season"],
      "children": ["sustainable"]
    },
    "purchased": {
      "purchased": "Purchased (MT)",
      "labelKey": "purchased",
      "type": "textbox",
      "isRequired": false,
      "dataType": "Number",
      "customRangeFilter": "rangefilter"
    },
    "previousDayPurchased": {
      "previousDayPurchased": "Previous Day Purchased Quantity",
      "labelKey": "previousDayPurchased",
      "type": "textbox",
      "isRequired": false,
      "dataType": "Number"
    },
    "price": {
      "price": "Price (/MT)",
      "labelKey": "price",
      "type": "textbox",
      "isRequired": true,
      "dataType": "Number",
      "customRangeFilter": "rangefilter",
      "validationRegex": "^[0-9]*\\.?[0-9]{0,2}$",
      "inputMode": "decimal"
    },
    "startDate": {
      "startDate": "Start date",
      "labelKey": "startDate",
      "type": "datepicker",
      "isRequired": false,
      "dataType": "String",
      "UIupdates": {
        "visibility": "return '${data.publishI}' == 'Publish immediately' ? false : true",
        "value": "return '${selectedData.publishI}' == 'Publish immediately' ? moment().format('YYYY-MM-DD') : data.data.startDate ? moment(data.data.startDate).format('YYYY-MM-DD') : moment().format('YYYY-MM-DD')"
      },
      "parent": ["publishI"],
      "readonlyInput": true,
      "dateformat": "dd/mm/yy",
      "minimumDate": "return new Date()"
    },
    "startTime": {
      "startTime": "Start time",
      "labelKey": "startTime",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String",
      "propertyKey": "enterTime",
      "UIupdates": {
        "visibility": "return '${data.publishI}' == 'Publish immediately' ? false : true",
        "value": "return '${selectedData.publishI}' == 'Publish immediately' ? moment().format('HH:00') :'${data.startTime}' == 'null' ? moment().format('HH:00') : ('${data.startTime}' != '' ? '${data.startTime}' : moment().add(1, 'hours').format('HH:mm'))"
      },
      "parent": ["publishI"],
      "validationRegex": "^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$"
    },
    "publishImmediately": {
      "publishImmediately": "Select publish option",
      "labelKey": "publishImmediately",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String",
      "value": true,
      "UIupdates": {
        "value": "return '${selectedData.publishI}' == 'Publish immediately'"
      }
    },
    "formattedStartDate": {
      "formattedStartDate": "Start date",
      "labelKey": "formattedStartDate",
      "type": "textbox",
      "isRequired": false,
      "dataType": "Date",
      "customDateFilter": "datefilter"
    },
    "formattedEnddate": {
      "formattedEnddate": "End date",
      "labelKey": "formattedEnddate",
      "type": "textbox",
      "isRequired": false,
      "dataType": "Date",
      "customDateFilter": "datefilter"
    },
    "formattedStarttime": {
      "formattedStarttime": "Start date",
      "labelKey": "formattedStarttime",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String"
    },
    "formattedEndtime": {
      "formattedEndtime": "End date",
      "labelKey": "formattedEndtime",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String"
    },
    "endDate": {
      "endDate": "End date",
      "labelKey": "endDate",
      "isRequired": false,
      "type": "datepicker",
      "dataType": "String",
      "readonlyInput": true,
      "dateformat": "dd/mm/yy",
      "minimumDate": "return new Date()"
    },
    "endTime": {
      "endTime": "End time",
      "labelKey": "endTime",
      "type": "dropdown",
      "isRequired": false,
      "dataType": "String",
      "propertyKey": "enterTime",
      "validationRegex": "^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$"
    },
    "quantityUnit": {
      "quantityUnit": "Quantity Unit",
      "labelKey": "quantityUnit",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "ngrFilter": {
      "ngrFilter": "Filter",
      "labelKey": "ngrFilter",
      "type": "multiselect",
      "serviceKey": "ngrFilterKey"
    },
    "ngrGCSFilter": {
      "ngrFilter": "Filter",
      "labelKey": "ngrGCSFilter",
      "type": "multiselect",
      "serviceKey": "ngrGCSFilterKey"
    },
    "status": {
      "status": "Price Status",
      "labelKey": "status",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String"
    },
    "sustainable": {
      "sustainable": "Sustainable",
      "labelKey": "sustainable",
      "type": "checkbox",
      "isRequired": false,
      "UIupdates": {
        "disability": "return ('${pricingOption}' == '' || '${pricingOption}'.includes('Cash'))? false : true"
      },
      "parent": ["pricingOption"],
      "dataType": "boolean"
    },
    "publishI": {
      "publishI": "Select publish option",
      "labelKey": "publishI",
      "type": "radio",
      "isRequired": false,
      "dataType": "String",
      "propertyKey": "publishIorSFP",
      "children": ["startDate", "startTime", "publishImmediately"],
      "value": "Publish immediately"
    },
    "scheduleFP": {
      "scheduleFP": "Schedule Future Price",
      "labelKey": "scheduleFP",
      "type": "radio",
      "isRequired": false,
      "dataType": "String",
      "serviceKey": "scheduleFP"
    },
    "formcheckbox": {
      "formcheckbox": "What would you like to update?",
      "labelKey": "formcheckbox",
      "type": "checkbox",
      "isRequired": false,
      "dataType": "String",
      "propertyKey": "Update_Price_Question1",
      "children": ["formradio1", "formradio2"]
    },
    "formradio1": {
      "formradio1": "How would you like to update prices?",
      "labelKey": "formradio1",
      "type": "radio",
      "isRequired": false,
      "dataType": "String",
      "propertyKey": "Update_Price_Question2",
      "UIupdates": {
        "visibility": "return ('${formcheckbox}'.includes('Prices')) ? true : false"
      },
      "children": ["amountchanged"]
    },
    "amountchanged": {
      "amountchanged": "Amount change ($/MT)",
      "labelKey": "amountchanged",
      "type": "textbox",
      "isRequired": false,
      "dataType": "Number",
      "UIupdates": {
        "visibility": "return (('${formradio1}' === 'Increase or decrease by fixed amount' || '${formradio1}' === 'Set a single price') && '${formradio1}' != 'One-By-One') ? true : false"
      },
      "step": "0.5"
    },
    "formradio2": {
      "formradio2": "How would you like to update end date/time?",
      "labelKey": "formradio2",
      "type": "radio",
      "dataType": "String",
      "propertyKey": "Update_Price_Question3",
      "UIupdates": {
        "visibility": "return ('${formcheckbox}'.includes('End date/time')) ? true : false"
      },
      "children": ["enddatetimedescription", "updateenddate", "updateendtime"]
    },
    "enddatetimedescription": {
      "enddatetimedescription": "label",
      "labelKey": "enddatetimedescription",
      "type": "textbox",
      "isRequired": false,
      "dataType": "string",
      "UIupdates": {
        "visibility": "return ('${formradio2}' === 'Set single date and time') ? true : false"
      }
    },
    "updateenddate": {
      "updateenddate": "End date",
      "labelKey": "updateenddate",
      "type": "datepicker",
      "dataType": "Date",
      "UIupdates": {
        "visibility": "return ('${formradio2}' === 'Set single date and time') ? true : false"
      },
      "readonlyInput": true,
      "dateformat": "dd/mm/yy"
    },
    "updateendtime": {
      "updateendtime": "End time",
      "labelKey": "updateendtime",
      "type": "dropdown",
      "dataType": "String",
      "propertyKey": "enterTime",
      "UIupdates": {
        "visibility": "return ('${formradio2}' === 'Set single date and time') ? true : false"
      },
      "validationRegex": "^(2[0-3]|[01]?[0-9]):([0-5]?[0-9])$"
    },
    "pricelistingactive": {
      "pricelistingactive": "Price limits",
      "labelKey": "pricelimits",
      "type": "formarray",
      "isRequired": false,
      "dataType": "formarray"
    },
    "pricelistingscheduled": {
      "pricelistingscheduled": "Price limits",
      "labelKey": "pricelimits",
      "type": "formarray",
      "isRequired": false,
      "dataType": "formarray"
    },
    "clientTimezoneOffset": {
      "clientTimezoneOffset": "Client Timezone Offset",
      "labelKey": "clientTimezoneOffset",
      "type": "textbox",
      "dataType": "Number",
      "UIupdates": {
        "value": "return new Date().getTimezoneOffset()"
      },
      "parent": ["bpRefNo"]
    },
    "startDateTime": {
      "startDateTime": "Start Date Time",
      "labelKey": "startDateTime",
      "type": "date",
      "sourceDateFormat": "yyyy-MM-dd'T'HH:mm:ss'Z'",
      "isRequired": false,
      "dataType": "Date"
    },
    "endDateTime": {
      "endDateTime": "End Date Time",
      "labelKey": "endDateTime",
      "type": "date",
      "sourceDateFormat": "yyyy-MM-dd'T'HH:mm:ss'Z'",
      "isRequired": false,
      "dataType": "Date"
    },
    "marketType": {
      "marketType": "Market Type",
      "labelKey": "marketType",
      "type": "textbox",
      "isRequired": true,
      "dataType": "String",
      "sourceTextFormat": {
        "textFormatLabel": "CASH/POOL/CONTRACT/DELIVERED",
        "textFormat": "(?i)CASH|POOL|CONTRACT|DELIVERED"
      }
    },
    "submittedBy": {
      "submittedBy": "Submitted by",
      "labelKey": "submittedBy",
      "type": "textbox",
      "dataType": "String"
    },
    "withdrawnBy": {
      "withdrawnBy": "Withdrawn By",
      "labelKey": "withdrawnBy",
      "type": "textbox",
      "dataType": "String"
    },
    "isInternalBp": {
      "isInternalBp": "Is Internal BP",
      "labelKey": "isInternalBp",
      "type": "textbox",
      "sourceTextFormat": {
        "textFormatLabel": "Y/<blank>",
        "textFormat": "^$|\\s*$|Y"
      },
      "isRequired": false,
      "dataType": "String"
    },
    "isProcessing": {
      "isProcessing": "Is Processing",
      "labelKey": "isProcessing",
      "type": "checkbox",
      "isRequired": false,
      "dataType": "boolean"
    },
    "deliveryStartDate": {
      "deliveryStartDate": "Delivery Start Date",
      "labelKey": "deliveryStartDate",
      "type": "date",
      "sourceDateFormat": "yyyy-MM-dd'T'HH:mm:ss'Z'",
      "isRequired": false,
      "dataType": "Date",
      "isMandatory": "if('${marketType}' == 'Contract') { return true} else { return false}"
    },
    "deliveryEndDate": {
      "deliveryEndDate": "Delivery End Date",
      "labelKey": "deliveryEndDate",
      "type": "date",
      "sourceDateFormat": "yyyy-MM-dd'T'HH:mm:ss'Z'",
      "isRequired": false,
      "dataType": "Date",
      "isMandatory": "if('${marketType}' == 'Contract') { return true} else { return false}"
    },
    "paymentTerm": {
      "paymentTerm": "Payment Term",
      "labelKey": "paymentTerm",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String",
      "isMandatory": "if('${marketType}' == 'Contract') { return true} else { return false}"
    },
    "profitCenter": {
      "profitCenter": "Profit Center",
      "labelKey": "profitCenter",
      "type": "textbox",
      "isRequired": false,
      "dataType": "String",
      "isMandatory": "if('${marketType}' == 'Contract') { return true} else { return false}"
    }
  }
}
