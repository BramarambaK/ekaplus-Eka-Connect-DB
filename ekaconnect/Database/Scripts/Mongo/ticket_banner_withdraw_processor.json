{
  "_id": "ticket_banner_withdraw_processor",
  "name": "ticket_banner_withdraw_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "\r\n    var payloadData = [];\r\n\r\n    var ticketRequestConnectData = {\r\n      method: 'GET',\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/data/12325a98-a959-4939-9005-4158d136afcd/a26737b3-a5a9-4fe9-b6f7-29218a3bc45a',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        requestid: req.headers['requestid'] + '-processor'\r\n      },\r\n      body: {\r\n        filterData: {\r\n          filter: [\r\n            {\r\n              fieldName: 'ticketRefNo',\r\n              operator: 'eq',\r\n              value: `${req.body.ticketRefNo}`\r\n            },\r\n            {\r\n              fieldName: 'cropYear',\r\n              operator: 'eq',\r\n              value: `${req.body.cropYear}`\r\n            },\r\n            {\r\n              fieldName: 'requestId',\r\n              operator: 'eq',\r\n              value: `${req.body.requestId}`\r\n            },\r\n            {\r\n              fieldName: 'requestStatus',\r\n              operator: 'ne',\r\n              value: `${req.body.requestStatus}`\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      json: true\r\n    };\r\n\r\n    function get_ticketRequestConnectData() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(ticketRequestConnectData, function(err, response, body) {\r\n          if (body.length == 0) {\r\n            console.log(response);\r\n            resolve(body);\r\n          } else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    var connectUpdateTicketRequestData = {\r\n      method: 'POST',\r\n      url: req.body.propertyList.eka_connect_host + '/workflow',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        requestid: req.headers['requestid'] + '-processor-withdraw'\r\n      },\r\n      body: {\r\n        output: {\r\n          elastic_updateTicketOfferData_withoutOfferExecution_internal: []\r\n        },\r\n        task: 'elastic_updateTicketOfferData_withoutOfferExecution_internal',\r\n        appId: '12325a98-a959-4939-9005-4158d136afcd',\r\n        workflowTaskName: 'elastic_updateTicketOfferData_withoutOfferExecution_internal'\r\n      },\r\n      json: true\r\n    };\r\n\r\n    function get_connectData(connectUrl) {\r\n      return new Promise(function(resolve, reject) {\r\n        request(connectUrl, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          } else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    (async () => {\r\n      get_ticketRequestConnectData()\r\n        .then(result => {\r\n          payloadData = [\r\n            (({ ticketRefNo, requestId, cropYear }) => ({\r\n              ticketRefNo,\r\n              requestId,\r\n              cropYear,\r\n              requestStatus: 'Withdrawn',\r\n              isRequestActive: false\r\n            }))(req.body)\r\n          ];\r\n\r\n          connectUpdateTicketRequestData.body.output.elastic_updateTicketOfferData_withoutOfferExecution_internal = payloadData;\r\n\r\n          get_connectData(connectUpdateTicketRequestData)\r\n            .then(result => {\r\n              result = {\r\n                withdrawRequestInvalid: false,\r\n                requestId: req.body.requestId\r\n              };\r\n              res.status(200).send(result);\r\n            })\r\n            .catch(err => {\r\n              res.status(500).send(err);\r\n            });\r\n        })\r\n        .catch(err => {\r\n          send(400, {\r\n            withdrawRequestInvalid: true,\r\n            errorCode: err.Status,\r\n            errorMessage: 'Cannot withdraw the request',\r\n            errorContext: 'This is null',\r\n            errorLocalizedMessage: 'Cannot withdraw the request'\r\n          });\r\n        });\r\n    })();\r\n  ",
  "object": "a26737b3-a5a9-4fe9-b6f7-29218a3bc45a",
  "sys__UUID": "3bb20f14-c61b-44e1-923c-28770d3ad5d5"
}
