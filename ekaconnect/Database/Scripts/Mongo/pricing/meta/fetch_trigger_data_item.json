{
  "_id": "fetch_trigger_data_item",
  "name": "fetch_trigger_data_item",
  "type": "processor",
  "refType": "app",
  "refTypeId": "84d7b167-1d9f-406d-b974-bea406a25f9a",
  "snippet": "\r\n    var dbody = {\r\n      appId: '84d7b167-1d9f-406d-b974-bea406a25f9a',\r\n      workFlowTask: 'trigger_data_list',\r\n      filterData: {\r\n        filter: [\r\n          {\r\n            fieldName: 'internalContractItemRefNo',\r\n            value: [req.body.queryParams.internalContractItemRefNo],\r\n            operator: 'in'\r\n          }\r\n        ]\r\n      }\r\n    };\r\n    var gmrfomplatform = {\r\n      method: 'GET',\r\n      url: req.body.propertyList.platform_url + '/api/contract/gmr/' + req.body.queryParams.internalContractItemRefNo,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_gmrfomplatform() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(gmrfomplatform, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body); //Success\r\n          } else {\r\n            if (body.hasOwnProperty('status') && body['status'] == 'Failed') {\r\n              resolve(body);\r\n            }\r\n            reject(body); //Failure\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var defaultdata = {\r\n      method: 'POST',\r\n      url: req.body.propertyList.eka_connect_host + '/workflow/data',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true,\r\n      body: dbody\r\n    };\r\n    function get_defaultData() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(defaultdata, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body); //Success\r\n          } else {\r\n            reject(body); //Failure\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var defaultdata1 = {\r\n      method: 'POST',\r\n      url: req.body.propertyList.eka_connect_host + '/workflow/data',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true,\r\n      body: {\r\n        appId: '5d907cd2-7785-4d34-bcda-aa84b2158415',\r\n        workFlowTask: 'gmr_data_list',\r\n        filterData: {\r\n          filter: [\r\n            {\r\n              fieldName: 'internalContractItemRefNo',\r\n              value: [req.body.queryParams.internalContractItemRefNo],\r\n              operator: 'in'\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    };\r\n    function get_defaultData1() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(defaultdata1, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body); //Success\r\n          } else {\r\n            reject(body); //Failure\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function calculategmrfixed(pnfno, pfnarr) {\r\n      let fina = 0;\r\n      for (let i = 0; i < pfnarr.length; i++) {\r\n        if (Number(pfnarr[i].fixatonNumber.split('-')[1]) == Number(pnfno.split('-')[1])) {\r\n          fina = fina + Number(pfnarr[i].fixationQty);\r\n        }\r\n      }\r\n      return fina;\r\n    }\r\n    function calculategmrunfixfixed(pnfno, pfnarr, total) {\r\n      let fina = 0;\r\n      for (let i = 0; i < pfnarr.length; i++) {\r\n        if (Number(pfnarr[i].fixatonNumber.split('-')[1]) <= Number(pnfno.split('-')[1])) {\r\n          fina = fina + Number(pfnarr[i].fixationQty);\r\n        }\r\n      }\r\n      return Number(total) - Number(fina);\r\n    }\r\n    function findRefno(intrefno, arr) {\r\n      let obj = arr.find(o => o.internalRefNo === intrefno);\r\n      return obj && obj.hasOwnProperty('refNo') ? obj['refNo'] : intrefno;\r\n    }\r\n    function findStatus(intrefno, arr) {\r\n      let obj = arr.find(o => o.internalRefNo === intrefno);\r\n      return obj && obj.hasOwnProperty('status') ? obj['status'] : '';\r\n    }\r\n\r\n    console.log('about to enter');\r\n    get_gmrfomplatform()\r\n      .then(function(platform) {\r\n        console.log('platform call pass');\r\n        get_defaultData().then(function(previousFixation) {\r\n          console.log('previousFixation call pass');\r\n          get_defaultData1().then(function(gmr) {\r\n            console.log('gmr call pass');\r\n            let finalData = [];\r\n            let gmravailable = {};\r\n            for (let i = 0; i < previousFixation.data.length; i++) {\r\n              let fixationNo = previousFixation.data[i].fixationRefNo;\r\n              gmravailable[fixationNo] = false;\r\n              if (previousFixation.data[i]['itemQty'] && previousFixation.data[i]['itemQtyUnit'])\r\n                previousFixation.data[i]['itemQty'] =\r\n                  previousFixation.data[i]['itemQty'] + ' ' + previousFixation.data[i]['itemQtyUnit'];\r\n              if (previousFixation.data[i]['itemFixedQty'] && previousFixation.data[i]['itemQtyUnit'])\r\n                previousFixation.data[i]['itemFixedQty'] =\r\n                  previousFixation.data[i]['itemFixedQty'] + ' ' + previousFixation.data[i]['itemQtyUnit'];\r\n              if (previousFixation.data[i]['itemUnfixedQty'] && previousFixation.data[i]['itemQtyUnit'])\r\n                previousFixation.data[i]['itemUnfixedQty'] =\r\n                  previousFixation.data[i]['itemUnfixedQty'] + ' ' + previousFixation.data[i]['itemQtyUnit'];\r\n              if (previousFixation.data[i]['itemFixedQtyAvailable'] && previousFixation.data[i]['itemQtyUnit'])\r\n                previousFixation.data[i]['itemFixedQtyAvailable'] =\r\n                  previousFixation.data[i]['itemFixedQtyAvailable'] + ' ' + previousFixation.data[i]['itemQtyUnit'];\r\n              if (previousFixation.data[i]['price'] && previousFixation.data[i]['priceUnitIdDisplayName'])\r\n                previousFixation.data[i]['price'] =\r\n                  previousFixation.data[i]['price'] + ' ' + previousFixation.data[i]['priceUnitIdDisplayName'];\r\n              if (previousFixation.data[i]['calculatedPrice'] && previousFixation.data[i]['priceUnitIdDisplayName'])\r\n                previousFixation.data[i]['calculatedPrice'] =\r\n                  Number(previousFixation.data[i]['calculatedPrice']).toFixed(5) +\r\n                  ' ' +\r\n                  previousFixation.data[i]['priceUnitIdDisplayName'].split('/')[0];\r\n              console.log('Passed');\r\n              if (\r\n                previousFixation.data[i]['quantityunitconversion'] &&\r\n                previousFixation.data[i]['execution'] == 'Post- exection'\r\n              )\r\n                previousFixation.data[i]['GMRConvFactor'] = Number(previousFixation.data[i]['quantityunitconversion']);\r\n              for (let j = 0; j < gmr.data.length; j++) {\r\n                for (let k = 0; k < gmr.data[j].fixationUsed.length; k++) {\r\n                  if (fixationNo == gmr.data[j].fixationUsed[k].fixatonNumber) {\r\n                    gmravailable[fixationNo] = true;\r\n                    if (platform.hasOwnProperty('items')) {\r\n                      previousFixation.data[i]['gmrRefNoDisplayName'] = findRefno(gmr.data[j].gmrRefNo, platform.items);\r\n                      previousFixation.data[i]['gmrInvoiceStatus'] = findStatus(gmr.data[j].gmrRefNo, platform.items);\r\n                      previousFixation.data[i]['gmrQty'] =  Number(gmr.data[j]['gmrQty'])\r\n                    }\r\n\r\n                    previousFixation.data[i]['gmrQtyFixed'] = calculategmrfixed(fixationNo, gmr.data[j].fixationUsed);\r\n                    previousFixation.data[i]['gmrQtyAvailable'] = calculategmrunfixfixed(\r\n                      fixationNo,\r\n                      gmr.data[j].fixationUsed,\r\n                      Number(gmr.data[j]['gmrQty'])\r\n                    );\r\n                    if (gmr.data[j].hasOwnProperty('qtyUnitVal'))\r\n                      previousFixation.data[i]['gmrQtyUnit'] = gmr.data[j]['qtyUnitVal'];\r\n                    finalData.push({\r\n                      ...gmr.data[j],\r\n                      ...previousFixation.data[i]\r\n                    });\r\n                  }\r\n                }\r\n              }\r\n              if (!gmravailable[fixationNo]) {\r\n                finalData.push(previousFixation.data[i]);\r\n              }\r\n            }\r\n            res.status(200).send(finalData);\r\n          });\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        res.status(500).send('gmr Api Failed');\r\n      });\r\n  ",
  "sys__UUID": "f20e0350-6934-45da-9bd2-b3840c534df5",
  "sys__createdBy": "avinash@ekaplus.com"
}
