{
    "_id" : "fetch_trigger_data",
    "name" : "fetch_trigger_data",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "84d7b167-1d9f-406d-b974-bea406a25f9a",
    "snippet" : "\r\n  var dbody = {\r\n    appId: \"84d7b167-1d9f-406d-b974-bea406a25f9a\",\r\n    workFlowTask: \"trigger_data_list\"\r\n  };\r\n  var defaultdata = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_connect_host + '\/workflow\/data',\r\n    headers: {\r\n      Authorization: req.headers.authorization,\r\n      'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true,\r\n    body: dbody\r\n  };\r\n  function get_defaultData() {\r\n    return new Promise(function(resolve, reject) {\r\n      request(defaultdata, function(err, response, body) {\r\n        if (err || body.error) reject(body);\r\n        else {\r\n          resolve(body);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  var defaultdata1 = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_connect_host + '\/workflow\/data',\r\n    headers: {\r\n      Authorization: req.headers.authorization,\r\n      'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true,\r\n    body: {\r\n      appId: '5d907cd2-7785-4d34-bcda-aa84b2158415',\r\n      workFlowTask: 'gmr_data_list',\r\n    }\r\n  };\r\n  function get_defaultData1() {\r\n    return new Promise(function(resolve, reject) {\r\n      request(defaultdata1, function(err, response, body) {\r\n        if (err || body.error) reject(body);\r\n        else {\r\n          resolve(body);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  get_defaultData().then(function(previousFixation) {\r\n    get_defaultData1().then(function(gmr) {\r\n      let finalData = []\r\n      let gmravailable = {}\r\n      for(let i=0;i<previousFixation.data.length;i++){\r\n        let fixationNo = previousFixation.data[i].fixationRefNo\r\n        gmravailable[fixationNo] = false\r\n        if(previousFixation.data[i]['itemQty'] && previousFixation.data[i]['itemQtyUnit']) previousFixation.data[i]['itemQty']=  previousFixation.data[i]['itemQty'] + ' ' + previousFixation.data[i]['itemQtyUnit']  \r\n        if(previousFixation.data[i]['itemFixedQty'] && previousFixation.data[i]['itemQtyUnit']) previousFixation.data[i]['itemFixedQty']=  previousFixation.data[i]['itemFixedQty'] + ' ' + previousFixation.data[i]['itemQtyUnit']\r\n        if(previousFixation.data[i]['itemUnfixedQty'] && previousFixation.data[i]['itemQtyUnit']) previousFixation.data[i]['itemUnfixedQty']=  previousFixation.data[i]['itemUnfixedQty'] + ' ' + previousFixation.data[i]['itemQtyUnit']\r\n        if(previousFixation.data[i]['itemFixedQtyAvailable'] && previousFixation.data[i]['itemQtyUnit']) previousFixation.data[i]['itemFixedQtyAvailable']= previousFixation.data[i]['itemFixedQtyAvailable'] + ' ' + previousFixation.data[i]['itemQtyUnit']\r\n        if(previousFixation.data[i]['price'] && previousFixation.data[i]['priceU']) previousFixation.data[i]['price']= previousFixation.data[i]['price'] + ' ' + previousFixation.data[i]['priceU']\r\n        if(previousFixation.data[i]['calculatedPrice'] && previousFixation.data[i]['priceU']) previousFixation.data[i]['calculatedPrice']= Number(previousFixation.data[i]['calculatedPrice']).toFixed(5) + ' ' + previousFixation.data[i]['priceU'].split('\/')[0]\r\n        for(let j=0;j<gmr.data.length;j++){\r\n        for(let k=0;k<gmr.data[j].fixationUsed.length;k++){\r\n          if(fixationNo == gmr.data[j].fixationUsed[k].fixatonNumber){\r\n            gmravailable[fixationNo] = true\r\n            previousFixation.data[i]['gmrQtyFixed'] =  gmr.data[j]['gmrFixedQty']\r\n            previousFixation.data[i]['gmrQtyAvailable'] =  gmr.data[j]['gmrUnFixedQty']\r\n            finalData.push({\r\n              ...gmr.data[j],\r\n              ...previousFixation.data[i]\r\n            })\r\n          }\r\n        }\r\n      }\r\n      if(!gmravailable[fixationNo]){\r\n        finalData.push(previousFixation.data[i])\r\n      }\r\n    } \r\n      res.status(200).send(finalData);\r\n    })\r\n  })\r\n",
    "sys__UUID" : "7bd5effc-1c9f-4e17-a28e-6c012e502174",
    "sys__createdOn" : ISODate("2019-06-24T13:35:31.281Z"),
    "sys__createdBy" : "avinash@ekaplus.com"
}