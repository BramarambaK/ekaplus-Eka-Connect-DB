{
    "_id" : "Listing_table_manual",
    "componentType" : "UserTask",
    "objectAction" : "READ",
    "refType" : "app",
    "refTypeId" : "84d7b167-1d9f-406d-b974-bea406a25f9a",
    "label" : "Trigger Price List",
    "type" : "workflow",
    "processorInfo" : {
        "processorId" : "5086e4a4-7815-4455-9386-7c3f90d058d4"
    },
    "payLoad" : "completeData",
    "layout" : {
        "tableEditing" : true,
        "selectionMode" : "none",
        "selection" : "row",
        "name" : "list",
        "rows" : 10,
        "options" : {
            "filter" : false,
            "lastUpdated" : false,
            "search" : false,
            "reload" : false,
            "columnFilter" : false,
            "reset" : false,
            "export" : false
        },
        "getInitialData" : true,
        "theme" : "theme-grid-white",
        "useQueryParams" : true,
        "pagination" : false,
        "dropdownDecisions" : true,
        "limitHeight" : true
    },
    "decisions" : [],
    "labelKey" : "Trigger price List",
    "fields" : [ 
        {
            "filter" : false,
            "edit" : true,
            "sort" : false,
            "key" : "fixationDate",
            "width" : "100px",
            "style" : {
                "height" : "28px"
            }
        }, 
        {
            "filter" : false,
            "edit" : true,
            "sort" : false,
            "key" : "price",
            "width" : "100px",
            "event" : "  let total = 0\r\n        let c=0\r\n\t\tlet subfactor = 1\r\n\t\t\t  if(data.createtriggerpricev2.currencyconversionstring){\r\n\t\t\t    subfactor = Number(data.createtriggerpricev2.currencyconversionstring.split('&')[1])\r\n\t\t\t  }\r\n        for (let i = 0; i < data.listingmanualtable.length; i++) {   \r\n            if(\tdata.createtriggerpricev2.currencyconversion.split(' -> ')[0] == data.createtriggerpricev2.currencyconversion.split(' -> ')[1])\r\n               { data.listingmanualtable[i].fxConversion\t = 'same'\r\n                data.listingmanualtable[i].fxrate\t = 1}\r\n            else{\r\n              data.listingmanualtable[i].fxConversion\t = 'different'\r\n            }    \r\n            if(data.listingmanualtable[i].fxrate && data.listingmanualtable[i].price ){\r\n              total = total + (data.listingmanualtable[i].price)*(data.listingmanualtable[i].fxrate)*subfactor\r\n              c = c+1\r\n            }\r\n    }\r\nlet qtyunit = data.createtriggerpricev2.execution=='Pre-execution' ? data.createtriggerpricev2.quantityunitconversion:1\r\nlet differential = 0\t\r\nif(data.createtriggerpricev2.differential &&  data.createtriggerpricev2.differential!='') differential = data.createtriggerpricev2.differential\r\ndata.createtriggerpricev2.avgPrice = ((total /( Number(c)*Number(qtyunit))) + Number(differential)).toFixed(data.createtriggerpricev2.decimalPrecision)\r\nif(isNaN(data.createtriggerpricev2.avgPrice)) data.createtriggerpricev2.avgPrice = ''\r\nelse\r\ndata.createtriggerpricev2.avgPrice = data.createtriggerpricev2.avgPrice.toString()",
            "style" : {
                "height" : "20px"
            }
        }, 
        {
            "filter" : false,
            "edit" : true,
            "sort" : false,
            "key" : "fxrate",
            "event" : "  let total = 0\r\n        let c=0\r\n\t\tlet subfactor = 1\r\n\t\t\t  if(data.createtriggerpricev2.currencyconversionstring){\r\n\t\t\t    subfactor = Number(data.createtriggerpricev2.currencyconversionstring.split('&')[1])\r\n\t\t\t  }\r\n        for (let i = 0; i < data.listingmanualtable.length; i++) {   \r\n            if(\tdata.createtriggerpricev2.currencyconversion.split(' -> ')[0] == data.createtriggerpricev2.currencyconversion.split(' -> ')[1])\r\n               { data.listingmanualtable[i].fxConversion\t = 'same'\r\n                data.listingmanualtable[i].fxrate\t = 1}\r\n            else{\r\n              data.listingmanualtable[i].fxConversion\t = 'different'\r\n            }    \r\n            if(data.listingmanualtable[i].fxrate && data.listingmanualtable[i].price ){\r\n              total = total + (data.listingmanualtable[i].price)*(data.listingmanualtable[i].fxrate)*subfactor\r\n              c = c+1\r\n            }\r\n    }\r\nlet qtyunit = data.createtriggerpricev2.execution=='Pre-execution' ? data.createtriggerpricev2.quantityunitconversion:1\r\nlet differential = 0\t\r\nif(data.createtriggerpricev2.differential &&  data.createtriggerpricev2.differential!='') differential = data.createtriggerpricev2.differential\r\ndata.createtriggerpricev2.avgPrice = ((total /( Number(c)*Number(qtyunit))) + Number(differential)).toFixed(data.createtriggerpricev2.decimalPrecision)\r\nif(isNaN(data.createtriggerpricev2.avgPrice)) data.createtriggerpricev2.avgPrice = ''\r\nelse\r\ndata.createtriggerpricev2.avgPrice = data.createtriggerpricev2.avgPrice.toString()",
            "width" : "100px",
            "style" : {
                "height" : "20px"
            }
        }
    ],
    "taskId" : "listingmanualtable",
    "object" : "f90bdb99-9f27-4c50-a111-ee68ba425728"
}