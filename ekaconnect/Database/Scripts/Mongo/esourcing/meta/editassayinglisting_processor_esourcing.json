{
    "_id" : "editassayinglistingProcessor_esourcing",
    "name" : "editassayinglisting",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "7e484cae-36aa-46dc-b9ae-33c8d246f056",
    "snippet" : "\r\n    if (req.body.selectedData && req.body.selectedData.selected && req.body.selectedData.selected['supplierlisting']) {\r\n      var intGmrRefNo = req.body.selectedData.selected['supplierlisting']['internalGmrRefNo'];\r\n      var gmrRefNo = req.body.selectedData.selected['supplierlisting']['gmrRefNo'];\r\n      if (!req.body.selectedData.selected['editassayinglisting']) {\r\n        var userinfo = {\r\n          method: 'GET',\r\n          url: req.body.propertyList.eka_connect_host + '\/api\/userinfo',\r\n          headers: {\r\n            'Content-Type': 'application\/json',\r\n            Accept: 'application\/json',\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid']\r\n          }\r\n        }\r\n        function get_userinfo() {\r\n          return new Promise(function (resolve, reject) {\r\n            console.log('Request - ' + userinfo.url);\r\n            request(userinfo, function (err, response, body) {\r\n              console.log('Response - ' + body);\r\n              if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                console.log('Success');\r\n                resolve(body);\r\n              } else {\r\n                console.log(body.error);\r\n                reject(err || body)\r\n              }\r\n            });\r\n          });\r\n        }\r\n\r\n        get_userinfo().then(function (result) {\r\n          console.log(result);\r\n          result = JSON.parse(result);\r\n          console.log(result);\r\n          let ctrmCpName = req.body.selectedData.selected['supplierlisting'].cpName;\r\n          if (result && result.userType && result.userType == 3) {\r\n            let minMaxProvisionalValues = []; \/\/``\r\n            let pcdId = req.body.selectedData.selected['viewgmrbasic'].pcdiId;\r\n            let deliveryItemRefNo = req.body.selectedData.selected['supplierlisting']['deliveryItemRefNo'];\r\n\r\n            if (result.businessPartys && Array.isArray(result.businessPartys) && result.businessPartys.length > 0) {\r\n              let match = result.businessPartys.includes(ctrmCpName);\r\n              if (match) {\r\n                get_collection().then(function (result) {\r\n                  \/\/ added for minMax validation in non-admin users\r\n                  var qualityMDM = {\r\n                    method: \"POST\",\r\n                    url: req.body.propertyList.eka_supplierconnect_host + \"\/collection\/mdm\/entity\",\r\n                    headers: {\r\n                      \"Content-Type\": \"application\/json\",\r\n                      Accept: \"application\/json\",\r\n                      Authorization: req.headers.authorization,\r\n                      \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n                    },\r\n                    body: [{\r\n                      \"pcdiId\": pcdId,\r\n                      \"entity\": \"contractQuality\",\r\n                      \"deliveryItem\": deliveryItemRefNo\r\n                    }],\r\n                    json: true,\r\n                  };\r\n                  function get_qualityMDM_assaying() {\r\n                    return new Promise(function (resolve, reject) {\r\n                      console.log(\"Request - \" + qualityMDM.url);\r\n                      console.log(\"Payload -\" + JSON.stringify(qualityMDM));\r\n                      request(qualityMDM, function (err, response, body) {\r\n                        console.log(\"Request Body - \" + JSON.stringify(body));\r\n\r\n                        if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                          console.log('Success');\r\n                          resolve(body);\r\n                        } else {\r\n                          console.log(body.error);\r\n                          reject(err || body)\r\n                        }\r\n                      });\r\n                    });\r\n                  }\r\n                  get_qualityMDM_assaying().then((qualityMdmResponse) => {\r\n                    let qualityIdMdm = qualityMdmResponse.contractQuality[0].key;\r\n                    var assayList = {\r\n                      method: 'POST',\r\n                      url: req.body.propertyList.eka_supplierconnect_host + '\/collection\/assayList',\r\n                      headers: {\r\n                        'Content-Type': 'application\/json',\r\n                        Accept: 'application\/json',\r\n                        Authorization: req.headers.authorization,\r\n                        'X-TenantID': req.headers['x-tenantid']\r\n                      },\r\n                      body: {\r\n                        \"pcdiId\": pcdId,\r\n                        \"qualityId\": qualityIdMdm\r\n                      },\r\n                      json: true\r\n                    };\r\n                    function get_minMaxAssayList() {\r\n                      return new Promise(function (resolve, reject) {\r\n                        console.log('Request - ' + assayList.url);\r\n                        request(assayList, function (err, response, body) {\r\n                          console.log('Response - ' + body);\r\n                          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                            resolve(body);\r\n                          } else {\r\n                            console.log(body.error);\r\n                            reject(err || body)\r\n                          }\r\n                        });\r\n                      });\r\n                    }\r\n                    get_minMaxAssayList().then(function (minMaxResult) {\r\n                      let minMaxAssayValues = minMaxResult.data;\r\n                      minMaxProvisionalValues = minMaxAssayValues;\r\n                      get_collection().then(function (result) {\r\n                        result[\"minMaxAssayValues\"] = minMaxProvisionalValues;\r\n                        res.status(200).send(result);\r\n                      }).catch(function (err) {\r\n                        console.log(err);\r\n                      })\r\n                    });\r\n                  })\r\n                  \/\/ added for minMax validation in non-admin users\r\n                  \/\/ res.status(200).send(result);\/\/old\r\n                }).catch(function (err) {\r\n                  console.log(err);\r\n                })\r\n              } else {\r\n                res.status(400).send({ \"error\": \"user is not authorised\" })\r\n              }\r\n            } else {\r\n              res.status(400).send({ \"error\": \"user is not authorised\" })\r\n            }\r\n          } else {\r\n            if (result && result.permCodes && Array.isArray(result.permCodes) && result.permCodes.length > 0) {\r\n              let checkpermcode = result.permCodes.includes('ADMIN_FARMER_APPROVAL');\r\n              if (checkpermcode) {\r\n\r\n                let intGmrRefNo = req.body.selectedData.selected['supplierlisting'].internalGmrRefNo;\r\n                let pcdId = '';\r\n                let minMaxProvisionalValues = [];\r\n\r\n                var viewgmr = {\r\n                  method: \"POST\",\r\n                  url: req.body.propertyList.eka_connect_host + \"\/workflow\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application\/json\",\r\n                    Accept: \"application\/json\",\r\n                    Authorization: req.headers.authorization,\r\n                    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n                  },\r\n                  body: {\r\n                    appId: \"7e484cae-36aa-46dc-b9ae-33c8d246f056\",\r\n                    workflowTaskName: \"viewgmrdata_SC\",\r\n                    task: \"viewgmrdata_SC\",\r\n                    payLoadData: \"\",\r\n                    output: {\r\n                      ['viewgmrdata_SC']: {\r\n                        ['intGmrRefNo']: intGmrRefNo,\r\n                      },\r\n                    },\r\n                  },\r\n                  json: true,\r\n                };\r\n\r\n                function get_viewgmr_assaying() {\r\n                  return new Promise(function (resolve, reject) {\r\n                    console.log(\"Request - \" + viewgmr.url);\r\n                    console.log(\"Payload -\" + JSON.stringify(viewgmr));\r\n                    request(viewgmr, function (err, response, body) {\r\n                      console.log(\"Request Body - \" + JSON.stringify(body));\r\n\r\n                      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                        console.log('Success');\r\n                        resolve(body);\r\n                      } else {\r\n                        console.log(body.error);\r\n                        reject(err || body)\r\n                      }\r\n                    });\r\n                  });\r\n                }\r\n\r\n                get_viewgmr_assaying().then((viewgmrResponse) => {\r\n\r\n                  pcdId = viewgmrResponse.data.pcdiId;\r\n                  let deliveryItemRefNo = viewgmrResponse.data.deliveryItemRefNo;\r\n\r\n                  var qualityMDM = {\r\n                    method: \"POST\",\r\n                    url: req.body.propertyList.eka_supplierconnect_host + \"\/collection\/mdm\/entity\",\r\n                    headers: {\r\n                      \"Content-Type\": \"application\/json\",\r\n                      Accept: \"application\/json\",\r\n                      Authorization: req.headers.authorization,\r\n                      \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n                    },\r\n                    body: [{\r\n                      \"pcdiId\": pcdId,\r\n                      \"entity\": \"contractQuality\",\r\n                      \"deliveryItem\": deliveryItemRefNo\r\n                    }],\r\n                    json: true,\r\n                  };\r\n\r\n                  function get_qualityMDM_assaying() {\r\n                    return new Promise(function (resolve, reject) {\r\n                      console.log(\"Request - \" + qualityMDM.url);\r\n                      console.log(\"Payload -\" + JSON.stringify(qualityMDM));\r\n                      request(qualityMDM, function (err, response, body) {\r\n                        console.log(\"Request Body - \" + JSON.stringify(body));\r\n\r\n                        if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                          console.log('Success');\r\n                          resolve(body);\r\n                        } else {\r\n                          console.log(body.error);\r\n                          reject(err || body)\r\n                        }\r\n                      });\r\n                    });\r\n                  }\r\n\r\n                  get_qualityMDM_assaying().then((qualityMdmResponse) => {\r\n                    let MDMdata = qualityMdmResponse;\r\n                    let qualityIdMdm = qualityMdmResponse.contractQuality[0].key;\r\n\r\n                    var assayList = {\r\n                      method: 'POST',\r\n                      url: req.body.propertyList.eka_supplierconnect_host + '\/collection\/assayList',\r\n                      headers: {\r\n                        'Content-Type': 'application\/json',\r\n                        Accept: 'application\/json',\r\n                        Authorization: req.headers.authorization,\r\n                        'X-TenantID': req.headers['x-tenantid']\r\n                      },\r\n                      body: {\r\n                        \"pcdiId\": pcdId,\r\n                        \"qualityId\": qualityIdMdm\r\n                      },\r\n                      json: true\r\n                    };\r\n\r\n                    function get_minMaxAssayList() {\r\n                      return new Promise(function (resolve, reject) {\r\n                        console.log('Request - ' + assayList.url);\r\n                        request(assayList, function (err, response, body) {\r\n                          console.log('Response - ' + body);\r\n                          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                            resolve(body);\r\n                          } else {\r\n                            console.log(body.error);\r\n                            reject(err || body)\r\n                          }\r\n                        });\r\n                      });\r\n                    }\r\n                    get_minMaxAssayList().then(function (minMaxResult) {\r\n                      let minMaxAssayValues = minMaxResult.data;\r\n                      minMaxProvisionalValues = minMaxAssayValues;\r\n\r\n                      get_collection().then(function (result) {\r\n\r\n                        result[\"minMaxAssayValues\"] = minMaxProvisionalValues;\r\n                        res.status(200).send(result);\r\n                      }).catch(function (err) {\r\n                        console.log(err);\r\n                      })\r\n\r\n                    });\r\n                  })\r\n                })\r\n\r\n\r\n              } else {\r\n                res.status(400).send({ \"error\": \"user is not authorised\" })\r\n              }\r\n            }\r\n          }\r\n        }).catch(function (err) {\r\n          console.log(err);\r\n        })\r\n        var collection = {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_supplierconnect_host + '\/collection\/assayAndStockList',\r\n          headers: {\r\n            'Content-Type': 'application\/json',\r\n            Accept: 'application\/json',\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid']\r\n          },\r\n          body: {\r\n            intGmrRefNo: intGmrRefNo,\r\n            gmrRefNo: gmrRefNo\r\n          },\r\n          json: true\r\n        };\r\n\r\n        function get_collection() {\r\n          return new Promise(function (resolve, reject) {\r\n            console.log('Request - ' + collection.url);\r\n            request(collection, function (err, response, body) {\r\n              console.log('Response - ' + body);\r\n\r\n              if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                console.log('Success');\r\n                resolve(body);\r\n              } else {\r\n                console.log(body.error);\r\n                reject(err || body)\r\n              }\r\n            });\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (req.body.selectedData && req.body.selectedData.editGmr) {\r\n      \/\/ existing assaying\r\n      delete req.body.selectedData.editGmr;\r\n      var emailUser = {\r\n        method: 'POST',\r\n        url: req.body.propertyList.eka_supplierconnect_host + '\/collection\/sendGMREmail',\r\n        headers: {\r\n          'Content-Type': 'application\/json',\r\n          Accept: 'application\/json',\r\n          Authorization: req.headers.authorization,\r\n          'X-TenantID': req.headers['x-tenantid']\r\n        },\r\n        body: {\r\n          \"qualityName\": req.body.selectedData['qualityName'],\r\n          \"cpName\": req.body.selectedData['cpName'],\r\n          \"incoLocation\": req.body.selectedData['incoLocation'],\r\n          \"GmrRefNo\": req.body.selectedData['GmrRefNo'],\r\n          \"subject\": \"gmr_edit_subject\",\r\n          \"mail_body\": \"gmr_edit_mailbody\",\r\n          \"gmr_mail_fromAddr\": \"gmr_mail_fromAddr\"\r\n        },\r\n        json: true\r\n      }\r\n\r\n      var userinfo = {\r\n        method: 'GET',\r\n        url: req.body.propertyList.eka_connect_host + '\/api\/userinfo',\r\n        headers: {\r\n          'Content-Type': 'application\/json',\r\n          Accept: 'application\/json',\r\n          Authorization: req.headers.authorization,\r\n          'X-TenantID': req.headers['x-tenantid']\r\n        }\r\n      }\r\n\r\n      function get_emailuser() {\r\n        return new Promise(function (resolve, reject) {\r\n          console.log('Request - ' + emailUser.url);\r\n          request(emailUser, function (err, response, body) {\r\n            console.log('Response - ' + body);\r\n\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n              console.log('Success');\r\n              resolve(body);\r\n            } else {\r\n              console.log(body.error);\r\n              reject(err || body)\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      function get_userinfo() {\r\n        return new Promise(function (resolve, reject) {\r\n          console.log('Request - ' + userinfo.url);\r\n          request(userinfo, function (err, response, body) {\r\n            console.log('Response - ' + body);\r\n\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n              console.log('Success');\r\n              resolve(body);\r\n            } else {\r\n              console.log(body.error);\r\n              reject(err || body)\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n\r\n      var d = new Date();\r\n      req.body.selectedData['portalUpdatedDate'] = d;\r\n      delete req.body.selectedData['qualityName'];\r\n      delete req.body.selectedData['cpName'];\r\n      delete req.body.selectedData['incoLocation'];\r\n      delete req.body.selectedData['GmrRefNo'];\r\n      var shipment = {\r\n        method: 'POST',\r\n        url: req.body.propertyList.eka_ctrm_host + '\/api\/logistic\/shipment',\r\n        headers: {\r\n          'Content-Type': 'application\/json',\r\n          Accept: 'application\/json',\r\n          Authorization: req.headers.authorization,\r\n          'X-TenantID': req.headers['x-tenantid']\r\n        },\r\n        body: req.body.selectedData,\r\n        json: true\r\n      };\r\n\r\n      function get_shipment() {\r\n        return new Promise(function (resolve, reject) {\r\n          console.log('Request - ' + shipment.url);\r\n          request(shipment, function (err, response, body) {\r\n            console.log('Response - ' + body);\r\n\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n              console.log('Success');\r\n              resolve(body);\r\n            } else {\r\n              console.log(body.error);\r\n              reject(err || body)\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      get_userinfo().then(function (result) {\r\n        result = JSON.parse(result);\r\n        console.log(result);\r\n        req.body.selectedData[\"portalUserDetails\"] = {\r\n          \"contactDetails\": \"\",\r\n          \"bankDetails\": \"\",\r\n          \"userName\": result.userName,\r\n          \"createFirstName\": result.firstName,\r\n          \"createLastName\": result.lastName,\r\n          \"updateFirstName\": result.firstName,\r\n          \"updateLastName\": result.lastName,\r\n          \"email\": result.email,\r\n          \"mobile\": \"\",\r\n          \"phone\": \"\",\r\n          \"fax\": \"\",\r\n          \"address\": \"\",\r\n          \"country\": \"\",\r\n          \"state\": \"\",\r\n          \"city\": \"\",\r\n          \"zipcode\": \"\",\r\n          \"website\": \"\"\r\n        }\r\n\r\n        get_shipment().then(function (result) {\r\n          emailUser.body['supplierName'] = req.body.selectedData[\"portalUserDetails\"]['updateFirstName'] + \" \" + req.body.selectedData[\"portalUserDetails\"]['updateLastName'];\r\n          emailUser.body['gmr_updated_date'] = result.updatedDate;\r\n          get_emailuser().then(function (result) {\r\n            console.log(result);\r\n          })\r\n          res.status(200).send(result);\r\n        })\r\n      })\r\n    }",
    "sys__UUID" : "1c8f1a9b-9798-4693-ad7f-432c4d3cc073"
}
