{
  "_id": "filterassay_dropdown_processor_esourcing",
  "name": "filterassay_dropdown",
  "refType": "app",
  "refTypeId": "7e484cae-36aa-46dc-b9ae-33c8d246f056",
  "snippet": "    var shipment = {\r\n      method: 'POST',\r\n      url: req.body.propertyList.eka_ctrm_host + '/api/logistic/finalAssayContractList',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json'\r\n      },\r\n      json: true\r\n    };\r\n    // for same dropdowns\r\n    function get_shipment(body = {}) {\r\n      shipment['body'] = body;\r\n      return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + shipment.url);\r\n        request(shipment, function (err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n\t\t  alphaNumericSort(body);\r\n            resolve(body);\r\n          } else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var connect = {\r\n      method: 'GET',\r\n      url: req.body.propertyList.eka_connect_host + '/api/userinfo',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    // suppliers for non admin users\r\n    function get_userinfo1() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + connect.url);\r\n        request(connect, function (err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            console.log('Success');\r\n            let businessPartiesArr = []\r\n            if (body.hasOwnProperty(\"businessPartyNames\") && body.hasOwnProperty(\"bpRefNums\")) {\r\n              for (let i = 0; i < body.businessPartyNames.length; i++) {\r\n                businessPartiesArr.push({ key: body.bpRefNums[i], value: body.businessPartyNames[i] })\r\n              }\r\n            }\r\n            body[\"businessPartiesArr\"] = businessPartiesArr;\r\n            body.businessPartiesArr.sort((a, b) => a['value'].toLowerCase().localeCompare(b['value'].toLowerCase()));\r\n            // body.businessPartys.sort((a, b) => a.localeCompare(b, undefined, { sensitivity: 'base' }));\r\n            resolve(body);\r\n          }\r\n          else reject(body);\r\n\r\n        });\r\n      });\r\n    }\r\n    // In case of admin user, all suppliers shown.\r\n    var adminPlatform = {\r\n      method: 'POST',\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/collectionmapper/7e484cae-36aa-46dc-b9ae-33c8d246f056/User_Info/fetchCollectionRecords',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        'Content-Type': 'application/json',\r\n        ttl: 0\r\n      },\r\n      body: {\r\n        collectionName: 'Business Partners',\r\n        getAllRecords: true\r\n      },\r\n      json: true\r\n    };\r\n    function getadminData() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + adminPlatform.url);\r\n        request(adminPlatform, function (err, response, body) {\r\n          console.log('Response - ' + body);\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            console.log('Success');\r\n            // body.sort((a, b) => (a['BP Name'] > b['BP Name']) ? 1 : -1);\r\n            // irrespective of case\r\n            body.sort((a, b) => a['BP Name'].toLowerCase().localeCompare(b['BP Name'].toLowerCase()));\r\n            console.log('body sort', body);\r\n            resolve(body);\r\n          }\r\n          else reject(body);\r\n\r\n        });\r\n      });\r\n    }\r\n\tconst alphaNumericSort = (arr = []) => {\r\n   const sorter = (a, b) => {\r\n      const isNumber = (v) => (+v).toString() === v;\r\n      const aPart = a.match(/\\d+|\\D+/g);\r\n      const bPart = b.match(/\\d+|\\D+/g);\r\n      let i = 0; let len = Math.min(aPart.length, bPart.length);\r\n      while (i < len && aPart[i] === bPart[i]) { i++; };\r\n         if (i === len) {\r\n            return aPart.length - bPart.length;\r\n      };\r\n      if (isNumber(aPart[i]) && isNumber(bPart[i])) {\r\n         return aPart[i] - bPart[i];\r\n      };\r\n      return aPart[i].localeCompare(bPart[i]); };\r\n      arr.sort(sorter);\r\n};\r\n    var mdmData = {\r\n      supplier: [],\r\n      contractItem: []\r\n    };\r\n    getadminData()\r\n      .then(adminData => {\r\n        get_userinfo1()\r\n          .then(data => {\r\n            console.log(data);\r\n            if (data.userType == 3) {\r\n              // data.businessPartys.forEach(item => { // for name\r\n              data.businessPartiesArr.forEach(item => {\r\n                mdmData.supplier.push({\r\n                  // for Name\r\n                  // key: item.key,\r\n                  // value: item.value\r\n                  // for id\r\n                  key: item.key,\r\n                  value: item.value\r\n                });\r\n              });\r\n            } else {\r\n              adminData.forEach(item => {\r\n                mdmData.supplier.push({\r\n                  key: item['BP Ref No.'],\r\n                  value: item['BP Name']\r\n                });\r\n              });\r\n            }\r\n            if (\r\n              req &&\r\n              req.body &&\r\n              req.body.selectedData &&\r\n              req.body.selectedData.filterassay &&\r\n              req.body.selectedData.filterassay.supplier\r\n            ) {\r\n              let shipmentBody = {};\r\n              shipmentBody = { cpId: req.body.selectedData.filterassay.supplier };\r\n              // for same dropdowns\r\n              get_shipment(shipmentBody)\r\n                .then(contracts => {\r\n\t\t\t\t          console.log('Response - ' + contracts);\r\n\r\n                  for (var i = 0; i < contracts.length; i++) {\r\n                    mdmData.contractItem.push({ key: contracts[i], value: contracts[i] });\r\n                  }\r\n                  res.status(200).send(mdmData);\r\n                })\r\n                .catch(err => {\r\n                  res.status(500).send(err);\r\n                });\r\n            } else {\r\n              res.status(200).send(mdmData);\r\n            }\r\n          })\r\n          .catch(err => {\r\n            res.status(500).send(err);\r\n          });\r\n      })\r\n      .catch(err => {\r\n        res.status(500).send(err);\r\n      });\r\n\r\n ",
  "sys__UUID": "e509d06d-2409-493c-8b66-9f005b7e4d20",
  "type": "processor"
}
