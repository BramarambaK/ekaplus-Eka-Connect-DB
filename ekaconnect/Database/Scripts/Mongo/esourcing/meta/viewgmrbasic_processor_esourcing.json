{
    "_id": "viewGMRBasicProcessor_esourcing",
    "name": "viewgmrbasic",
    "type": "processor",
    "refType": "app",
    "refTypeId": "7e484cae-36aa-46dc-b9ae-33c8d246f056",
    "snippet": " var moment = require(\"moment\");\r\n    \/\/  var prevData = req.body.selectedData.selected.finalassaycomposite ? req.body.selectedData.selected.finalassaycomposite : req.body.selectedData.selected.invoicelisting ? req.body.selectedData.selected.invoicelisting : req.body.selectedData.selected.supplierlisting;\r\n    \/\/  var intGmrRefNo = prevData[\"internalGmrRefNo\"];\r\n    \/\/  var gmrRefNo = prevData[\"gmrRefNo\"];\r\n    \/\/  var iseconomicValue = req.body.selectedData.selected.isEconomicValue || false;```\r\n    if (req.body.selectedData.selected.selected) {\r\n      var prevData = req.body.selectedData.selected.selected.viewgmrfinalassayUpdated  ? req.body.selectedData.selected.selected.viewgmrfinalassayUpdated  : req.body.selectedData.selected.selected.invoicelisting ? req.body.selectedData.selected.selected.invoicelisting : req.body.selectedData.selected.selected.supplierlisting;\r\n    } else {\r\n      var prevData = req.body.selectedData.selected.viewgmrfinalassayUpdated  ? req.body.selectedData.selected.viewgmrfinalassayUpdated  : req.body.selectedData.selected.invoicelisting ? req.body.selectedData.selected.invoicelisting : req.body.selectedData.selected.supplierlisting;\r\n    }\r\n    var intGmrRefNo = prevData[\"internalGmrRefNo\"];\r\n    var gmrRefNo = prevData[\"gmrRefNo\"];\r\n    var iseconomicValue = req.body.selectedData.isEconomicValue || false;\r\n\r\n    var collection = {\r\n      method: \"POST\",\r\n      url:\r\n        req.body.propertyList.eka_supplierconnect_host + \"\/collection\/assayAndStockList\",\r\n      headers: {\r\n        \"Content-Type\": \"application\/json\",\r\n        Accept: \"application\/json\",\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n      },\r\n      body: {\r\n        ['intGmrRefNo']: intGmrRefNo,\r\n        ['gmrRefNo']: gmrRefNo,\r\n      },\r\n      json: true,\r\n    };\r\n    Date.prototype.monthName = function () {\r\n      return this.toUTCString().split(\" \")[2];\r\n    };\r\n\r\n    var viewgmr = {\r\n      method: \"POST\",\r\n      url: req.body.propertyList.eka_connect_host + \"\/workflow\",\r\n      headers: {\r\n        \"Content-Type\": \"application\/json\",\r\n        Accept: \"application\/json\",\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n      },\r\n      body: {\r\n        appId: \"7e484cae-36aa-46dc-b9ae-33c8d246f056\",\r\n        workflowTaskName: \"viewgmrdata_SC\",\r\n        task: \"viewgmrdata_SC\",\r\n        payLoadData: \"\",\r\n        output: {\r\n          ['viewgmrdata_SC']: {\r\n            ['intGmrRefNo']: intGmrRefNo,\r\n          },\r\n        },\r\n      },\r\n      json: true,\r\n    };\r\n\r\n    var activityLog = {\r\n      method: \"POST\",\r\n      url: req.body.propertyList.eka_connect_host + \"\/workflow\",\r\n      headers: {\r\n        \"Content-Type\": \"application\/json\",\r\n        Accept: \"application\/json\",\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n      },\r\n      body: {\r\n        appId: \"7e484cae-36aa-46dc-b9ae-33c8d246f056\",\r\n        workflowTaskName: \"viewactivitylogsdata_SC\",\r\n        task: \"viewactivitylogsdata_SC\",\r\n        payLoadData: \"\",\r\n        output: {\r\n          viewactivitylogsdata_SC: {\r\n            ['internalGMRRefNo']: intGmrRefNo,\r\n          },\r\n        },\r\n      },\r\n      json: true,\r\n    };\r\n\r\n    var assayAndStockListWithEconomcVal = {\r\n      method: \"POST\",\r\n      url: req.body.propertyList.eka_supplierconnect_host + \"\/collection\/assayAndStockListWithEconomcVal\",\r\n      headers: {\r\n        \"Content-Type\": \"application\/json\",\r\n        Accept: \"application\/json\",\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"]\r\n      },\r\n      body: {\r\n        ['intGmrRefNo']: intGmrRefNo,\r\n        ['gmrRefNo']: gmrRefNo\r\n      },\r\n      json: true\r\n    }\r\n    function get_assayAndStockListWithEconomcVal() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log(\"Request - \" + assayAndStockListWithEconomcVal.url);\r\n        console.log(\"Payload -\" + JSON.stringify(assayAndStockListWithEconomcVal));\r\n        request(assayAndStockListWithEconomcVal, function (err, response, body) {\r\n          console.log(\"Request Body - \" + JSON.stringify(body));\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function get_activitylog() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log(\"Request - \" + activityLog.url);\r\n        console.log(\"Payload -\" + JSON.stringify(activityLog));\r\n        request(activityLog, function (err, response, body) {\r\n          console.log(\"Request Body - \" + JSON.stringify(body));\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function get_collection() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log(\"Request - \" + collection.url);\r\n        console.log(\"Payload -\" + JSON.stringify(collection));\r\n        request(collection, function (err, response, body) {\r\n          console.log(\"Request Body - \" + JSON.stringify(body));\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function get_viewgmr() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log(\"Request - \" + viewgmr.url);\r\n        console.log(\"Payload -\" + JSON.stringify(viewgmr));\r\n        request(viewgmr, function (err, response, body) {\r\n          console.log(\"Request Body - \" + JSON.stringify(body));\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    var connectGmr = {\r\n      method: \"GET\",\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        \"\/data\/\" +\r\n        req.body.appId +\r\n        \"\/\" +\r\n        req.body.selectedData.objectId +\r\n        \"?GmrRefNo=\" + prevData[\"gmrRefNo\"],\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n      },\r\n\r\n      json: true,\r\n    };\r\n\r\n    var platform = {\r\n      method: \"POST\",\r\n      url: req.body.propertyList.eka_connect_host + \"\/workflow\",\r\n      headers: {\r\n        \"Content-Type\": \"application\/json\",\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n      },\r\n      body: {\r\n        appId: \"7e484cae-36aa-46dc-b9ae-33c8d246f056\",\r\n        workflowTaskName: \"viewdoclistdata_SC\",\r\n        task: \"viewdoclistdata_SC\",\r\n        payLoadData: \"\",\r\n        output: {\r\n          viewdoclistdata_SC: {\r\n            otherAttributes: {\r\n              ['internalRefNo']: intGmrRefNo,\r\n            },\r\n          },\r\n        },\r\n      },\r\n      json: true,\r\n    };\r\n    function get_platform() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log(\"Request - \" + platform.url);\r\n        console.log(\"Payload -\" + JSON.stringify(platform));\r\n        request(platform, function (err, response, body) {\r\n          console.log(\"Request Body Platform- \" + JSON.stringify(body));\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function get_GmrDetails() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log(\"Request - \" + connectGmr.url);\r\n        request(connectGmr, function (err, response, body) {\r\n          console.log(\"Response - \" + body);\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            console.log(\"Success\");\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    if (iseconomicValue == true) {\r\n      \/\/ get_assayAndStockListWithEconomcVal().then(dataEconomicVal => {\r\n      \/\/   console.log(\"assay with estimates\", dataEconomicVal)\r\n      \/\/   res.status(200).send(dataEconomicVal);\r\n      \/\/ })\r\n      \/\/   .catch((err) => {\r\n      \/\/     console.log(\"Error Executing Processor -\" + err);\r\n      \/\/     res.status(500).send(err);\r\n      \/\/   });\r\n      Promise.all([\r\n        get_assayAndStockListWithEconomcVal(),\r\n        get_platform(),\r\n        get_activitylog(),\r\n      ])\r\n        .then(function (result) {\r\n          var dataEconomicVal = {}\r\n          dataEconomicVal[\"dataEcon\"] = result[0];\r\n\r\n          var y = result[1].data;\r\n          for (var j = 0; j < y.length; j++) {\r\n            y[j][\"id\"] = y[j].documentId;\r\n            y[j][\"internalRefNo\"] = intGmrRefNo;\r\n            y[j][\"dateForDisplay\"] = moment.utc(y[j][\"dateForDisplay\"]).format(\"DD-MMM-YYYY HH:mm\");\r\n            if (y[j][\"description\"].includes(\":-\")) {\r\n              var typesDesc = y[j][\"description\"].split(\":-\");\r\n              if (typesDesc.length > 0) {\r\n                if (typesDesc[0] === \"packinglist\") y[j][\"types\"] = \"Packing List\"; else if (typesDesc[0] === \"billoflading\") y[j][\"types\"] = \"Bill of Lading\"; else if (typesDesc[0] === \"proofofdelivery\") y[j][\"types\"] = \"Proof of Delivery\"; else if (typesDesc[0] === \"annexIB\") y[j][\"types\"] = \"Annex IB\"; else if (typesDesc[0] === \"annexVII\") y[j][\"types\"] = \"Annex VII\"; else if (typesDesc[0] === \"photoofMaterial\") y[j][\"types\"] = \"Photo of Material\"; else if (typesDesc[0] === \"transportDocument\") y[j][\"types\"] = \"Transport Document\"; else if (typesDesc[0] === \"other\") y[j][\"types\"] = \"Other\";\r\n                y[j][\"description\"] = typesDesc[1];\r\n              }\r\n            }\r\n          }\r\n\r\n          dataEconomicVal[\"documentList\"] = y;\r\n          dataEconomicVal[\"activityLog\"] = result[2].data;\r\n\r\n          res.status(200).send(dataEconomicVal);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Error Executing Processor -\" + err);\r\n          res.status(500).send(err);\r\n        });\r\n    }\r\n    else {\r\n      Promise.all([\r\n        get_collection(),\r\n        get_viewgmr(),\r\n        get_platform(),\r\n        get_GmrDetails(),\r\n        get_activitylog(),\r\n      ])\r\n        .then(function (result) {\r\n          var data = {};\r\n          data[\"assayStockList\"] = result[0];\r\n          let connectData = {};\r\n          if (result[3] && Array.isArray(result[3]) && result[3].length > 0) {\r\n            connectData[\"particleSize\"] = result[3][0][\"particleSize\"];\r\n            connectData[\"MaterialDescription\"] = result[3][0][\"MaterialDescription\"];\r\n            connectData[\"maxLotSize\"] = result[3][0][\"maxLotSize\"];\r\n            connectData[\"containerFlag\"] = result[3][0][\"containerFlag\"];\r\n          }\r\n          result[1] = result[1][\"data\"];\r\n          connectData = { ...connectData, ...result[1] };\r\n\r\n          if (connectData[\"latestAssayType\"] !== null) {\r\n            if (connectData[\"latestAssayType\"].toLowerCase() === \"self assay\")\r\n              connectData.latestAssayType = \"Boliden Assay\";\r\n            else if (\r\n              connectData[\"latestAssayType\"].toLowerCase() === \"counterparty assay\"\r\n            )\r\n              connectData.latestAssayType = \"Supplier Assay\";\r\n          }\r\n          if (connectData.landingDate === null) {\r\n            connectData.assayDueDate = null;\r\n          } else {\r\n            let date = new Date(connectData[\"landingDate\"]);\r\n            if (\r\n              connectData[\"productName\"].toLowerCase() == \"cu material\" ||\r\n              connectData[\"productName\"].toLowerCase() == \"pm material\"\r\n            ) {\r\n              date.setDate(date.getDate() + 20);\r\n            } else if (\r\n              connectData[\"qualityName\"].toLowerCase() == \"alloys coarse\" ||\r\n              connectData[\"qualityName\"].toLowerCase() == \"alloys coarse iba\" ||\r\n              connectData[\"qualityName\"].toLowerCase() == \"alloys fine\" ||\r\n              connectData[\"qualityName\"].toLowerCase() == \"alloys fine iba\" ||\r\n              connectData[\"qualityName\"].toLowerCase() == \"alloys ingots\"\r\n            ) {\r\n              date.setDate(date.getDate() + 35);\r\n            } else {\r\n              date.setDate(date.getDate() + 42);\r\n            }\r\n            var dd = date.getDate();\r\n            var mm = date.monthName();\r\n            var y = date.getFullYear();\r\n            if (dd < 10) dd = \"0\" + dd;\r\n            if (mm < 10) mm = \"0\" + mm;\r\n            var formattedDate = dd + \"-\" + mm + \"-\" + y;\r\n            connectData[\"assayDueDate\"] = formattedDate;\r\n          }\r\n\r\n          data[\"viewGmr\"] = connectData;\r\n\r\n          data[\"activityLog\"] = result[4].data;\r\n\r\n          var y = result[2].data;\r\n          for (var j = 0; j < y.length; j++) {\r\n            y[j][\"id\"] = y[j].documentId;\r\n            y[j][\"internalRefNo\"] = intGmrRefNo;\r\n            y[j][\"dateForDisplay\"] = moment\r\n              .utc(y[j][\"dateForDisplay\"])\r\n              .format(\"DD-MMM-YYYY HH:mm\");\r\n            if (y[j][\"description\"].includes(\":-\")) {\r\n              var typesDesc = y[j][\"description\"].split(\":-\");\r\n              if (typesDesc.length > 0) {\r\n                if (typesDesc[0] === \"packinglist\") y[j][\"types\"] = \"Packing List\";\r\n                else if (typesDesc[0] === \"billoflading\")\r\n                  y[j][\"types\"] = \"Bill of Lading\";\r\n                else if (typesDesc[0] === \"proofofdelivery\")\r\n                  y[j][\"types\"] = \"Proof of Delivery\";\r\n                else if (typesDesc[0] === \"annexIB\") y[j][\"types\"] = \"Annex IB\";\r\n                else if (typesDesc[0] === \"annexVII\") y[j][\"types\"] = \"Annex VII\";\r\n                else if (typesDesc[0] === \"photoofMaterial\")\r\n                  y[j][\"types\"] = \"Photo of Material\";\r\n                else if (typesDesc[0] === \"transportDocument\")\r\n                  y[j][\"types\"] = \"Transport Document\";\r\n                else if (typesDesc[0] === \"other\") y[j][\"types\"] = \"Other\";\r\n                y[j][\"description\"] = typesDesc[1];\r\n              }\r\n            }\r\n          }\r\n\r\n          data[\"documentList\"] = y;\r\n\r\n          console.log(\"Response - \" + JSON.stringify(data));\r\n          res.status(200).send(data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"Error Executing Processor -\" + err);\r\n          res.status(500).send(err);\r\n        });\r\n    }",
    "sys__UUID": "c1447b9c-eaea-44aa-bfcc-c51c4ef1e484"
}