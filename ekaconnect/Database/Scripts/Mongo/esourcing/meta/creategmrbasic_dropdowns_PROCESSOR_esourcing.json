{
    "_id" : "creategmrbasic_dropdowns_PROCESSOR_esourcing",
    "name" : "creategmrbasic_dropdowns_PROCESSOR",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "7e484cae-36aa-46dc-b9ae-33c8d246f056",
    "snippet" : "req.body.mdmProcessorServiceKey = JSON.parse(req.body.mdmProcessorServiceKey);\r\n\r\nfunction getDropdown(data, key) {\r\n    let obj = getDropdownData(data, key);\r\n    console.log('mdm url', obj.url);\r\n    return new Promise(function (resolve, reject) {\r\n        request(obj, function (err, response, body) {\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body); //Success\r\n            } else {\r\n                reject(body); //Failure\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction getDropdownData(data, key) {\r\n    let requestBody = {}, requestUrl;\r\n    if (key === 'businesspartnercontactperson') {\r\n        requestBody = { serviceKey: key, dependsOn: data.dependsOn };\r\n        requestUrl = `${req.body.propertyList.eka_mdm_host}/mdm/${req.body.appId}/data`;\r\n    }\r\n    return {\r\n        method: 'POST',\r\n        body: requestBody,\r\n        url: requestUrl,\r\n        headers: {\r\n            Authorization: req.headers.authorization,\r\n            'Content-Type': 'application/json',\r\n            'X-TenantID': req.headers['X-TenantID']\r\n        },\r\n        json: true\r\n    };\r\n}\r\n\r\nfunction findServiceKey(key) {\r\n    return req && req.body && req.body.mdmProcessorServiceKey && req.body.mdmProcessorServiceKey.find(item => item.serviceKey === key);\r\n};\r\nlet businesspartnercontactperson = findServiceKey(`businesspartnercontactpersoncustom`);\r\n\r\nasync function getMdm() {\r\n    let mdmData = {};\r\n    if (businesspartnercontactperson) {\r\n        let output = await getDropdown(businesspartnercontactperson, 'businesspartnercontactperson');\r\n        if (output && output.businesspartnercontactperson) {\r\n            mdmData['businesspartnercontactpersoncustom'] = [\r\n                { key: 'none', value: 'None' },\r\n                ...output.businesspartnercontactperson\r\n            ];\r\n        }\r\n    }\r\n    return mdmData;\r\n}\r\n\r\nfunction getCountryFromCollection() {\r\n    let collectionAPI = {\r\n        method: 'GET',\r\n        url: `${req.body.propertyList.platform_url}/collection/v1?collectionName=Country_State_City`,\r\n        headers: {\r\n            Authorization: req.headers.authorization,\r\n            'Content-Type': 'application/json',\r\n        },\r\n        json: true\r\n    };\r\n    return new Promise(function (resolve, reject) {\r\n        request(collectionAPI, function (err, response, body) {\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body); //Success\r\n            } else {\r\n                reject(body); //Failure\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nlet cityComboDataFromCollection = findServiceKey(`cityComboDataFromCollection`);\r\n\r\nif (cityComboDataFromCollection) { //ES-81\r\n    getCountryFromCollection().then(result => {\r\n        let cities = result.data.filter(item => item.Country === cityComboDataFromCollection.dependsOn[0])\r\n        let citiesDropdown = cities.map(item => {\r\n            return { key: item.City, value: item.City }\r\n        })\r\n        citiesDropdown.sort((a, b) => {\r\n            return a.key < b.key ? -1 : 1;\r\n        })\r\n        return res.status(200).send({ 'cityComboDataFromCollection': citiesDropdown });\r\n    })\r\n} else {\r\n    getMdm().then(responseObj => {\r\n        getCountryFromCollection().then(result => { //ES-81\r\n            let country = result.data.map(item => item.Country)\r\n            let countrySet = [...new Set(country)];\r\n            countrySet.sort();\r\n            let countryDropdown = countrySet.map(country => {\r\n                return { key: country, value: country }\r\n            })\r\n            let final = { ...responseObj, 'countriesComboDataFromCollection': countryDropdown };\r\n            return res.status(200).send(final);\r\n        })\r\n    });\r\n}\r\n",
    "sys__UUID" : "7bddbea4-ed34-4f5d-bae7-1dd8b9f0015d",
    "sys__createdBy" : "Bravo"
}