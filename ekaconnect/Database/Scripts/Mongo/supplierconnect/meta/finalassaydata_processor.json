{
  "_id": ObjectId("5fdb05b16b90e82d0535cd96"),
  "name": "finalassaydata",
  "type": "processor",
  "refType": "app",
  "refTypeId": "467a28cc-bc93-4e38-8ff5-0a56ae128f3b",
  "snippet": "\r\n    var _ = require('lodash');\r\n    let filterdata = req.body.selectedData ? req.body.selectedData.finalassaycomposite.filterassay:{'contractItem' :'', 'supplier':''};\r\n\tvar contractRefNo = filterdata.contractItem;\r\n    var shipment = \r\n\t{\r\n      method: \"POST\",\r\n      url: req.body.propertyList.eka_connect_host + \"/workflow\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n      },\r\n      body: {\r\n        appId: \"467a28cc-bc93-4e38-8ff5-0a56ae128f3b\",\r\n        workflowTaskName: \"finalAssayListing_SC\",\r\n        task: \"finalAssayListing_SC\",\r\n        payLoadData: \"\",\r\n        output: {\r\n          ['finalAssayListing_SC']: {\r\n            ['contractRefNo']: contractRefNo,\r\n          },\r\n        },\r\n      },\r\n      json: true,\r\n    }\r\n\t;\r\n    function get_shipment() {\r\n      return new Promise(function(resolve, reject) {\r\n        console.log('Request - ' + shipment.url);\r\n        request(shipment, function(err, response, body) {\r\n          //console.log('Response - ' + body);\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            console.log('Success');\r\n            for (let i = 0; i < body.length; i++) {\r\n              let filterassay = {};\r\n              filterassay['contractItem'] = body[i].deliveryItemRefNo;\r\n              filterassay['supplier'] = filterdata.supplier;\r\n              body[i]['filterassay'] = filterassay;\r\n            }\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var countDecimals = function(value) {\r\n      if (Math.floor(value) !== value) return value.toString().split('.')[1].length || 0;\r\n      return 0;\r\n    };\r\n    get_shipment()\r\n      .then(data => {\r\n        data = data.hasOwnProperty('data') ? data.data :data\r\n        let totalcolums = data.reduce((a, item) => {\r\n          let c = item.elementDetails.split(',');\r\n          for (let i = 0; i < c.length; i++) {\r\n            a[c[i].split('(')[0]] = c[i];\r\n          }\r\n          return a;\r\n        }, {});\r\n\r\n        data.forEach((items, i) => {\r\n          items.dryWeight = Number(items.dryWeight);\r\n          items.dryWeight = items.dryWeight.toFixed(3);\r\n\r\n          // if (!Number.isInteger(items.dryWeight)) {\r\n          //   if (countDecimals(items.dryWeight) > 3) items.dryWeight = items.dryWeight.toFixed(3);\r\n          //   items.dryWeight = items.dryWeight.toString();\r\n          //   items.dryWeight = items.dryWeight.replace('.', ',');\r\n          // }\r\n          // items.noOfSublots = '2'\r\n          // data[i]['lotNumberColum'] = items.noOfSublots == '1' ? items.subLotNo : `${items.subLotNo}-${items.noOfSublots}`;\r\n          data[i]['lotNumberColum'] =\r\n            items.noOfSublots == '1' ? items.subLotRefNo : `${items.subLotRefNo}-${items.noOfSublots}`;\r\n\r\n          let elem = items.elementDetails.split(',');\r\n\r\n          elem.forEach(item => {\r\n            let elementlable = item.split('(')[0].trim();\r\n            let elementvalue = item.split(':')[1];\r\n            elementvalue = Number(elementvalue);\r\n            elementvalue = elementvalue.toFixed(3);\r\n            // if (!Number.isInteger(elementvalue)) {\r\n            // if (countDecimals(elementvalue) > 3) elementvalue = elementvalue.toFixed(3);\r\n\r\n            // console.log(elementvalue);\r\n            // elementvalue = elementvalue.toString();\r\n\r\n            // elementvalue = elementvalue.replace('.', ',');\r\n            // }\r\n            data[i][elementlable + '_hidden'] = parseFloat(elementvalue);\r\n            data[i][elementlable] = elementvalue;\r\n          });\r\n          for (let key in totalcolums) {\r\n            key = key.trim()\r\n            if (!data[i].hasOwnProperty(key)) {\r\n              // key = key.trim()\r\n              data[i][key] = 0.000.toFixed(3);\r\n              data[i][key+ '_hidden'] = 0.000.toFixed(3);\r\n            }\r\n          }\r\n        });\r\n        data = data.map((item)=>{\r\n          if(item.hasOwnProperty('dryWeight')) item['dryWeight'] = Number(item['dryWeight']);\r\n          return item;\r\n        })\r\n        // descending data and import\r\n        data = _.orderBy(data, ['gmrRefNo'], ['desc']);\r\n        res.status(200).send(data);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        res.status(500).send(err);\r\n      });",
  "sys__UUID": "b404df77-f031-4a6c-98e9-068b66cc46ed"
}
