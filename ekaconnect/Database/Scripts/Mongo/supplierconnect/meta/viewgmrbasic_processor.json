{
    "_id": ObjectId("5d121aa5013dd21de0618bcb"),
    "name": "viewgmrbasic",
    "type": "processor",
    "refType": "app",
    "refTypeId": "467a28cc-bc93-4e38-8ff5-0a56ae128f3b",
    "snippet": "\/\/ View GMR\r\nvar moment = require('moment');\r\nif (req.body.selectedData.selected.selected) {\r\n    var prevData = req.body.selectedData.selected.selected.viewgmrfinalassayUpdated ? req.body.selectedData.selected.selected.viewgmrfinalassayUpdated : req.body.selectedData.selected.selected.invoicelisting ? req.body.selectedData.selected.selected.invoicelisting : req.body.selectedData.selected.selected.supplierlisting;\r\n} else {\r\n    var prevData = req.body.selectedData.selected.viewgmrfinalassayUpdated ? req.body.selectedData.selected.viewgmrfinalassayUpdated : req.body.selectedData.selected.invoicelisting ? req.body.selectedData.selected.invoicelisting : req.body.selectedData.selected.supplierlisting;\r\n}\r\nif (Object.keys(prevData).length === 0) {\r\n\r\n    if (req.body.selectedData.selected.finalassaycomposite) {\r\n        var prevData = req.body.selectedData.selected.finalassaycomposite ? req.body.selectedData.selected.finalassaycomposite : req.body.selectedData.selected.invoicelisting ? req.body.selectedData.selected.invoicelisting : req.body.selectedData.selected.supplierlisting;\r\n    }\r\n    else if (req.body.selectedData.selected && req.body.selectedData.selected.selected.finalassaycomposite) {\r\n        var prevData = req.body.selectedData.selected.selected.finalassaycomposite ? req.body.selectedData.selected.selected.finalassaycomposite : req.body.selectedData.selected.selected.invoicelisting ? req.body.selectedData.selected.selected.invoicelisting : req.body.selectedData.selected.selected.supplierlisting;\r\n    }\r\n}\r\n\r\nvar intGmrRefNo = prevData['internalGmrRefNo'];\r\nvar gmrRefNo = prevData['gmrRefNo'];\r\nvar iseconomicValue = req.body.selectedData.isEconomicValue || false;\r\n\r\nvar collection = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_supplierconnect_host + '\/collection\/assayAndStockList',\r\n    headers: {\r\n        'Content-Type': 'application\/json',\r\n        Accept: 'application\/json',\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    body: {\r\n        ['intGmrRefNo']: intGmrRefNo,\r\n        ['gmrRefNo']: gmrRefNo\r\n    },\r\n    json: true\r\n};\r\nDate.prototype.monthName = function () {\r\n    return this.toUTCString().split(' ')[2];\r\n};\r\n\r\nvar viewgmr = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_connect_host + '\/workflow',\r\n    headers: {\r\n        'Content-Type': 'application\/json',\r\n        Accept: 'application\/json',\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    body: {\r\n        appId: '467a28cc-bc93-4e38-8ff5-0a56ae128f3b',\r\n        workflowTaskName: 'viewgmrdata_SC',\r\n        task: 'viewgmrdata_SC',\r\n        payLoadData: '',\r\n        output: {\r\n            ['viewgmrdata_SC']: {\r\n                ['intGmrRefNo']: intGmrRefNo\r\n            }\r\n        }\r\n    },\r\n    json: true\r\n};\r\n\r\nvar activityLog = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_connect_host + '\/workflow',\r\n    headers: {\r\n        'Content-Type': 'application\/json',\r\n        Accept: 'application\/json',\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    body: {\r\n        appId: '467a28cc-bc93-4e38-8ff5-0a56ae128f3b',\r\n        workflowTaskName: 'viewactivitylogsdata_SC',\r\n        task: 'viewactivitylogsdata_SC',\r\n        payLoadData: '',\r\n        output: {\r\n            viewactivitylogsdata_SC: {\r\n                ['internalGMRRefNo']: intGmrRefNo\r\n            }\r\n        }\r\n    },\r\n    json: true\r\n};\r\n\r\nvar assayAndStockListWithEconomcVal = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_supplierconnect_host + '\/collection\/assayAndStockListWithEconomcVal',\r\n    headers: {\r\n        'Content-Type': 'application\/json',\r\n        Accept: 'application\/json',\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    body: {\r\n        ['intGmrRefNo']: intGmrRefNo,\r\n        ['gmrRefNo']: gmrRefNo\r\n    },\r\n    json: true\r\n};\r\nfunction get_assayAndStockListWithEconomcVal() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + assayAndStockListWithEconomcVal.url);\r\n        console.log('Payload -' + JSON.stringify(assayAndStockListWithEconomcVal));\r\n        request(assayAndStockListWithEconomcVal, function (err, response, body) {\r\n            console.log('Request Body - ' + JSON.stringify(body));\r\n            if (err || body.error) reject(body);\r\n            else {\r\n                resolve(body);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction get_activitylog() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + activityLog.url);\r\n        console.log('Payload -' + JSON.stringify(activityLog));\r\n        request(activityLog, function (err, response, body) {\r\n            console.log('Request Body - ' + JSON.stringify(body));\r\n            if (err || body.error) reject(body);\r\n            else {\r\n                resolve(body);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction get_collection() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + collection.url);\r\n        console.log('Payload -' + JSON.stringify(collection));\r\n        request(collection, function (err, response, body) {\r\n            console.log('Request Body - ' + JSON.stringify(body));\r\n            if (err || body.error) reject(body);\r\n            else {\r\n                resolve(body);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction get_viewgmr() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + viewgmr.url);\r\n        console.log('Payload -' + JSON.stringify(viewgmr));\r\n        request(viewgmr, function (err, response, body) {\r\n            console.log('Request Body - ' + JSON.stringify(body));\r\n            if (err || body.error) reject(body);\r\n            else {\r\n                resolve(body);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nvar connectGmr = {\r\n    method: 'GET',\r\n    url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '\/data\/' +\r\n        req.body.appId +\r\n        '\/' +\r\n        req.body.selectedData.objectId +\r\n        '?GmrRefNo=' +\r\n        prevData['gmrRefNo'],\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n\r\n    json: true\r\n};\r\n\r\nvar platform = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_connect_host + '\/workflow',\r\n    headers: {\r\n        'Content-Type': 'application\/json',\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    body: {\r\n        appId: '467a28cc-bc93-4e38-8ff5-0a56ae128f3b',\r\n        workflowTaskName: 'viewdoclistdata_SC',\r\n        task: 'viewdoclistdata_SC',\r\n        payLoadData: '',\r\n        output: {\r\n            viewdoclistdata_SC: {\r\n                otherAttributes: {\r\n                    ['internalRefNo']: intGmrRefNo\r\n                }\r\n            }\r\n        }\r\n    },\r\n    json: true\r\n};\r\nfunction get_platform() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + platform.url);\r\n        console.log('Payload -' + JSON.stringify(platform));\r\n        request(platform, function (err, response, body) {\r\n            console.log('Request Body Platform- ' + JSON.stringify(body));\r\n            if (err || body.error) reject(body);\r\n            else {\r\n                resolve(body);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nfunction get_GmrDetails() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + connectGmr.url);\r\n        request(connectGmr, function (err, response, body) {\r\n            console.log('Response - ' + body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n                console.log('Success');\r\n                resolve(body);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nvar viewAssay = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_ctrm_host + '\/api\/logistic\/viewAssay',\r\n    headers: {\r\n        'Content-Type': 'application\/json',\r\n        Accept: 'application\/json',\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    body: { 'intGmrRefNo': intGmrRefNo },\r\n    json: true\r\n};\r\n\r\nfunction get_viewAssay() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + viewAssay.url);\r\n        request(viewAssay, function (err, response, body) {\r\n            console.log('Response - ' + body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n                console.log('Success');\r\n                resolve(body);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nif (iseconomicValue == true) {\r\n    Promise.all([get_assayAndStockListWithEconomcVal(), get_platform(), get_activitylog()])\r\n        .then(function (result) {\r\n            var dataEconomicVal = {};\r\n            dataEconomicVal['dataEcon'] = result[0];\r\n\r\n            var y = result[1].data;\r\n       console.log(\"edit doclist gmrRefNo - \" + prevData['gmrRefNo']);\r\n            for (var j = 0; j < y.length; j++) {\r\n                y[j]['id'] = y[j].documentId;\r\n                y[j]['internalRefNo'] = intGmrRefNo;\r\n      y[j]['gmrRefNo'] = prevData['gmrRefNo'];\r\n                y[j]['dateForDisplay'] = moment.utc(y[j]['dateForDisplay']).format('DD-MMM-YYYY HH:mm');\r\n                if (y[j]['description'].includes(':-')) {\r\n                    var typesDesc = y[j]['description'].split(':-');\r\n                    if (typesDesc.length > 0) {\r\n                        if (typesDesc[0] === 'packinglist') y[j]['types'] = 'Packing List';\r\n                        else if (typesDesc[0] === 'billoflading') y[j]['types'] = 'Bill of Lading';\r\n                        else if (typesDesc[0] === 'proofofdelivery') y[j]['types'] = 'Proof of Delivery';\r\n                        else if (typesDesc[0] === 'annexIB') y[j]['types'] = 'Annex IB';\r\n                        else if (typesDesc[0] === 'annexVII') y[j]['types'] = 'Annex VII';\r\n                        else if (typesDesc[0] === 'photoofMaterial') y[j]['types'] = 'Photo of Material';\r\n                        else if (typesDesc[0] === 'transportDocument') y[j]['types'] = 'Transport Document';\r\n                        else if (typesDesc[0] === 'other') y[j]['types'] = 'Other';\r\n                        y[j]['description'] = typesDesc[1];\r\n                    }\r\n                }\r\n            }\r\n\r\n            dataEconomicVal['documentList'] = y;\r\n            dataEconomicVal['activityLog'] = result[2].data;\r\n\r\n            res.status(200).send(dataEconomicVal);\r\n        })\r\n        .catch(err => {\r\n            console.log('Error Executing Processor -' + err);\r\n            res.status(500).send(err);\r\n        });\r\n} else {\r\n    Promise.all([get_collection(), get_viewgmr(), get_platform(), get_GmrDetails(), get_activitylog(), get_viewAssay()])\r\n        .then(function (result) {\r\n            var data = {};\r\n            data['assayStockList'] = result[0];\r\n            let connectData = {};\r\n            if (result[3] && Array.isArray(result[3]) && result[3].length > 0) {\r\n                connectData['particleSize'] = result[3][0]['particleSize'];\r\n                connectData['MaterialDescription'] = result[3][0]['MaterialDescription'];\r\n                connectData['maxLotSize'] = result[3][0]['maxLotSize'];\r\n                connectData['containerFlag'] = result[3][0]['containerFlag'];\r\n            }\r\n            result[1] = result[1]['data'];\r\n            connectData = { ...connectData, ...result[1] };\r\n\r\n            if (connectData['latestAssayType'] !== null) {\r\n                if (connectData['latestAssayType'].toLowerCase() === 'self assay')\r\n                    connectData.latestAssayType = 'Boliden Assay';\r\n                else if (connectData['latestAssayType'].toLowerCase() === 'counterparty assay')\r\n                    connectData.latestAssayType = 'Supplier Assay';\r\n            }\r\n            if (connectData.landingDate === null) {\r\n                connectData.assayDueDate = null;\r\n            } else {\r\n                let date = new Date(connectData['landingDate']);\r\n                if (\r\n                    connectData['productName'].toLowerCase() == 'cu material' ||\r\n                    connectData['productName'].toLowerCase() == 'pm material'\r\n                ) {\r\n                    date.setDate(date.getDate() + 20);\r\n                } else if (\r\n                    connectData['qualityName'].toLowerCase() == 'alloys coarse' ||\r\n                    connectData['qualityName'].toLowerCase() == 'alloys coarse iba' ||\r\n                    connectData['qualityName'].toLowerCase() == 'alloys fine' ||\r\n                    connectData['qualityName'].toLowerCase() == 'alloys fine iba' ||\r\n                    connectData['qualityName'].toLowerCase() == 'alloys ingots'\r\n                ) {\r\n                    date.setDate(date.getDate() + 35);\r\n                } else {\r\n                    date.setDate(date.getDate() + 42);\r\n                }\r\n                var dd = date.getDate();\r\n                var mm = date.monthName();\r\n                var y = date.getFullYear();\r\n                if (dd < 10) dd = '0' + dd;\r\n                if (mm < 10) mm = '0' + mm;\r\n                var formattedDate = dd + '-' + mm + '-' + y;\r\n                connectData['assayDueDate'] = formattedDate;\r\n            }\r\n            data['viewGmr'] = connectData;\r\n            data['activityLog'] = result[4].data;\r\n            var y = result[2].data;\r\n       console.log(\"edit doclist gmrRefNo - \" + prevData['gmrRefNo']);\r\n            for (var j = 0; j < y.length; j++) {\r\n                y[j]['id'] = y[j].documentId;\r\n                y[j]['internalRefNo'] = intGmrRefNo;\r\n      y[j]['gmrRefNo'] = prevData['gmrRefNo'];\r\n                y[j]['dateForDisplay'] = moment.utc(y[j]['dateForDisplay']).format('DD-MMM-YYYY HH:mm');\r\n                if (y[j]['description'].includes(':-')) {\r\n                    var typesDesc = y[j]['description'].split(':-');\r\n                    if (typesDesc.length > 0) {\r\n                        if (typesDesc[0] === 'packinglist') y[j]['types'] = 'Packing List';\r\n                        else if (typesDesc[0] === 'billoflading') y[j]['types'] = 'Bill of Lading';\r\n                        else if (typesDesc[0] === 'proofofdelivery') y[j]['types'] = 'Proof of Delivery';\r\n                        else if (typesDesc[0] === 'annexIB') y[j]['types'] = 'Annex IB';\r\n                        else if (typesDesc[0] === 'annexVII') y[j]['types'] = 'Annex VII';\r\n                        else if (typesDesc[0] === 'photoofMaterial') y[j]['types'] = 'Photo of Material';\r\n                        else if (typesDesc[0] === 'transportDocument') y[j]['types'] = 'Transport Document';\r\n                        else if (typesDesc[0] === 'other') y[j]['types'] = 'Other';\r\n                        y[j]['description'] = typesDesc[1];\r\n                    }\r\n                }\r\n            }\r\n            data['documentList'] = y;\r\n            \/\/ during view,if approval status is Incomplete then concating reasons.\r\n            if (connectData.gmrApprovalStatus == 'Incomplete') {\r\n                data['viewGmr'].gmrApprovalStatus = connectData.gmrApprovalStatus + ': ' + connectData.gmrIncompleteReason;\r\n            }\r\n            if (parseInt(result[1].noOfContainers) > 0) connectData.containerFlag = 'Yes';\r\n            else connectData.containerFlag = 'No';\r\n\r\n            data['viewAssay'] = result[5];\r\n            console.log('Response - ' + JSON.stringify(data));\r\n            res.status(200).send(data);\r\n        })\r\n        .catch(err => {\r\n            console.log('Error Executing Processor -' + err);\r\n            res.status(500).send(err);\r\n        });\r\n}\r\n",
    "sys__UUID": "600875fd-c1ec-4c63-ab5a-61ddf64d2ec1"
}