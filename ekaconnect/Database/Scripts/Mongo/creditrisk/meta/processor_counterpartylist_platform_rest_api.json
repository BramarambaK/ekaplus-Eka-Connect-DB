{
    "_id" : "processor_counterpartylist_platform_rest_api",
    "name" : "counterpartylistPlatformRestAPI",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "5539617b-5075-4482-8bcc-26f76849eb89",
    "snippet" : "  var moment = require('moment');\r\nvar connectUrl =\r\n      req.body.propertyList.eka_connect_host +\r\n      '/data/5539617b-5075-4482-8bcc-26f76849eb89/01abf4cd-c682-4988-9b8c-c84014a230e7';\r\n    var platformUrl =\r\n      req.body.propertyList.platform_url +\r\n      '/collection/v1?collectionName=' +\r\n      req.body.propertyList.creditrisk_counterparty_collection_name +\r\n      '&limit=100000'; \r\n\r\n    var collection = {\r\n      method: 'GET',\r\n      url: platformUrl,\r\n      headers: {\r\n        Authorization: req.headers.authorization\r\n      },\r\n      json: true\r\n    };\r\n\r\n    var connect = {\r\n      method: 'GET',\r\n      url: connectUrl,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n\t\r\n\t\tfunction getDateString(stringOrTimeInMilliDateObj) { \r\n \t try{\r\n\t\tif(stringOrTimeInMilliDateObj!=null && stringOrTimeInMilliDateObj!=undefined){\r\n\t\t\treturn new Date(stringOrTimeInMilliDateObj).toISOString();\r\n\t\t}\r\n\t\telse return null;\r\n\t }catch(err){\r\n\t\t console.log(err);\r\n\t\t return null;\r\n\t }\r\n\t \r\n\t}\r\n\t\r\n    function get_collection() {\r\n      return new Promise(function(resolve, reject) {\r\n        console.log('platform Request - ' + collection.url);\r\n        request(collection, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            console.log('platform calls is Success');\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    function get_connect() {\r\n      return new Promise(function(resolve, reject) {\r\n        console.log('Connect Request - ' + connect.url);\r\n        request(connect, function(err, response, body) {\r\n          console.log('Response - ' + body);\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            console.log('connect call is Success');\r\n             resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    Promise.all([get_collection(), get_connect()])\r\n      .then(function(result) {\r\n        //Your code goes here\r\n        let collection = result[0].data;\r\n        let connect = result[1];\r\n\r\n        var mergedData = [];\r\n        var keyVals = req.body.propertyList.creditrisk_counterparty_collection_object_column_mapping;\r\n        collection = JSON.stringify(collection);\r\n        var connectKeys = Object.keys(keyVals);\r\n\r\n        for (var i = 0; i < connectKeys.length; i++) {\r\n          collection = collection.split(keyVals[connectKeys[i]]).join(connectKeys[i]);\r\n        }\r\n        collection = JSON.parse(collection);\r\n        console.log(' counterparty listing screen -- platform data size ::' + collection.length);\r\n        console.log('counterparty listing screen --  connect data size ::' + connect.length);\r\n        for (var i = 0; i < collection.length; i++) {\r\n          if (collection[i]['crmStatus'].match(/Y/)) {\r\n            collection[i]['crmStatus'] = 'Active';\r\n          } else if (collection[i]['crmStatus'].match(/N/)) {\r\n            collection[i]['crmStatus'] = 'Inactive';\r\n          }\r\n          collection[i]['creditLimitLevel'] = '';\r\n          collection[i]['creditRiskStatus'] = 'creditRiskStatus-001';\r\n          collection[i]['creditRiskStatusDisplayName'] = 'Active';\r\n          collection[i]['statusDate'] = '';\r\n          collection[i]['reference'] = '';\r\n          collection[i]['debtorNumber'] = '';\r\n          collection[i]['annexNumber'] = '';\r\n          collection[i]['dateDecision'] = '';\r\n          collection[i]['decisionRemarks'] = '';\r\n          if (connect.length === 0) {\r\n            mergedData.push({ ...collection[i] });\r\n          } else {\r\n            for (var j = 0; j < connect.length; j++) {\r\n              if (\r\n                collection[i].cpid === connect[j].cpid &&\r\n                collection[i].counterpartyName === connect[j].counterpartyName\r\n              ) {\r\n                if (connect[j].sys__version <= 1) {\r\n                  var date = connect[j]['sys__createdOn'];\r\n\t\t\t\tdate = moment(parseInt(date)).format('MM/DD/YYYY hh:mm:ss');\r\n                } else if (connect[j].sys__version > 1) {\r\n                  var date = connect[j]['sys__updatedOn'];\r\n                date = moment(parseInt(date)).format('MM/DD/YYYY hh:mm:ss');\r\n                }\r\n                for (var key in connect[j]) {\r\n                  collection[i][key] = connect[j][key];\r\n                }\r\n                collection[i]['statusDate'] = date;\r\n\t\t\t\tcollection[i]['sys__createdOn'] = connect[j]['sys__createdOn'];\r\n \t\t\t\tcollection[i]['sys__updatedOn'] = connect[j]['sys__updatedOn'];\r\n               }\r\n            }\r\n          }\r\n        }\r\n        var copycollection = [];\r\n        for (var i = 0; i < collection.length; i++) {\r\n          if (collection[i].buyerSeller.match(/Seller/) && collection[i].buyerSeller.match(/Buyer/)) {\r\n            collection[i]['buyerSeller'] = 'Both'; \r\n          } else if (collection[i].buyerSeller.match(/Buyer/)) {\r\n            collection[i]['buyerSeller'] = 'Buyer'; \r\n          } else if (collection[i].buyerSeller.match(/Seller/)) {\r\n            collection[i]['buyerSeller'] = 'Seller'; \r\n          } else {\r\n\t\t\t  continue;\r\n          }\r\n\t\t  \r\n\t\t  if(!isNaN(Number(collection[i][\"sys__createdOn\"]))){\r\n \t\t  collection[i][\"sys__createdOn\"]=  getDateString(Number(collection[i][\"sys__createdOn\"]));\r\n\t\t  } else{\r\n\t\t\tcollection[i][\"sys__createdOn\"]= null;  \r\n\t\t  }\r\n\t\tif(collection[i].hasOwnProperty('sys__updatedOn')){\r\n\t\t\t\t\t  if(!isNaN(Number(collection[i][\"sys__updatedOn\"]))){\r\n \t\tcollection[i][\"sys__updatedOn\"]=  getDateString(Number(collection[i][\"sys__updatedOn\"]));\r\n\t\t\t\t\t  }\r\n\t\t\t\t\t  else{\r\n\t\t\t\t\t\tcollection[i][\"sys__createdOn\"]= null;    \r\n\t\t\t\t\t  }\r\n\t\t}else{\r\n\t\t\t\tcollection[i][\"sys__updatedOn\"]=  collection[i][\"sys__createdOn\"];\r\n\t\r\n\t\t}\r\n\t\tvar finalObject={};\r\n\t\tfinalObject['cpid'] =  collection[i]['cpid'];\r\n        finalObject['counterpartyName'] =  collection[i]['counterpartyName'];\r\n        finalObject['counterpartyGroup'] =  collection[i]['counterpartyGroup']; \r\n        finalObject['creditLimitLevel'] =  collection[i]['creditLimitLevel'];\r\n        finalObject['buyerSeller'] =  collection[i]['buyerSeller']; \r\n        finalObject['crmStatus'] =  collection[i]['crmStatus']; \r\n        finalObject['currency'] =  collection[i]['currency']; \r\n        finalObject['creditRiskStatusDisplayName'] =  collection[i]['creditRiskStatusDisplayName'];\r\n        finalObject['annexNumber'] =  collection[i]['annexNumber'];\r\n        finalObject['dateDecision'] =  collection[i]['dateDecision']; \r\n        finalObject['debtorNumber'] =  collection[i]['debtorNumber']; \r\n        finalObject['decisionRemarks'] =  collection[i]['decisionRemarks']; \r\n        finalObject['statusDate'] =  collection[i]['statusDate']; \r\n        finalObject['reference'] =  collection[i]['reference'];\r\n        finalObject['creditCollectionStatusDisplayName']=  collection[i]['creditCollectionStatusDisplayName'];\r\n        finalObject['sys__createdBy'] =  collection[i]['sys__createdBy']; \r\n        finalObject['sys__createdOn'] =  collection[i]['sys__createdOn']; \r\n        finalObject['sys__updatedBy'] =  collection[i]['sys__updatedBy']; \r\n        finalObject['sys__updatedOn'] =  collection[i]['sys__updatedOn'];\r\n\r\ncopycollection.push(finalObject); \r\n\r\n\t\t\r\n\t\t\r\n        }\r\n        res.status(200).send(copycollection);\r\n      })\r\n      .catch(err => {\r\n        res.status(500).send(err);\r\n      });",
    "sys__UUID" : "658d6960-ebc7-486b-a2a8-57faddf126bb",
    "sys__createdOn" : ISODate("2019-05-22T09:51:04.600Z"),
    "sys__createdBy" : "srini@ekaplus.com"
}