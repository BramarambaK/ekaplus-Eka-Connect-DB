{
    "_id" : "processor_limitlist_platform_rest_api",
    "name" : "limitlistPlatformRestAPI",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "5539617b-5075-4482-8bcc-26f76849eb89",
    "snippet" : "    var connectUrl =\r\n      req.body.propertyList.eka_connect_host +\r\n      '/data/5539617b-5075-4482-8bcc-26f76849eb89/26e782e8-89e5-40ea-a3be-63b320260b7d';\r\n    var platformUrl =\r\n      req.body.propertyList.platform_url +\r\n      '/collection/v1?collectionName=' +\r\n      req.body.propertyList.creditrisk_counterparty_collection_name +\r\n      '&limit=10000';\r\n    var platformBody = null;\r\n    var connectQueryParams = null;\r\n    var columnMapping = req.body.propertyList.creditrisk_counterparty_collection_object_column_mapping;\r\n\r\n    if (req.body.queryParams) {\r\n      var filterarr = [];\r\n      var keys = Object.keys(req.body.queryParams);\r\n      for (let i = 0; i < keys.length; i++) {\r\n        var obj = {};\r\n        obj['fieldName'] = columnMapping.hasOwnProperty(keys[i]) ? columnMapping[keys[i]] : keys[i];\r\n        obj['value'] = req.body.queryParams[keys[i]];\r\n        obj['operator'] = 'eq';\r\n        filterarr.push(obj);\r\n      }\r\n\r\n      platformBody = { filter: filterarr };\r\n      console.log('platform Filter ::' + JSON.stringify(platformBody));\r\n\r\n      connectQueryParams = Object.keys(req.body.queryParams)\r\n        .map(key => {\r\n          return key + '=' + req.body.queryParams[key];\r\n        })\r\n        .join('&');\r\n      connectUrl = connectUrl + '?' + connectQueryParams;\r\n    }\r\n    var collection = {\r\n      method: 'GET',\r\n      url: platformUrl,\r\n      body: platformBody,\r\n      headers: {\r\n        Authorization: req.headers.authorization\r\n      },\r\n      json: true\r\n    };\r\n\r\n    var connect = {\r\n      method: 'GET',\r\n      url: connectUrl,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n\t\r\n\tfunction getDateString(stringOrTimeInMilliDateObj) { \r\n\t try{\r\n\t\tif(stringOrTimeInMilliDateObj!=null && stringOrTimeInMilliDateObj!=undefined){\r\n\t\t\treturn new Date(stringOrTimeInMilliDateObj).toISOString();\r\n\t\t}\r\n\t\telse return null;\r\n\t }catch(err){\r\n\t\t console.log(err);\r\n\t\t return null;\r\n\t }\r\n\t \r\n\t}\r\n\t\r\n    function get_collection() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(collection, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n function get_connect() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(connect, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    Promise.all([get_collection(), get_connect()]).then(function(result) {\r\n\t\t \r\n\t\ttry{  \r\n\t\t\tconsole.log('start...................');\r\n      let collection = result[0].data;\r\n      let connect = result[1];\r\n      var keyVals = req.body.propertyList.creditrisk_counterparty_collection_object_column_mapping;\r\n      collection = JSON.stringify(collection);\r\n      var connectKeys = Object.keys(keyVals);\r\n\r\n      for (var i = 0; i < connectKeys.length; i++) {\r\n        collection = collection.split(keyVals[connectKeys[i]]).join(connectKeys[i]);\r\n      }\r\n      collection = JSON.parse(collection);\r\n      for (let i = 0; i < collection.length; i++) {\r\n        for (var j = 0; j < connect.length; j++) {\r\n          if (collection[i].cpid === connect[j].counterpartyGroupName) {\r\n            delete connect[j]['sys__state'];\r\n\t\t\t  connect[j]['counterpartyName']=collection[i]['counterpartyName'];\r\n\t\t\t   connect[j]['counterpartyGroupNameDisplayName']=collection[i]['counterpartyName'];\r\n         connect[j]['currency']=collection[i]['currency'];\r\n         delete connect[j]['contactName'];\r\n         delete connect[j]['sys__UUID'];\r\n         delete connect[j]['refType'];\r\n         delete connect[j]['refTypeId'];\r\n         delete connect[j]['sys__version'];\r\n         delete connect[j]['currencyDisplayName'];\r\n         delete connect[j]['object'];\r\n\t\t delete connect[j]['creditLimitSource'];\r\n\t\t delete connect[j]['Period'];\r\n\t\t delete connect[j]['creditLimitType'];\r\n\t\t delete connect[j]['limitStatus'];\r\n\t\t delete connect[j]['_id'];\r\n\t\t delete connect[j]['userId'];\r\n\t\t \r\n\t\t \r\n\t\t if(connect[j].hasOwnProperty(\"fromPeriod\")){\r\n\t\t\tconnect[j]['fromPeriod'] = getDateString(connect[j]['fromPeriod']);\r\n\t\t }\r\n\t\t  if(connect[j].hasOwnProperty(\"fromPeriod\")){\r\n\t\t\tconnect[j]['toPeriod'] = getDateString(connect[j]['toPeriod']); \r\n\t\t }\r\n\t\t \r\n\t\tconnect[j][\"sys__createdOn\"]=  getDateString(Number(connect[j][\"sys__createdOn\"]));\r\n\t\tif(connect[j].hasOwnProperty('sys__updatedOn')){\r\n\t\tconnect[j][\"sys__updatedOn\"]=  getDateString(Number(connect[j][\"sys__updatedOn\"]));\r\n\t\t}\r\n\t\t \r\n          }\r\n        }\r\n      }\r\n      res.status(200).send(connect);\r\n\t}catch(err){\r\n\t\tconsole.log(err);\r\n\t\tthrow err;\r\n\t}\r\n    }\r\n \r\n\t);",
    "sys__UUID" : "55e9618d-e3e6-42af-9b1a-f427d29a7588",
    "sys__createdOn" : ISODate("2019-05-22T09:51:04.600Z"),
    "sys__createdBy" : "srini@ekaplus.com"
}