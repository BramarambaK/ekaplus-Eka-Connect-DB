{
  "_id": "processor_creditrisk_counterpartydropdown",
  "name": "creditrisk_counterpartydropdown",
  "type": "processor",
  "refType": "app",
  "refTypeId": "5539617b-5075-4482-8bcc-26f76849eb89",
  "snippet": "  var start = req.body.queryParams && req.body.queryParams.start ? parseInt(req.body.queryParams.start) : 0;\r\n    var end = req.body.queryParams && req.body.queryParams.limit ? parseInt(req.body.queryParams.limit) : 10000;\r\n    // var platformUrl =\r\n    //   req.body.propertyList.platform_url +\r\n    //   '/collection/v1?collectionName=' +\r\n    //   req.body.propertyList.creditrisk_counterparty_collection_name +\r\n    //   '&limit=10000';\r\n    var platformUrl =\r\n      req.body.propertyList.eka_connect_host +\r\n      '/collectionmapper/' +\r\n      req.body.appId +\r\n      '5539617b-5075-4482-8bcc-26f76849eb89/01abf4cd-c682-4988-9b8c-c84014a230e7/fetchCollectionRecords';\r\n    var platformBody = null;\r\n    console.log('platform url ::' + platformUrl);\r\n    console.log('filterParam ::' + filterarr);\r\n    var collection = {\r\n      method: 'POST',\r\n      url: platformUrl,\r\n      body: platformBody,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json',\r\n        ttl: 300,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_collection(obj2) {\r\n      var filterarr = [];\r\n      if (obj2 != null && obj2 != undefined) {\r\n        filterarr.push(obj2);\r\n      }\r\n      var obj = {};\r\n      var obj1 = {};\r\n      obj['fieldName'] = req.body.propertyList.creditrisk_counterparty_collection_object_column_mapping['crmStatus'];\r\n      obj['value'] = 'Y';\r\n      obj['operator'] = 'eq';\r\n      filterarr.push(obj);\r\n      var sortarr = [];\r\n      obj1['fieldName'] =\r\n        req.body.propertyList.creditrisk_counterparty_collection_object_column_mapping['counterpartyName'];\r\n      obj1['direction'] = 'ASC';\r\n      sortarr.push(obj1);\r\n      platformBody = {\r\n        criteria: { filter: filterarr,         sort: sortarr },\r\n        collectionName: req.body.propertyList.creditrisk_counterparty_collection_name,\r\n        start: start,\r\n        limit: end\r\n      };\r\n      collection.body = platformBody;\r\n      return new Promise(function(resolve, reject) {\r\n        request(collection, function(err, response, body) {\r\n          body = JSON.parse(JSON.stringify(body));\r\n          if (err || body.error) {\r\n            console.log('error occured ::' + body.error);\r\n            reject(body);\r\n          } else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    function formatObject(collection) {\r\n      var keyVals = req.body.propertyList.creditrisk_counterparty_collection_object_column_mapping;\r\n      collection = JSON.stringify(collection);\r\n      var connectKeys = Object.keys(keyVals);\r\n      for (var i = 0; i < connectKeys.length; i++) {\r\n        collection = collection.split(keyVals[connectKeys[i]]).join(connectKeys[i]);\r\n      }\r\n      collection = JSON.parse(collection);\r\n      return collection;\r\n    }\r\n    req.body.mdmProcessorServiceKey = JSON.parse(req.body.mdmProcessorServiceKey);\r\n    if (\r\n      req.body &&\r\n      req.body.mdmProcessorServiceKey &&\r\n      req.body.mdmProcessorServiceKey[1] &&\r\n      req.body.mdmProcessorServiceKey[1].dependsOn &&\r\n      req.body.mdmProcessorServiceKey[1].dependsOn[0]\r\n    ) {\r\n      var obj = {};\r\n      var filterarr = [];\r\n      var columnMapping = req.body.propertyList.creditrisk_counterparty_collection_object_column_mapping;\r\n      var currency_value = req.body.propertyList.currency_value;\r\n      obj['fieldName'] = columnMapping.hasOwnProperty('cpid') ? columnMapping['cpid'] : 'cpid';\r\n      obj['operator'] = 'eq';\r\n      obj['value'] = req.body.mdmProcessorServiceKey[1].dependsOn[0];\r\n\r\n      get_collection(obj).then(function(result) {\r\n        if (result.length === 0) {\r\n          mdmData1 = { currency: currency_value };\r\n        } else {\r\n          var collection = formatObject(result[0]);\r\n          var mdmData1 = {};\r\n\r\n          mdmData1 = { currency: collection['currency'] };\r\n        }\r\n\r\n        res.status(200).send(mdmData1);\r\n      });\r\n    } else if (\r\n      req.body &&\r\n      req.body.mdmProcessorServiceKey &&\r\n      req.body.mdmProcessorServiceKey[0] &&\r\n      req.body.mdmProcessorServiceKey[0].serviceKey === 'businessPartnerCombo'\r\n    ) {\r\n      get_collection().then(function(result1) {\r\n        var collection = formatObject(result1);\r\n        var mdmData = [];\r\n        var mdmData2 = [];\r\n        var mdmData = [];\r\n        var mdmData1 = {};\r\n        for (var i = 0; i < collection.length; i++) {\r\n          mdmData.push({ key: collection[i]['cpid'], value: collection[i]['counterpartyName'] });\r\n          mdmData2.push({ key: collection[i]['counterpartyGroupID'], value: collection[i]['counterpartyGroup'] });\r\n        }\r\n        var mdmData2 = mdmData2.reduce((unique, o) => {\r\n          if (!unique.some(obj => obj.key === o.key && obj.value === o.value)) {\r\n            unique.push(o);\r\n          }\r\n          return unique;\r\n        }, []);\r\n        console.log(mdmData2);\r\n        Array.prototype.push.apply(mdmData, mdmData2);\r\n        mdmData1 = { businessPartnerCombo: mdmData };\r\n\r\n        res.status(200).send(mdmData1);\r\n      });\r\n    } else {\r\n      res.status(200).send({});\r\n    }\r\n  ",
  "sys__createdOn": ISODate("2019-06-03T13:38:13.102Z"),
  "sys__UUID": "9b41cdf5-251c-489e-9774-bbff26f947bf",
  "sys__createdBy": "admin@ekaplus.com"
}
