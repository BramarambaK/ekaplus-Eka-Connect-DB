{
  "_id": "processor_limitinfopopup",
  "name": "limitinfopopup",
  "type": "processor",
  "refType": "app",
  "refTypeId": "5539617b-5075-4482-8bcc-26f76849eb89",
  "snippet": "   var moment = require('moment');\r\n    var appId = req.body.selectedData.refTypeId;\r\n    console.log('selected Data is ' + req.body.selectedData.sys__UUID);\r\n    console.log(' step 1..');\r\n    var versioning_data = {\r\n      method: 'GET',\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/workflow/' +\r\n        appId +\r\n        '/_UT_VIEW_VERSION_HISTORY/data/' +\r\n        req.body.selectedData.sys__UUID +\r\n        '/versions',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_version_data() {\r\n      return new Promise(function(resolve, reject) {\r\n        console.log('Request - ' + versioning_data.url);\r\n        request(versioning_data, function(err, response, body) {\r\n          console.log('Response - success');\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            console.log('Success');\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    Promise.all([get_version_data()])\r\n      .then(function(result) {\r\n        let collection = result[0].versions;\r\n        var description = [];\r\n        var dataset = [];\r\n        var data = [];\r\n        var values = [];\r\n        var sys_payload = [];\r\n        var details = [];\r\n        var period;\r\n        if (collection[0] && collection[0]['fromPeriod']) {\r\n          var fromperiod = moment(collection[0]['fromPeriod']).format('DD/MM/YYYY');\r\n          fromperiod = fromperiod.slice(0, 10);\r\n        }\r\n        if (collection[0] && collection[0]['toPeriod']) {\r\n          var toperiod = moment(collection[0]['toPeriod']).format('DD/MM/YYYY');\r\n          toperiod = toperiod.slice(0, 10);\r\n          period = fromperiod + ' - ' + toperiod;\r\n        }\r\n        if (collection.length > 0) var amount = collection[collection.length - 1]['amount'];\r\n        if (collection[0] && collection[0].counterpartyGroupNameDisplayName)\r\n          details.push({ name: 'Counterparty Group Name', value: collection[0].counterpartyGroupNameDisplayName });\r\n        if (collection[0] && collection[0].creditLimitSourceDisplayName)\r\n          details.push({ name: 'Credit Limit Source', value: collection[0].creditLimitSourceDisplayName });\r\n        if (collection[0] && collection[0].creditLimitTypeDisplayName)\r\n          details.push({ name: 'Credit Limit Type', value: collection[0].creditLimitTypeDisplayName });\r\n        if (period) details.push({ name: 'Period', value: period });\r\n        if (amount) details.push({ name: 'Amount', value: amount });\r\n        if (collection[0] && collection[0].contactName)\r\n          details.push({ name: 'Contact Name', value: collection[0].contactName });\r\n\r\n        if (collection.length > 1) {\r\n          for (var t = 0; t < collection.length; t++) {\r\n            data = [];\r\n            if (t < collection.length - 1) {\r\n              data.push(collection[t]);\r\n              data.push(collection[t + 1]);\r\n\r\n              data;\r\n              var date = data[1]['sys__updatedOn'];\r\n              date = moment(date).format('DD/MM/YYYY hh:mm:ss');\r\n              var doneBy = data[1]['sys__updatedBy'];\r\n              sys_payload = [];\r\n              dataset = [];\r\n              sys_payload = data[1]['sys__payload'];\r\n              for (var i = 0; i < data.length; i++) {\r\n                var obj = {};\r\n                for (var j = 0; j < sys_payload.length; j++) {\r\n                  obj[sys_payload[j]] = data[i][sys_payload[j]];\r\n                }\r\n                dataset.push(obj);\r\n              }\r\n\r\n              // 0 -->prevValues\r\n              // 1 --> postValue\r\n              if (dataset[0]['limitStatus']) {\r\n                delete dataset[0]['limitStatus'];\r\n              }\r\n              if (dataset[1]['limitStatus']) {\r\n                delete dataset[1]['limitStatus'];\r\n              }\r\n              if (dataset[0]['toPeriod']) {\r\n                dataset[0]['toPeriod'] = moment(dataset[0]['toPeriod']).format('DD/MM/YYYY');\r\n                dataset[0]['toPeriod'] = dataset[0]['toPeriod'].slice(0, 10);\r\n              }\r\n              if (dataset[1]['toPeriod']) {\r\n                dataset[1]['toPeriod'] = moment(dataset[1]['toPeriod']).format('DD/MM/YYYY');\r\n                dataset[1]['toPeriod'] = dataset[1]['toPeriod'].slice(0, 10);\r\n              }\r\n              if (dataset[0]['fromPeriod']) {\r\n                dataset[0]['fromPeriod'] = moment(dataset[0]['fromPeriod']).format('DD/MM/YYYY');\r\n                dataset[0]['fromPeriod'] = dataset[0]['fromPeriod'].slice(0, 10);\r\n              }\r\n              if (dataset[1]['fromPeriod']) {\r\n                dataset[1]['fromPeriod'] = moment(dataset[1]['fromPeriod']).format('DD/MM/YYYY');\r\n                dataset[1]['fromPeriod'] = dataset[1]['fromPeriod'].slice(0, 10);\r\n              }\r\n              values = Object.keys(dataset[0]);\r\n              var obj = {};\r\n              obj['timestamp'] = date;\r\n              obj['doneBy'] = doneBy;\r\n              obj['details'] = [];\r\n              for (var j = 0; j < values.length; j++) {\r\n                var str = '';\r\n                str = values[j];\r\n                if (str == 'limitStatusDisplayName') {\r\n                  str = 'Limit Status';\r\n                }\r\n                str = str\r\n                  .replace(/(_|-)/g, ' ')\r\n                  .trim()\r\n                  .replace(/\\w\\S*/g, function(str) {\r\n                    return str.charAt(0).toUpperCase() + str.substr(1);\r\n                  })\r\n                  .replace(/([a-z])([A-Z])/g, '$1 $2')\r\n                  .replace(/([A-Z])([A-Z][a-z])/g, '$1 $2');\r\n                obj['details'].push({\r\n                  name: str,\r\n                  preValue: dataset[0][values[j]],\r\n                  postValue: dataset[1][values[j]]\r\n                });\r\n              }\r\n              obj;\r\n              description.push(obj);\r\n            }\r\n          }\r\n          data = { details, description };\r\n          res.status(200).send(data);\r\n        } else {\r\n          description = [];\r\n          var message = 'No versioning history available';\r\n          data = { details, description, message };\r\n          res.status(200).send(data);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('error:' + err.stack);\r\n        res.status(500).send(err);\r\n      });\r\n  ",
  "sys__createdOn": ISODate("2019-06-03T13:38:13.102Z"),
  "sys__UUID": "e8787ab7-4a53-424b-a9e1-17c84b7facb2",
  "sys__createdBy": "admin@ekaplus.com"
}
