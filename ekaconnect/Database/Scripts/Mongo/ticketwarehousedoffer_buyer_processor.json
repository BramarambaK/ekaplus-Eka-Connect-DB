{
  "_id": "ticketwarehousedoffer_buyer_processor",
  "name": "ticketwarehousedoffer_buyer",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "sys__UUID": "1d9ab9a1-a0b8-44cb-bbcf-ad32d2febec2",
  "snippet": " const tenant = req.headers['X-TenantID'];\r\n\r\n    const getRequestDropdown = body =>\r\n      new Promise(function(resolve, reject) {\r\n        request(\r\n          {\r\n            method: 'GET',\r\n            url:\r\n              req.body.propertyList.eka_connect_host +\r\n              '/data/getDistinctValues/12325a98-a959-4939-9005-4158d136afcd/6d10c2dd-c5c5-451e-88f5-3de80e151bc3',\r\n            headers: {\r\n              Authorization: req.headers.authorization,\r\n              'X-TenantID': tenant,\r\n              requestid: req.headers['requestid'] + '-processor'\r\n            },\r\n            body,\r\n            json: true\r\n          },\r\n          function(err, response, body) {\r\n            if (response && response.statusCode >= 200 && response.statusCode <= 299) {\r\n              resolve(body);\r\n            } else {\r\n              reject(body);\r\n            }\r\n          }\r\n        );\r\n      });\r\n\r\n    let wht = req.body.selectedData.warehousedticketoffercomposite.warehousedticketoffersearched;\r\n    let seas = wht[0].cropYear;\r\n\r\n    let filterBody = {\r\n      filterData: {\r\n        filter: [\r\n          {\r\n            fieldName: 'season',\r\n            operator: 'eq',\r\n            value: `${seas}`\r\n          },\r\n          {\r\n            fieldName: 'signed',\r\n            operator: 'eq',\r\n            value: 'Y'\r\n          },\r\n          {\r\n            fieldName: 'marketType',\r\n            operator: 'eq',\r\n            value: 'Cash'\r\n          },\r\n          {\r\n            fieldName: 'isActive',\r\n            operator: 'eq',\r\n            value: 'Y'\r\n          }\r\n        ]\r\n      },\r\n      distinctColumns: ['bpName']\r\n    };\r\n\r\n    const send = (status, message) => {\r\n      console.log('Response ', message);\r\n      return res.status(status).send(message);\r\n    };\r\n\r\n    getRequestDropdown(filterBody)\r\n      .then(buyerData => {\r\n        if (buyerData) {\r\n          let data = {};\r\n          data['buyerFilterKey'] = Object.values(buyerData.bpName).map(item => ({\r\n            key: item,\r\n            value: item\r\n          }));\r\n          send(200, data);\r\n        } else {\r\n          send(400, 'No search results found');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        send(500, 'Something went wrong.');\r\n      });"
}
