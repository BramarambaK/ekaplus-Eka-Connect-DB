{
  "_id": "marking_processor_Warrant",
  "name": "savemarking",
  "type": "processor",
  "refType": "app",
  "refTypeId": "ada131db-5171-4b9c-b6d6-caae0c6cd2f5",
  "snippet": "\r\n\r\nvar save_data_connect = {\r\n    method: 'PUT',\r\n    url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/data/updateBulk/ada131db-5171-4b9c-b6d6-caae0c6cd2f5/00b0627c-e0dd-4530-a765-116ab9748487',\r\n    body: {},\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true\r\n};\r\nfunction save_data(outputData) {\r\n    save_data_connect.body = {};\r\n    save_data_connect.body.data = outputData;\r\n    return new Promise(function (resolve, reject) {\r\n        request(save_data_connect, function (err, response, body) {\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nlet markingType = req.body.markingType;\r\nif (req.body.data_transfer.length > req.body.propertyList.property_default_selection) {\r\n    res.status(500).send('Please select maximum 50 records');\r\n} else {\r\n    if (!(req.body.warrant_remarks && markingType)) {\r\n        res.status(500).send('Please fill the mandatory fields');\r\n        return;\r\n    }\r\n    if (markingType == 'New') {\r\n        var connectUrl = req.body.propertyList.eka_connect_host + '/workflow/data';\r\n        var connectBody = {\r\n            appId: req.body.appId,\r\n            workFlowTask: 'dummystocklist'\r\n        };\r\n        var connect = {\r\n            method: 'POST',\r\n            url: connectUrl,\r\n            body: connectBody,\r\n            headers: {\r\n                Authorization: req.headers.authorization,\r\n                'X-TenantID': req.headers['x-tenantid']\r\n            },\r\n            json: true\r\n        };\r\n        function get_connect() {\r\n            return new Promise(function (resolve, reject) {\r\n                request(connect, function (err, response, body) {\r\n                    if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                        resolve(body);\r\n                    }\r\n                    else {\r\n                        reject(body);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        get_connect().then(function (result) {\r\n            var corporate = req.body.data_transfer[0]['corporate']\r\n            var resultData = result.data;\r\n            let data = req.body.data_transfer;\r\n            var stocklistData = []\r\n            var flag = true;\r\n            var stocklistData = resultData.filter(item => item.corporate == corporate)\r\n            const unique = [...new Set(stocklistData.map(item => item.edmarkrefno))];\r\n            for (var i = 0; i < unique.length; i++) {\r\n                if (unique[i] == req.body.edmarkrefnotextbox) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (flag == false) {\r\n                res.status(500).send(\"Please enter unique ED Mark Ref No\")\r\n            }\r\n            else {\r\n                for (var i = 0; i < data.length; i++) {\r\n                    data[i]['id'] = data[i]['_id'];\r\n                    delete data[i]['_id'];\r\n                    data[i]['edmarkrefno'] = req.body.edmarkrefnotextbox;\r\n                    data[i]['warrant_remarks'] = req.body.warrant_remarks;\r\n                    data[i]['activityDate'] = req.body.activityDate;\r\n                    data[i]['markingType'] = req.body.markingType;\r\n                }\r\n                save_data(data)\r\n                    .then(function (result) {\r\n                        console.log('Data saved in Connect');\r\n                        res.status(200).send(data[0]);\r\n                    })\r\n                    .catch(err => {\r\n                        res.status(500).send('Data not successful');\r\n                    })\r\n            }\r\n        });\r\n\r\n    }\r\n    else if (markingType == 'Existing') {\r\n        get_connect().then(function (result) {\r\n            var corporate = req.body.data_transfer[0]['corporate']\r\n            var resultData = result.data;\r\n            let data = req.body.data_transfer;\r\n            var stocklistData = []\r\n            var flag = true;\r\n            var stocklistData = resultData.filter(item => item.corporate == corporate)\r\n            const unique = [...new Set(stocklistData.map(item => item.edmarkrefno))];\r\n            for (var i = 0; i < unique.length; i++) {\r\n                if (unique[i] == req.body.edmarkrefnotextbox) {\r\n                    flag = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (flag == false) {\r\n                res.status(500).send(\"Please enter unique ED Mark Ref No\")\r\n            }\r\n            else {\r\n                for (var i = 0; i < data.length; i++) {\r\n                    data[i]['id'] = data[i]['_id'];\r\n                    delete data[i]['_id'];\r\n                    data[i]['edmarkrefno'] = '';\r\n                    data[i]['edmarkrefno'] = req.body.edmarkrefnodropdown;\r\n                    data[i]['edmarkrefnodropdown'] = req.body.edmarkrefnodropdown;\r\n                    data[i]['warrant_remarks'] = req.body.warrant_remarks;\r\n                    data[i]['activityDate'] = req.body.activityDate;\r\n                    data[i]['markingType'] = req.body.markingType;\r\n                }\r\n                save_data(data)\r\n                    .then(function (result) {\r\n                        console.log('Data saved in Connect');\r\n                        res.status(200).send(data[0]);\r\n                    })\r\n                    .catch(err => {\r\n                        res.status(500).send('Data not successful');\r\n                    });\r\n            }\r\n        });\r\n    }\r\n}\r\n",
  "sys__UUID": "4aa8a6bd-668c-425e-97ab-d6744a66b463",
  "sys__createdBy": "ekauser@ekaplus.com"
}
