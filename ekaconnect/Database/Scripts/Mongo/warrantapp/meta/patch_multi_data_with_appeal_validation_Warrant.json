{
  "_id": "patch_multi_data_with_appeal_validation_Warrant",
  "name": "patchmultidata_appeal_validation",
  "type": "processor",
  "refType": "app",
  "refTypeId": "ada131db-5171-4b9c-b6d6-caae0c6cd2f5",
  "snippet": "\r\n    var defaultDataURL1 = req.body.propertyList.eka_mdm_host + '\/mdm\/ada131db-5171-4b9c-b6d6-caae0c6cd2f5\/data';\r\n    var defaultdata1 = {\r\n      method: 'POST',\r\n      body: [\r\n        {\r\n          serviceKey: 'requestTypeMapInstrument',\r\n          dependsOn: [req.body.selectedData.data[0].instrument_name]\r\n        }\r\n      ],\r\n      url: defaultDataURL1,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_mappedRequestType() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(defaultdata1, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          } else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    if (req.body.selectedData.data) {\r\n      const sData = req.body.selectedData.data;\r\n      let validateMap = {\r\n        warehouse: sData[0].warehouse ? sData[0].warehouse : '',\r\n        quality: sData[0].quality ? sData[0].quality : '',\r\n        instrument_name: sData[0].instrument_name ? sData[0].instrument_name : '',\r\n        instrument_name_value: sData[0].instrument_name_value ? sData[0].instrument_name_value : '',\r\n        product: sData[0].product ? sData[0].product : '',\r\n        origin: sData[0].origin ? sData[0].origin : '',\r\n        cropyear: sData[0].cropyear ? sData[0].cropyear : '',\r\n        Profit_Center: sData[0].Profit_Center ? sData[0].Profit_Center : ''\r\n      };\r\n\r\n      for (let i = 0; i < sData.length; i++) {\r\n        if (\r\n          !(\r\n            sData[i]['product'] &&\r\n            sData[i]['product'] == validateMap['product'] &&\r\n            (sData[i]['quality'] && sData[i]['quality'] == validateMap['quality']) &&\r\n            (sData[i]['origin'] && sData[i]['origin'] == validateMap['origin']) &&\r\n            (sData[i]['cropyear'] && sData[i]['cropyear'] == validateMap['cropyear'])\r\n          )\r\n        ) {\r\n          res.status(500).send('Please select Stocks having same Product, Quality, Origin and Crop Year');\r\n          break;\r\n        }\r\n        if (!(sData[i]['warehouse'] && sData[i]['warehouse'] == validateMap['warehouse'])) {\r\n          res.status(500).send('Select records belongs to same Warehouse');\r\n          break;\r\n        }\r\n        if (!(sData[i]['Profit_Center'] && sData[i]['Profit_Center'] == validateMap['Profit_Center'])) {\r\n          res.status(500).send('Select records belongs to same Profit Center');\r\n          break;\r\n        }\r\n        if (!(sData[i]['instrument_name'] && sData[i]['instrument_name'] == validateMap['instrument_name'])) {\r\n          res.status(500).send('Select records belongs to same Exchange Instrument');\r\n          break;\r\n        }\r\n        if (!(sData[i]['stock_status'] && sData[i]['stock_status'].toLowerCase() == 'In Warehouse'.toLowerCase())) {\r\n          res.status(500).send('Select records with Stock Status as \"In Warehouse\"');\r\n          break;\r\n        }\r\n        if (!(sData[i]['inventory_status'] && sData[i]['inventory_status'].toLowerCase() == 'IN'.toLowerCase())) {\r\n          res.status(500).send('Select records with Inventory Status as \"IN\"');\r\n          break;\r\n        }\r\n        if (sData[i]['allocated_qty'] && sData[i]['allocated_qty'] == 0) {\r\n          res.status(500).send(' Selected records which are not allocated');\r\n          break;\r\n        }\r\n        if (sData[i]['ispreviousappealed']) {\r\n          res.status(500).send('Select records which are appealing for the first time');\r\n          break;\r\n        }\r\n      }\r\n      req.body['data_transfer'] = req.body.selectedData.data;\r\n      req.body['activityDate'] = new Date();\r\n      get_mappedRequestType().then(function(requestType) {\r\n        if (requestType.hasOwnProperty('requestTypeMapInstrument'))\r\n          if (requestType.requestTypeMapInstrument.find(item => item.value === 'Appeal')) {\r\n            delete req.body.processorDetails;\r\n            delete req.body.processorId;\r\n            delete req.body.propertyList;\r\n            delete req.body.queryParams;\r\n            delete req.body.appId;\r\n            res.status(200).send(req.body);\r\n          } else {\r\n            res.status(500).send('selected records not valid for Appeal');\r\n          }\r\n        else {\r\n          res.status(500).send('Failed to get mdm data');\r\n        }\r\n      });\r\n    }\r\n  ",
  "sys__UUID": "51687422-5605-4e96-ba8f-4d2f42f0251c",
  "sys__createdBy": "ekauser@ekaplus.com"
}
