{
  "_id": "processor_viewlogs_warrant",
  "name": "processor_viewstocklogs",
  "type": "processor",
  "refType": "app",
  "refTypeId": "ada131db-5171-4b9c-b6d6-caae0c6cd2f5",
  "snippet": "\r\n    var moment = require('moment');\r\n    var appId = req.body.selectedData.refTypeId;\r\n    var versioning_data = {\r\n      method: 'GET',\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '\/workflow\/' +\r\n        appId +\r\n        '\/_UT_VIEW_VERSION_HISTORY\/data\/' +\r\n        req.body.selectedData.sys__UUID +\r\n        '\/versions',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_version_data() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(versioning_data, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          } else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    Promise.all([get_version_data()])\r\n      .then(function(result) {\r\n        let collection = result[0].versions;\r\n        var description = [];\r\n        var dataset = [];\r\n        var data = [];\r\n        var values = [];\r\n        var sys_payload = [];\r\n        var details = [];\r\n        var grading_status;\r\n        var certification_status;\r\n        var edmarkrefno;\r\n        if (collection[0] && collection[0].stock_ref_no)\r\n          details.push({ name: 'Stock Ref No', value: collection[0].stock_ref_no });\r\n        if (collection[0] && collection[0].ext_stock_ref_no)\r\n          details.push({ name: 'External Stock Ref No', value: collection[0].ext_stock_ref_no });\r\n        if (collection.length > 0) {\r\n          grading_status = collection[collection.length - 1]['grading_status'];\r\n          certification_status = collection[collection.length - 1]['certification_status'];\r\n          if (collection[collection.length - 1]['edmarkrefno'])\r\n            edmarkrefno = collection[collection.length - 1]['edmarkrefno'];\r\n        }\r\n        if (grading_status) details.push({ name: 'Grading Status', value: grading_status });\r\n        if (certification_status) details.push({ name: 'Certification Status', value: certification_status });\r\n        if (edmarkrefno) details.push({ name: 'ED Mark Ref No', value: edmarkrefno });\r\n        if (collection.length > 1) {\r\n          for (var t = 0; t < collection.length; t++) {\r\n            \/\/ if (collection[t]['sys__createdBy']) delete collection[t]['sys__createdBy']\r\n            \/\/ if (collection[t]['sys__createdOn']) delete collection[t]['sys__createdOn']\r\n            \/\/ if (collection[t]['sys__updatedBy']) delete collection[t]['sys__updatedBy']\r\n            \/\/ if (collection[t]['sys__updatedOn']) delete collection[t]['sys__updatedOn']\r\n            data = [];\r\n            if (t < collection.length - 1) {\r\n              if (collection[t + 1]['edmarkrefno'] && !collection[t]['edmarkrefno']) {\r\n                collection[t + 1]['sys__payload'].push('edmarkrefno');\r\n              } else if (!collection[t + 1]['edmarkrefno'] && collection[t]['edmarkrefno']) {\r\n                collection[t + 1]['sys__payload'].push('edmarkrefno');\r\n              }\r\n\r\n              if (collection[t + 1]['grading_status'] !== collection[t]['grading_status']) {\r\n                collection[t + 1]['sys__payload'].push('grading_status');\r\n              }\r\n              if (collection[t + 1]['certification_status'] !== collection[t]['certification_status']) {\r\n                collection[t + 1]['sys__payload'].push('certification_status');\r\n              }\r\n              if (collection[t + 1]['warrant_remarks'] !== collection[t]['warrant_remarks']) {\r\n                collection[t + 1]['sys__payload'].push('warrant_remarks');\r\n              }\r\n\r\n              data.push(collection[t]);\r\n              data.push(collection[t + 1]);\r\n              var date = data[1]['sys__updatedOn'];\r\n              date = moment(date).format('DD\/MM\/YYYY hh:mm:ss');\r\n              var doneBy = data[1]['sys__updatedBy'];\r\n              sys_payload = [];\r\n              dataset = [];\r\n              sys_payload = data[1]['sys__payload'];\r\n              for (var i = 0; i < data.length; i++) {\r\n                var obj = {};\r\n                for (var j = 0; j < sys_payload.length; j++) {\r\n                  let c = data[i][sys_payload[j]];\r\n                  if (\r\n                    sys_payload[j] != 'sys__updatedOn' &&\r\n                    sys_payload[j] != 'sys__createdOn' &&\r\n                    sys_payload[j] != 'sys__createdBy' &&\r\n                    sys_payload[j] != 'sys__updatedBy' &&\r\n                    sys_payload[j] != 'sys__data__state'\r\n                  ) {\r\n                    obj[sys_payload[j]] = data[i][sys_payload[j]];\r\n                  }\r\n                }\r\n                if(obj.details !== []) {\r\n                  dataset.push(obj);\r\n                }\r\n              }\r\n\r\n              \/\/ 0 -->prevValues\r\n              \/\/ 1 --> postValue\r\n              \/\/   if (dataset[0]['warrant_remarks']) {\r\n              \/\/     delete dataset[0]['warrant_remarks'];\r\n              \/\/   }\r\n              \/\/   if (dataset[1]['warrant_remarks']) {\r\n              \/\/     delete dataset[1]['warrant_remarks'];\r\n              \/\/   }\r\n              values = Object.keys(dataset[0]);\r\n              var obj = {};\r\n              obj['timestamp'] = date;\r\n              obj['doneBy'] = doneBy;\r\n              obj['details'] = [];\r\n              for (var j = 0; j < values.length; j++) {\r\n                var str = '';\r\n                str = values[j];\r\n                if (str == 'edmarkrefno') {\r\n                  str = 'ED Mark Ref No';\r\n                }\r\n                str = str\r\n                  .replace(\/(_|-)\/g, ' ')\r\n                  .trim()\r\n                  .replace(\/\\w\\S*\/g, function(str) {\r\n                    return str.charAt(0).toUpperCase() + str.substr(1);\r\n                  })\r\n                  .replace(\/([a-z])([A-Z])\/g, '$1 $2')\r\n                  .replace(\/([A-Z])([A-Z][a-z])\/g, '$1 $2');\r\n                if (dataset[0][values[j]] !== dataset[1][values[j]]) {\r\n                  obj['details'].push({\r\n                    name: str,\r\n                    preValue: dataset[0][values[j]],\r\n                    postValue: dataset[1][values[j]]\r\n                  });\r\n                }\r\n              }\r\n              description.push(obj);\r\n            }\r\n          }\r\n          data = { details, description };\r\n          res.status(200).send(data);\r\n        } else {\r\n          description = [];\r\n          var message = 'No versioning history available';\r\n          data = { details, description, message };\r\n          res.status(200).send(data);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('error:' + err.stack);\r\n        res.status(500).send(err);\r\n      });\r\n  ",
  "sys__UUID": "bf29a946-6d65-496b-9b29-e823414aacdd",
  "sys__createdBy": "admin@ekaplus.com"
}
