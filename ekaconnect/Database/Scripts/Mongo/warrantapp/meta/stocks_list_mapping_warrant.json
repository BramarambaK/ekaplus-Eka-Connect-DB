{
  "_id": "stocks_list_mapping_warrant",
  "name": "stockslist_mapping",
  "type": "processor",
  "refType": "app",
  "refTypeId": "ada131db-5171-4b9c-b6d6-caae0c6cd2f5",
  "snippet": "\r\n\r\n    var moment = require('moment');\r\n    var save_warrant = {\r\n      method: 'PUT',\r\n      body: {},\r\n      url: '',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    }\r\n    function save_warrant_data_stocks(data) {\r\n      save_warrant.body = { data };\r\n      save_warrant.url = req.body.propertyList.eka_connect_host + '/data/updateBulk/ada131db-5171-4b9c-b6d6-caae0c6cd2f5/00b0627c-e0dd-4530-a765-116ab9748487';\r\n      return new Promise(function (resolve, reject) {\r\n        console.log('save_warrant' + JSON.stringify(save_warrant));\r\n        request(save_warrant, function (err, response, body) {\r\n          console.log('Response save_warrant' + response);\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          }\r\n          else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var connectUrl = req.body.propertyList.eka_connect_host + '/workflow/data';\r\n    var connectBody = {\r\n      appId: req.body.appId,\r\n      workFlowTask: 'dummystocklist'\r\n    };\r\n    var connect = {\r\n      method: 'POST',\r\n      body: connectBody,\r\n      url: connectUrl,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_connect() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log('connect' + JSON.stringify(connect));\r\n        request(connect, function (err, response, body) {\r\n          console.log('Response connect' + response);\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          }\r\n          else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var platformRobusta = {\r\n      method: 'POST',\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/collectionmapper/ada131db-5171-4b9c-b6d6-caae0c6cd2f5/6abda3f2-5e71-46c2-9912-a87bc0451410/fetchCollectionRecords',\r\n      body: {\r\n        collectionName: 'Robusta Grading Results Upload',\r\n        getAllRecords: true\r\n      },\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json',\r\n        ttl: 300,\r\n        'X-Remote-User': 'ekaApp',\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_collection_Robusta() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log('platformRobusta' + JSON.stringify(platformRobusta));\r\n        request(platformRobusta, function (err, response, body) {\r\n          console.log('Response platformRobusta' + response);\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          }\r\n          else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var platformArabica = {\r\n      method: 'POST',\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/collectionmapper/ada131db-5171-4b9c-b6d6-caae0c6cd2f5/6abda3f2-5e71-46c2-9912-a87bc0451410/fetchCollectionRecords',\r\n      body: {\r\n        collectionName: 'Arabica Grading Results_New',\r\n        getAllRecords: true\r\n      },\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json',\r\n        ttl: 300,\r\n        'X-Remote-User': 'ekaApp',\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_collection_Arabica() {\r\n      return new Promise(function (resolve, reject) {\r\n        console.log('platformArabica' + JSON.stringify(platformArabica));\r\n        request(platformArabica, function (err, response, body) {\r\n          console.log('Response platformArabica' + response);\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          }\r\n          else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var apiDetails = {\r\n      method: 'PUT',\r\n      url: req.body.propertyList.platform_url + '/api/logistic/stockDetailsUpdate',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      json: true\r\n    };\r\n    function post_data(body) {\r\n      apiDetails.body = [];\r\n      apiDetails.body = body;\r\n      console.log('apiDetails' + JSON.stringify(apiDetails.body));\r\n      return new Promise(function (resolve, reject) {\r\n        request(apiDetails, function (err, response, body) {\r\n          console.log('Response apiDetails' + response);\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          }\r\n          else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    function manipulateData(connectData, collectionData) {\r\n      var outputData = [];\r\n      var exchange_type;\r\n      var classStr;\r\n      for (var j = 0; j < collectionData.length; j++) {\r\n        for (var i = 0; i < connectData.length; i++) {\r\n          delete connectData[i]['sys__updatedOn'];\r\n          delete connectData[i]['sys__updatedBy'];\r\n          delete connectData[i]['sys__createdBy'];\r\n          delete connectData[i]['sys__createdOn'];\r\n          delete connectData[i]['sys__UUID'];\r\n          delete connectData[i]['object'];\r\n          if (connectData[i]['sys__data__state']) delete connectData[i]['sys__data__state'];\r\n          if (connectData[i]['sys__version']) delete connectData[i]['sys__version'];\r\n          if (connectData[i]['userId']) delete connectData[i]['userId'];\r\n          delete connectData[i]['refTypeId'];\r\n          connectData[i]['id'] = connectData[i]['_id'];\r\n          connectData[i]['warrant_remarks'] = 'warrant_remarks';\r\n          if (connectData[i]['ext_stock_ref_no'] == collectionData[j]['ExternalStockRefNo']) {\r\n            var grading_date = collectionData[j]['Grading Date'];\r\n            var certified_date = collectionData[j]['CERTIFIED_DATE'];\r\n            var final_weight_date = collectionData[j]['FINAL_WEIGHT_DATE'];\r\n            if (connectData[i]['grading_status'].includes('Pending')) {\r\n              console.log('connectData');\r\n              var certification_status = 'Not-Certified';\r\n              exchange_type = '';\r\n              classStr = '';\r\n              if (collectionData[j]['GradingStatus'] == 'Passed') {\r\n                certification_status = 'Certified';\r\n              }\r\n              if (collectionData[j]['Exchange Typing']) exchange_type = collectionData[j]['Exchange Typing'];\r\n              if (collectionData[j]['Class']) classStr = collectionData[j]['Class'];\r\n              outputData.push({\r\n                ...connectData[i],\r\n                id: connectData[i]['_id'],\r\n                grading_status: collectionData[j]['GradingStatus'],\r\n                Grading_Date: grading_date,\r\n                ico_mark: collectionData[j]['Ico Mark'],\r\n                certified_date: certified_date,\r\n                final_weight_date: final_weight_date,\r\n                LOB_No: collectionData[j]['LOB_No'],\r\n                Exchange_ID_No: collectionData[j]['Exchange Id No'],\r\n                certification_status: certification_status,\r\n                exchange_type: exchange_type,\r\n                class: classStr,\r\n                status: 'updated in Warrant App'\r\n              });\r\n            } else if (\r\n              connectData[i]['grading_status'].includes('Appeal') ||\r\n              connectData[i]['grading_status'].includes('Re-grading')\r\n            ) {\r\n              var certification_status = 'Not-Certified';\r\n              exchange_type = '';\r\n              classStr = '';\r\n              if (collectionData[j]['Exchange Typing']) exchange_type = collectionData[j]['Exchange Typing'];\r\n              if (collectionData[j]['Class']) classStr = collectionData[j]['Class'];\r\n              outputData.push({\r\n                ...connectData[i],\r\n                id: connectData[i]['_id'],\r\n                grading_status: collectionData[j]['GradingStatus'],\r\n                Grading_Date: grading_date,\r\n                ico_mark: collectionData[j]['Ico Mark'],\r\n                certified_date: certified_date,\r\n                final_weight_date: final_weight_date,\r\n                LOB_No: collectionData[j]['LOB_No'],\r\n                Exchange_ID_No: collectionData[j]['Exchange Id No'],\r\n                certification_status: certification_status,\r\n                exchange_type: exchange_type,\r\n                class: classStr,\r\n                status: 'updated in Warrant App'\r\n              });\r\n            } else if (!connectData[i]['exchangeDeliveryStatus'] === 'Received from Exchange') {\r\n              exchange_type = '';\r\n              classStr = '';\r\n              if (collectionData[j]['Exchange Typing']) exchange_type = collectionData[j]['Exchange Typing'];\r\n              if (collectionData[j]['Class']) classStr = collectionData[j]['Class'];\r\n              outputData.push({\r\n                ...connectData[i],\r\n                id: connectData[i]['_id'],\r\n                grading_status: collectionData[j]['GradingStatus'],\r\n                Grading_Date: grading_date,\r\n                ico_mark: collectionData[j]['Ico Mark'],\r\n                certified_date: certified_date,\r\n                final_weight_date: final_weight_date,\r\n                LOB_No: collectionData[j]['LOB_No'],\r\n                Exchange_ID_No: collectionData[j]['Exchange Id No'],\r\n                exchange_type: exchange_type,\r\n                class: classStr,\r\n                status: 'updated in Warrant App'\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n      console.log('outputData' + outputData.length);\r\n      Promise.all([save_warrant_data_stocks(outputData)]).then(function (result1) {\r\n\r\n        var bulkPayLoadData = outputData;\r\n        var body = [];\r\n        for (var i = 0; i < bulkPayLoadData.length; i++) {\r\n          if (bulkPayLoadData[i]['grading_status'] == 'NA') bulkPayLoadData[i]['grading_status'] = 'Pending';\r\n          var final_weight_date = moment\r\n            .utc(bulkPayLoadData[i]['final_weight_date'])\r\n            .utcOffset('+0530')\r\n            .format('YYYY-MM-DD');\r\n          var Grading_Date = moment\r\n            .utc(bulkPayLoadData[i]['Grading_Date'])\r\n            .utcOffset('+0530')\r\n            .format('YYYY-MM-DD');\r\n          var exchange_type = '';\r\n          var productClass = '';\r\n          if (bulkPayLoadData[i]['exchange_type']) {\r\n            exchange_type = bulkPayLoadData[i]['exchange_type'];\r\n          }\r\n          if (bulkPayLoadData[i]['class']) {\r\n            productClass = bulkPayLoadData[i]['class'];\r\n          }\r\n          body.push({\r\n            certificationStatus: bulkPayLoadData[i]['certification_status'],\r\n            gradingStatus: bulkPayLoadData[i]['grading_status'],\r\n            externalStkRefNo: bulkPayLoadData[i]['ext_stock_ref_no'],\r\n            gradingDate: Grading_Date,\r\n            finalWeightDate: final_weight_date,\r\n            exchangeType: exchange_type,\r\n            productClass: productClass,\r\n            isDeleted: 'N',\r\n            goodsRecordDetailPkDO: {\r\n              internalGrdRefNo: bulkPayLoadData[i]['internal_grd_dgrd_ref_no']\r\n            }\r\n          });\r\n        }\r\n        post_data(body)\r\n          .then(function (result) {\r\n            console.log(\"EXECUTED\");\r\n            res.status(200).send(bulkPayLoadData);\r\n          })\r\n          .catch(err => {\r\n            res.status(500).send('Post to TRM Api not working');\r\n          });\r\n      }).catch(err => {\r\n        res.status(500).send('Not updated data in 177717fb-a6e0-40c8-92f6-38b0601d2903');\r\n      });\r\n    }\r\n    if (req.body.bulkPayLoadData) {\r\n      get_connect().then(function (res) {\r\n        var connectData = res.data; //connect object which we are querying\r\n        var collectionData = req.body.bulkPayLoadData;\r\n        manipulateData(connectData, collectionData);\r\n      });\r\n    } else {\r\n      get_connect().then(function (res) {\r\n        var connectData = res.data; //connect object which we are querying\r\n        Promise.all([get_collection_Robusta(), get_collection_Arabica()]).then(function (result) {\r\n          var RobustaData = result[0];\r\n          var ArabicaData = result[1];\r\n          var collectionData = RobustaData.concat(ArabicaData); // data from collection\r\n          collectionData = collectionData.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.ExternalStockRefNo === o.ExternalStockRefNo)) {\r\n              unique.push(o);\r\n            }\r\n            return unique;\r\n          }, []);\r\n          manipulateData(connectData, collectionData);\r\n        });\r\n      });\r\n    }\r\n ",
  "sys__UUID": "5bc26c3c-ca8c-4d09-a416-06b3d7702e04",
  "sys__createdBy": "ekauser@ekaplus.com"
}
