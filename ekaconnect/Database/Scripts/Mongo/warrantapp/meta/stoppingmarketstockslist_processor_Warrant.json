{
  "_id": "stoppingmarketstockslist_processor_Warrant",
  "name": "stoppingmarketstockslist_processor_Warrant",
  "type": "processor",
  "refType": "app",
  "refTypeId": "ada131db-5171-4b9c-b6d6-caae0c6cd2f5",
  "snippet": "\r\n    console.log('Request-ID:' + req.headers['requestid']);\r\n    var platformURL = req.body.propertyList.platform_url;\r\n    var platformAPI = {\r\n      method: 'POST',\r\n      url: platformURL,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-Remote-User': 'ekaApp',\r\n        'Content-Type': 'application/json',\r\n        ttl: 0,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_arabica_collection() {\r\n      return new Promise(function (resolve, reject) {\r\n        platformAPI.url =\r\n          req.body.propertyList.eka_connect_host +\r\n          '/collectionmapper/ada131db-5171-4b9c-b6d6-caae0c6cd2f5/6abda3f2-5e71-46c2-9912-a87bc0451410/fetchCollectionRecords';\r\n        platformAPI.body = {\r\n          collectionName: 'Arabica Tender Notification',\r\n          getAllRecords: true\r\n        };\r\n        request(platformAPI, function (err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          }\r\n          else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    function get_robusta_collection() {\r\n      return new Promise(function (resolve, reject) {\r\n        platformAPI.url =\r\n          req.body.propertyList.eka_connect_host +\r\n          '/collectionmapper/ada131db-5171-4b9c-b6d6-caae0c6cd2f5/6abda3f2-5e71-46c2-9912-a87bc0451410/fetchCollectionRecords';\r\n        platformAPI.body = {\r\n          collectionName: 'Robusta Tender Invoice',\r\n          getAllRecords: true\r\n        };\r\n        request(platformAPI, function (err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          }\r\n          else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var connectUrl = req.body.propertyList.eka_connect_host + '/workflow/data';\r\n    var connectBody = {\r\n      appId: req.body.appId,\r\n      workFlowTask: 'dummycontractlist'\r\n    };\r\n    var connect = {\r\n      method: 'POST',\r\n      url: connectUrl,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_connect(workflowname) {\r\n      connect.body = {};\r\n      connect.body = {\r\n        appId: req.body.appId,\r\n        workFlowTask: workflowname\r\n      };\r\n      return new Promise(function (resolve, reject) {\r\n        request(connect, function (err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          }\r\n          else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    function get_stoppingList() {\r\n      connect.body = {\r\n        appId: req.body.appId,\r\n        workFlowTask: 'dummystoppinglist'\r\n      };\r\n      return new Promise(function (resolve, reject) {\r\n        request(connect, function (err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          }\r\n          else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    Promise.all([\r\n      get_arabica_collection(),\r\n      get_robusta_collection(),\r\n      get_connect('dummycontractlist'),\r\n      get_stoppingList()\r\n    ]).then(function (result) {\r\n      console.log('Arabica Length:' + result[0].length);\r\n      console.log('Robusta Length:' + result[1].length);\r\n      var arabicaData = result[0];\r\n      var robustaData = result[1];\r\n      var contractlist = result[2].data;\r\n      console.log('Contracts:' + contractlist.length);\r\n      var stoppingList = result[3].data;\r\n      console.log('Stopping:' + stoppingList.length);\r\n      var outputDataArabica = [];\r\n      var outputDataRobusta = [];\r\n      var ext_stock_ref_no;\r\n      var dataset = [];\r\n      var totalDataCol = arabicaData.concat(robustaData);\r\n      const results = stoppingList.filter(\r\n        ({ ext_stock_ref_no: id1 }) => !totalDataCol.some(({ EXTERNAL_STOCK_REFNO: id2 }) => id2 === id1)\r\n      );\r\n      for (var i = 0; i < contractlist.length; i++) {\r\n        ext_stock_ref_no = [];\r\n        if (contractlist[i]['ext_stock_ref_no_array'])\r\n          ext_stock_ref_no = contractlist[i]['ext_stock_ref_no_array'].split(',');\r\n        if (contractlist[i]['internalstock']) {\r\n          var stockdetails = [];\r\n          stockdetails = contractlist[i]['internalstock'];\r\n          stockdetails = JSON.parse(stockdetails);\r\n          for (var x = 0; x < stockdetails.length; x++) {\r\n            dataset.push({\r\n              ext_stock_ref_no: stockdetails[x]['externalStkRefNo'],\r\n              int_stock_ref_no: stockdetails[x]['internalStockRefNo']\r\n            });\r\n          }\r\n        }\r\n      }\r\n      for (var i = 0; i < arabicaData.length; i++) {\r\n        outputDataArabica[i] = {\r\n          ext_stock_ref_no: arabicaData[i]['EXTERNAL_STOCK_REFNO'],\r\n          instrument_name: arabicaData[i]['Instrument_Name'],\r\n          product: arabicaData[i]['Product'],\r\n          origin: arabicaData[i]['ORIGIN_NAME'],\r\n          quality: arabicaData[i]['Quality'],\r\n          crop_year: arabicaData[i]['CROP_YEAR'],\r\n          exchange_lots: arabicaData[i]['Exchange Lots'],\r\n          quantity: arabicaData[i]['QUANTITY'],\r\n          quantity_unit: arabicaData[i]['QUANTITY_UNIT'],\r\n          storage_location: arabicaData[i]['Storage_Location'],\r\n          port_name: arabicaData[i]['Port_Name'],\r\n          grading_date: arabicaData[i]['GRADING_DATE'],\r\n          final_weight_date: arabicaData[i]['FINAL_WEIGHT_DATE'],\r\n          exchange_type: arabicaData[i]['EXCHANGE_TYPE'],\r\n          grading_status: 'Passed',\r\n          certification_status: 'Certified',\r\n          Packing_Size: arabicaData[i]['Packing_Size'],\r\n          warehouse: arabicaData[i]['Warehouse'],\r\n          no_Of_Units: arabicaData[i]['NO_OF_UNITS']\r\n        };\r\n        for (var k = 0; k < contractlist.length; k++) {\r\n          if (\r\n            arabicaData[i]['EXTERNAL_STOCK_REFNO'] == contractlist[k]['ext_stock_ref_no'] ||\r\n            (contractlist[k]['ext_stock_ref_no_array'] &&\r\n              contractlist[k]['ext_stock_ref_no_array'].includes(arabicaData[i]['EXTERNAL_STOCK_REFNO']))\r\n          ) {\r\n            outputDataArabica[i] = {\r\n              contract_ref_no: contractlist[k]['contract_ref_no'],\r\n              corporate: contractlist[k]['corporate'],\r\n              gmr_ref_no: contractlist[k]['GMR_Ref_No'],\r\n              contract_status: contractlist[k]['contract_status'],\r\n              contract_creation_date: contractlist[k]['contract_creation_date'],\r\n              profit_center: contractlist[k]['Profit_Center'],\r\n              strategy: contractlist[k]['Strategy'],\r\n              CP_Name: contractlist[k]['CP_Name'],\r\n              ext_stock_ref_no: arabicaData[i]['EXTERNAL_STOCK_REFNO'],\r\n              instrument_name: arabicaData[i]['Instrument_Name'],\r\n              product: arabicaData[i]['Product'],\r\n              origin: arabicaData[i]['ORIGIN_NAME'],\r\n              quality: arabicaData[i]['Quality'],\r\n              crop_year: arabicaData[i]['CROP_YEAR'],\r\n              exchange_lots: arabicaData[i]['Exchange Lots'],\r\n              quantity: arabicaData[i]['QUANTITY'],\r\n              quantity_unit: arabicaData[i]['QUANTITY_UNIT'],\r\n              storage_location: arabicaData[i]['Storage_Location'],\r\n              port_name: arabicaData[i]['Port_Name'],\r\n              grading_date: arabicaData[i]['GRADING_DATE'],\r\n              final_weight_date: arabicaData[i]['FINAL_WEIGHT_DATE'],\r\n              exchange_type: arabicaData[i]['EXCHANGE_TYPE'],\r\n              grading_status: 'Passed',\r\n              certification_status: 'Certified',\r\n              Packing_Size: arabicaData[i]['Packing_Size'],\r\n              warehouse: arabicaData[i]['Warehouse'],\r\n              no_Of_Units: arabicaData[i]['NO_OF_UNITS']\r\n            };\r\n            for (var a = 0; a < dataset.length; a++) {\r\n              if (arabicaData[i]['EXTERNAL_STOCK_REFNO'] == dataset[a]['ext_stock_ref_no']) {\r\n                outputDataArabica[i] = {\r\n                  contract_ref_no: contractlist[k]['contract_ref_no'],\r\n                  corporate: contractlist[k]['corporate'],\r\n                  int_stock_ref_no: dataset[a]['int_stock_ref_no'] || contractlist[k]['int_stock_ref_no'],\r\n                  gmr_ref_no: contractlist[k]['GMR_Ref_No'],\r\n                  contract_status: contractlist[k]['contract_status'],\r\n                  contract_creation_date: contractlist[k]['contract_creation_date'],\r\n                  profit_center: contractlist[k]['Profit_Center'],\r\n                  strategy: contractlist[k]['Strategy'],\r\n                  CP_Name: contractlist[k]['CP_Name'],\r\n                  ext_stock_ref_no: arabicaData[i]['EXTERNAL_STOCK_REFNO'],\r\n                  instrument_name: arabicaData[i]['Instrument_Name'],\r\n                  product: arabicaData[i]['Product'],\r\n                  origin: arabicaData[i]['ORIGIN_NAME'],\r\n                  quality: arabicaData[i]['Quality'],\r\n                  crop_year: arabicaData[i]['CROP_YEAR'],\r\n                  exchange_lots: arabicaData[i]['Exchange Lots'],\r\n                  quantity: arabicaData[i]['QUANTITY'],\r\n                  quantity_unit: arabicaData[i]['QUANTITY_UNIT'],\r\n                  storage_location: arabicaData[i]['Storage_Location'],\r\n                  port_name: arabicaData[i]['Port_Name'],\r\n                  grading_date: arabicaData[i]['GRADING_DATE'],\r\n                  final_weight_date: arabicaData[i]['FINAL_WEIGHT_DATE'],\r\n                  exchange_type: arabicaData[i]['EXCHANGE_TYPE'],\r\n                  grading_status: 'Passed',\r\n                  certification_status: 'Certified',\r\n                  Packing_Size: arabicaData[i]['Packing_Size'],\r\n                  warehouse: arabicaData[i]['Warehouse'],\r\n                  no_Of_Units: arabicaData[i]['NO_OF_UNITS']\r\n                };\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      for (var j = 0; j < robustaData.length; j++) {\r\n        outputDataRobusta[j] = {\r\n          ext_stock_ref_no: robustaData[j]['EXTERNAL_STOCK_REFNO'],\r\n          instrument_name: robustaData[j]['Instrument_Name'],\r\n          product: robustaData[j]['Product'],\r\n          origin: robustaData[j]['ORIGIN_NAME'],\r\n          quality: robustaData[j]['Quality'],\r\n          crop_year: robustaData[j]['CROP_YEAR'],\r\n          exchange_lots: robustaData[j]['Exchange Lots'],\r\n          quantity: robustaData[j]['QUANTITY'],\r\n          quantity_unit: robustaData[j]['QUANTITY_UNIT'],\r\n          storage_location: robustaData[j]['Storage_Location'],\r\n          port_name: robustaData[j]['Port_Name'],\r\n          grading_date: robustaData[j]['GRADING_DATE'],\r\n          final_weight_date: robustaData[j]['FINAL_WEIGHT_DATE'],\r\n          class: robustaData[j]['Class'],\r\n          grading_status: 'Passed',\r\n          certification_status: 'Certified',\r\n          Packing_Size: robustaData[j]['Packing_Size'],\r\n          warehouse: robustaData[j]['Warehouse'],\r\n          no_Of_Units: robustaData[j]['NO_OF_UNITS']\r\n        };\r\n        for (var k = 0; k < contractlist.length; k++) {\r\n          if (\r\n            robustaData[j]['EXTERNAL_STOCK_REFNO'] == contractlist[k]['ext_stock_ref_no'] ||\r\n            (contractlist[k]['ext_stock_ref_no_array'] &&\r\n              contractlist[k]['ext_stock_ref_no_array'].includes(robustaData[j]['EXTERNAL_STOCK_REFNO']))\r\n          ) {\r\n            outputDataRobusta[j] = {\r\n              contract_ref_no: contractlist[k]['contract_ref_no'],\r\n              gmr_ref_no: contractlist[k]['GMR_Ref_No'],\r\n              corporate: contractlist[k]['corporate'],\r\n              contract_status: contractlist[k]['contract_status'],\r\n              contract_creation_date: contractlist[k]['contract_creation_date'],\r\n              profit_center: contractlist[k]['Profit_Center'],\r\n              strategy: contractlist[k]['Strategy'],\r\n              CP_Name: contractlist[k]['CP_Name'],\r\n              ext_stock_ref_no: robustaData[j]['EXTERNAL_STOCK_REFNO'],\r\n              instrument_name: robustaData[j]['Instrument_Name'],\r\n              product: robustaData[j]['Product'],\r\n              origin: robustaData[j]['ORIGIN_NAME'],\r\n              quality: robustaData[j]['Quality'],\r\n              crop_year: robustaData[j]['CROP_YEAR'],\r\n              exchange_lots: robustaData[j]['Exchange Lots'],\r\n              quantity: robustaData[j]['QUANTITY'],\r\n              quantity_unit: robustaData[j]['QUANTITY_UNIT'],\r\n              storage_location: robustaData[j]['Storage_Location'],\r\n              port_name: robustaData[j]['Port_Name'],\r\n              grading_date: robustaData[j]['GRADING_DATE'],\r\n              final_weight_date: robustaData[j]['FINAL_WEIGHT_DATE'],\r\n              class: robustaData[j]['Class'],\r\n              grading_status: 'Passed',\r\n              certification_status: 'Certified',\r\n              Packing_Size: robustaData[j]['Packing_Size'],\r\n              warehouse: robustaData[j]['Warehouse'],\r\n              no_Of_Units: robustaData[j]['NO_OF_UNITS']\r\n            };\r\n            for (var a = 0; a < dataset.length; a++) {\r\n              if (robustaData[j]['EXTERNAL_STOCK_REFNO'] == dataset[a]['ext_stock_ref_no']) {\r\n                outputDataRobusta[j] = {\r\n                  contract_ref_no: contractlist[k]['contract_ref_no'],\r\n                  int_stock_ref_no: dataset[a]['int_stock_ref_no'] || contractlist[k]['int_stock_ref_no'],\r\n                  corporate: contractlist[k]['corporate'],\r\n                  gmr_ref_no: contractlist[k]['GMR_Ref_No'],\r\n                  contract_status: contractlist[k]['contract_status'],\r\n                  contract_creation_date: contractlist[k]['contract_creation_date'],\r\n                  profit_center: contractlist[k]['Profit_Center'],\r\n                  strategy: contractlist[k]['Strategy'],\r\n                  CP_Name: contractlist[k]['CP_Name'],\r\n                  ext_stock_ref_no: robustaData[j]['EXTERNAL_STOCK_REFNO'],\r\n                  instrument_name: robustaData[j]['Instrument_Name'],\r\n                  product: robustaData[j]['Product'],\r\n                  origin: robustaData[j]['ORIGIN_NAME'],\r\n                  quality: robustaData[j]['Quality'],\r\n                  crop_year: robustaData[j]['CROP_YEAR'],\r\n                  exchange_lots: robustaData[j]['Exchange Lots'],\r\n                  quantity: robustaData[j]['QUANTITY'],\r\n                  quantity_unit: robustaData[j]['QUANTITY_UNIT'],\r\n                  storage_location: robustaData[j]['Storage_Location'],\r\n                  port_name: robustaData[j]['Port_Name'],\r\n                  grading_date: robustaData[j]['GRADING_DATE'],\r\n                  final_weight_date: robustaData[j]['FINAL_WEIGHT_DATE'],\r\n                  class: robustaData[j]['Class'],\r\n                  grading_status: 'Passed',\r\n                  certification_status: 'Certified',\r\n                  Packing_Size: robustaData[j]['Packing_Size'],\r\n                  warehouse: robustaData[j]['Warehouse'],\r\n                  no_Of_Units: robustaData[j]['NO_OF_UNITS']\r\n                };\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      var outputData = [];\r\n      outputData = outputDataArabica.concat(outputDataRobusta);\r\n\r\n      for (var a = 0; a < results.length; a++) {\r\n        for (var k = 0; k < contractlist.length; k++) {\r\n          if (\r\n            (results[a]['ext_stock_ref_no'] &&\r\n              contractlist[k]['ext_stock_ref_no'] &&\r\n              results[a]['ext_stock_ref_no'] == contractlist[k]['ext_stock_ref_no']) ||\r\n            (contractlist[k]['ext_stock_ref_no_array'] &&\r\n              contractlist[k]['ext_stock_ref_no_array'].includes(results[a]['ext_stock_ref_no']))\r\n          ) {\r\n            for (var b = 0; b < dataset.length; b++) {\r\n              if (results[a]['ext_stock_ref_no'] == dataset[b]['ext_stock_ref_no']) {\r\n                outputData.push({\r\n                  contract_ref_no: contractlist[k]['contract_ref_no'],\r\n                  corporate: contractlist[k]['corporate'],\r\n                  int_stock_ref_no: dataset[b]['int_stock_ref_no'] || contractlist[k]['int_stock_ref_no'],\r\n                  gmr_ref_no: contractlist[k]['GMR_Ref_No'],\r\n                  contract_status: contractlist[k]['contract_status'],\r\n                  contract_creation_date: contractlist[k]['contract_creation_date'],\r\n                  profit_center: contractlist[k]['Profit_Center'],\r\n                  strategy: contractlist[k]['Strategy'],\r\n                  CP_Name: contractlist[k]['CP_Name'],\r\n                  ext_stock_ref_no: results[a]['ext_stock_ref_no'],\r\n                  instrument_name: results[a]['instrument_name'],\r\n                  product: results[a]['product'],\r\n                  origin: results[a]['origin'],\r\n                  quality: results[a]['quality'],\r\n                  crop_year: results[a]['crop_year'],\r\n                  exchange_lots: results[a]['exchange_lots'],\r\n                  quantity: results[a]['quantity'],\r\n                  quantity_unit: results[a]['quantity_unit'],\r\n                  storage_location: results[a]['storage_location'],\r\n                  port_name: results[a]['port_name'],\r\n                  grading_date: results[a]['grading_date'],\r\n                  final_weight_date: results[a]['final_weight_date'],\r\n                  grading_status: 'Passed',\r\n                  certification_status: 'Certified',\r\n                  Packing_Size: results[a]['Packing_Size'],\r\n                  warehouse: results[a]['warehouse'],\r\n                  no_Of_Units: results[a]['no_Of_Units'],\r\n                  class: results[a]['class']\r\n                });\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      outputData = outputData.reduce((unique, o) => {\r\n        if (!unique.some(obj => obj.ext_stock_ref_no === o.ext_stock_ref_no)) {\r\n          unique.push(o);\r\n        }\r\n        return unique;\r\n      }, []);\r\n      get_connect('dummystocklist').then(function (stocks) {\r\n        var stocklist = stocks.data;\r\n        for (var i = 0; i < stocklist.length; i++) {\r\n          for (var j = 0; j < outputData.length; j++) {\r\n            if (stocklist[i]['ext_stock_ref_no'] == outputData[j]['ext_stock_ref_no']) {\r\n              outputData[j]['edmarkrefno'] = stocklist[i]['edmarkrefno'];\r\n            }\r\n          }\r\n        }\r\n        console.log('Results:' + outputData.length);\r\n        res.status(200).send(outputData);\r\n      });\r\n    });\r\n ",
  "sys__UUID": "867fe0e2-0b01-4505-a5b0-87de6acee95d",
  "sys__createdBy": "ekauser@ekaplus.com"
}
