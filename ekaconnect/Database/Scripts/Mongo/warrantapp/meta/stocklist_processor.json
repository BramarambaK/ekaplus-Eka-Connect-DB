{
  "_id": "stocklist_processor",
  "name": "stocklist_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "ada131db-5171-4b9c-b6d6-caae0c6cd2f5",
  "snippet": "\r\nvar connectUrl = req.body.propertyList.eka_connect_host + '/workflow/data';\r\nvar connectBody = {\r\n    appId: req.body.appId,\r\n    workFlowTask: 'dummystocklist'\r\n};\r\nvar connect = {\r\n    method: 'POST',\r\n    body: connectBody,\r\n    url: connectUrl,\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true\r\n};\r\nfunction get_connect() {\r\n    return new Promise(function (resolve, reject) {\r\n        request(connect, function (err, response, body) {\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nvar contractUrl = req.body.propertyList.eka_connect_host + '/workflow/data';\r\nvar contractBody = {\r\n    appId: req.body.appId,\r\n    workFlowTask: 'dummycontractlist'\r\n};\r\nvar contract = {\r\n    method: 'POST',\r\n    body: contractBody,\r\n    url: contractUrl,\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true\r\n};\r\nfunction get_contract() {\r\n    return new Promise(function (resolve, reject) {\r\n        request(contract, function (err, response, body) {\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nPromise.all([get_contract(), get_connect()]).then(function (result) {\r\n    var stocksData = result[1].data;\r\n    var contracts = result[0].data;\r\n    var stocks = [];\r\n    for (var i = 0; i < stocksData.length; i++) {\r\n        delete stocksData[i]['sys__state'];\r\n        if (stocksData[i] && stocksData[i]['splitIndicator'] != 'N') {\r\n            stocks.push(stocksData[i]);\r\n        }\r\n    }\r\n    for (var i = 0; i < stocks.length; i++) {\r\n        delete stocks[i]['Sales_Contract_Ref_No'];\r\n        delete stocks[i]['Contract_Ref_No'];\r\n        delete stocks[i]['Contract_Status'];\r\n        delete stocks[i]['Sales_GMR_Ref_No'];\r\n        delete stocks[i]['INTERNAL_GMR_REF_NO'];\r\n        for (var j = 0; j < contracts.length; j++) {\r\n            var datasetCon = {\r\n                Sales_Contract_Ref_No: '',\r\n                Contract_Status: '',\r\n                Sales_GMR_Ref_No: ''\r\n            };\r\n            if (\r\n                contracts[j].hasOwnProperty('edmarkrefno') &&\r\n                contracts[j].hasOwnProperty('contract_ref_no') &&\r\n                stocks[i].hasOwnProperty('edmarkrefno') &&\r\n                contracts[j]['edmarkrefno'] == stocks[i]['edmarkrefno'] &&\r\n                contracts[j]['contract_ref_no'].includes('SC')\r\n            ) {\r\n                datasetCon['Sales_Contract_Ref_No'] = contracts[j]['contract_ref_no'];\r\n                datasetCon['Contract_Status'] = contracts[j]['contract_status'];\r\n                datasetCon['Sales_GMR_Ref_No'] = contracts[j]['GMR_Ref_No'];\r\n                datasetCon['title_transfer_status'] = contracts[j]['title_transfer_status'];\r\n\r\n                stocks[i] = { ...stocks[i], ...datasetCon };\r\n            }\r\n        }\r\n    }\r\n    for (var i = 0; i < stocks.length; i++) {\r\n        for (var j = 0; j < contracts.length; j++) {\r\n            var datasetCon = {\r\n                Contract_Status: '',\r\n                Contract_Ref_No: '',\r\n                INTERNAL_GMR_REF_NO: ''\r\n            };\r\n            if (\r\n                (contracts[j].hasOwnProperty('contract_ref_no') &&\r\n                    stocks[i].hasOwnProperty('ext_stock_ref_no') &&\r\n                    contracts[j].hasOwnProperty('ext_stock_ref_no_array') &&\r\n                    contracts[j]['contract_ref_no'].includes('PC') &&\r\n                    contracts[j]['ext_stock_ref_no_array'].includes(stocks[i]['ext_stock_ref_no'])) ||\r\n                (contracts[j].hasOwnProperty('contract_ref_no') &&\r\n                    contracts[j].hasOwnProperty('ext_stock_ref_no') &&\r\n                    stocks[i].hasOwnProperty('ext_stock_ref_no') &&\r\n                    contracts[j]['contract_ref_no'].includes('PC') &&\r\n                    contracts[j]['ext_stock_ref_no'] == stocks[i]['ext_stock_ref_no'])\r\n            ) {\r\n                datasetCon['Contract_Ref_No'] = contracts[j]['contract_ref_no'];\r\n                datasetCon['Contract_Status'] = contracts[j]['contract_status'];\r\n                datasetCon['INTERNAL_GMR_REF_NO'] = contracts[j]['GMR_Ref_No'];\r\n                stocks[i] = { ...stocks[i], ...datasetCon };\r\n            }\r\n        }\r\n    }\r\n    res.status(200).send(stocks);\r\n});\r\n",
  "sys__UUID": "aafb62f3-0076-4853-88ef-905434a9dcc8",
  "sys__createdBy": "ekauser@ekaplus.com"
}
