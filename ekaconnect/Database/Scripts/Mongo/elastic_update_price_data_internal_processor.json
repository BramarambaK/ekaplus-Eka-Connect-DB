{
  "_id": "elastic_update_price_data_internal_processor",
  "name": "elastic_update_price_data_internal_processor",
  "refType": "app",
  "isNode":true,
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "var payloadData ={...req.body};\r\nif(!Array.isArray(req.body.bulkPayLoadData)){\r\n  delete payloadData[\"processorDetails\"];\r\n  delete payloadData[\"propertyList\"];\r\n}\r\n\r\nvar connect_update_price_data_internal = {\r\n    method: \"POST\",\r\n    url: req.body.propertyList.eka_connect_host +\r\n        \"\/workflow\",\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n        \"requestid\": req.headers[\"requestid\"] + \"-processor\"\r\n    },\r\n    body: {\r\n        \"output\": {\r\n            \"elastic_updatePriceData_internal\": Array.isArray(req.body.bulkPayLoadData) ? req.body.bulkPayLoadData : [ payloadData ],\r\n        },\r\n        \"task\": \"elastic_updatePriceData_internal\",\r\n        \"appId\": \"12325a98-a959-4939-9005-4158d136afcd\",\r\n        \"workflowTaskName\": \"elastic_updatePriceData_internal\"\r\n    },\r\n    json: true,\r\n}\r\nfunction update_price_data_internal() {\r\n    return new Promise(function(resolve, reject) {\r\n        \/\/ console.log('update_price_data_internal Request-' + JSON.stringify(connect_update_price_data_internal));\r\n        request(connect_update_price_data_internal, function(err, response, body) {\r\n            \/\/ console.log('update_price_data_internal Response-' + JSON.stringify(response));\r\n            if (response.statusCode === 200) resolve(body);\r\n            else {\r\n                reject(err || body);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nupdate_price_data_internal()\r\n.then(()=>{res.status(200).send();})\r\n.catch(err => {console.log(\"update_price_data_internal error-\",err);res.status(500).send(err)});\r\n\t\/\/ .then(()=>{\r\n\t\/\/ \tres.status(200).send([{\r\n  \/\/           successCode: 200,\r\n  \/\/           successMessage: \"Price limits have been successfully created\"\r\n  \/\/       }]);\r\n\t\/\/ })\r\n\t\/\/ .catch(function(err) {\r\n  \/\/       var error = JSON.parse(err.errorMessage);\r\n  \/\/       if (error.error.code == 400 ) {\r\n  \/\/           res.status(200).send([\r\n  \/\/               {\r\n  \/\/                   errorCode: error.error.code,\r\n  \/\/                   errorMessage:error.error.message,\r\n  \/\/                   errorContext: 'Its null',\r\n  \/\/                   errorLocalizedMessage:error.error.message\r\n  \/\/               },\r\n  \/\/               {\r\n  \/\/                   successCode: 200,\r\n  \/\/                   successMessage: \"Price limits have been successfully created\"\r\n  \/\/               }\r\n  \/\/           ]);\r\n  \/\/       }\r\n  \/\/       else{\r\n  \/\/           res.status(500).send(err);\r\n  \/\/       }\r\n  \/\/   });",
  "sys__UUID": "f3661cf1-1a1c-4f9f-ade6-77fb661e193a",
  "type": "processor"
}
