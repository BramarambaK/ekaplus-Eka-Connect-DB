{
    "_id" : "_ST_PROCESS_CONTRACT_SAVE_PROCESSOR_QTC",
    "name" : "_ST_PROCESS_CONTRACT_SAVE",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "5d907cd2-7785-4d34-bcda-aa84b2158415",
    "snippet" : "var moment = require(\"moment\");\r\nvar defaultDataURL =\r\n  req.body.propertyList.eka_connect_host +\r\n  \"\/workflow\/data?traderUserId=\" +\r\n  req.body.traderUserId;\r\nvar defaultDataURL2 =\r\n  req.body.propertyList.eka_trm_physicals_api_host +\r\n  \"\/contract\/draft\/autosave\/initial\";\r\nvar defaultDataURL3 =\r\n  req.body.propertyList.eka_trm_physicals_api_host + \"\/contract\";\r\nvar defaultDataURL4 =\r\n  req.body.propertyList.eka_trm_physicals_api_host +\r\n  \"\/contract\/approval?viewType=New\";\r\nvar defaultDataURL5 =\r\n  req.body.propertyList.eka_connect_host +\r\n  \"\/meta\/object\/e6cdb0cd-0ab3-426f-8a2e-c49544dd1f51\";\r\nvar incotermURL =\r\n  req.body.propertyList.eka_mdm_host +\r\n  \"\/mdm\/masterdatas\/5d907cd2-7785-4d34-bcda-aa84b2158415\/incoterm\";\r\n\r\nvar dbody = {\r\n  appId: req.body.appId,\r\n  workFlowTask: \"defaultdataCOPY\",\r\n};\r\nvar incotermData = {\r\n  method: \"POST\",\r\n  url: incotermURL,\r\n  body: { incoTermId: req.body.incotermId },\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\n\r\nfunction get_incotermData() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(incotermData, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nvar defaultdata = {\r\n  method: \"POST\",\r\n  url: defaultDataURL,\r\n  body: dbody,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nfunction get_defaultData() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(defaultdata, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nvar x = \"application\/json\";\r\nvar b = \"Content-Type\";\r\nvar defaultdata2 = {\r\n  method: \"POST\",\r\n  url: defaultDataURL2,\r\n\r\n  headers: {\r\n    Connection: \"keep-alive\",\r\n    \"Content-type\": \"application\/json\",\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n};\r\nfunction get_default2() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(defaultdata2, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\nvar defaultdata3 = {\r\n  method: \"POST\",\r\n  url: defaultDataURL3,\r\n  body: \"\",\r\n  headers: {\r\n    Connection: \"keep-alive\",\r\n    \"Content-type\": \"application\/json\",\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nfunction get_default3(contractObject) {\r\n  return new Promise(function (resolve, reject) {\r\n    defaultdata3[\"body\"] = contractObject;\r\n    request(defaultdata3, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\nvar x = \"application\/json\";\r\nvar b = \"Content-Type\";\r\nvar defaultdata4 = {\r\n  method: \"POST\",\r\n  url: defaultDataURL4,\r\n  body: \"\",\r\n  headers: {\r\n    Connection: \"keep-alive\",\r\n    \"Content-type\": \"application\/json\",\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n};\r\nfunction get_default4() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(defaultdata4, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\nvar defaultdata5 = {\r\n  method: \"GET\",\r\n  url: defaultDataURL5,\r\n  headers: {\r\n    \"Content-type\": \"application\/json\",\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nfunction get_default5() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(defaultdata5, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\nvar subapprovalPayload = {\r\n  method: \"POST\",\r\n  url:\r\n    req.body.propertyList.eka_mdm_host +\r\n    \"\/mdm\/5d907cd2-7785-4d34-bcda-aa84b2158415\/data\",\r\n  headers: {\r\n    \"Content-type\": \"application\/json\",\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  body: [\r\n    {\r\n      serviceKey: \"sublevelApprovalUsersList\",\r\n      dependsOn: [],\r\n    },\r\n  ],\r\n  json: true,\r\n};\r\nfunction get_subapprovallist() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(subapprovalPayload, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\nif (req.headers.hasOwnProperty(\"device-id\")) {\r\n  defaultdata.headers[\"Device-Id\"] = req.headers[\"device-id\"];\r\n  defaultdata2.headers[\"Device-Id\"] = req.headers[\"device-id\"];\r\n  defaultdata3.headers[\"Device-Id\"] = req.headers[\"device-id\"];\r\n  defaultdata4.headers[\"Device-Id\"] = req.headers[\"device-id\"];\r\n  defaultdata5.headers[\"Device-Id\"] = req.headers[\"device-id\"];\r\n  subapprovalPayload.headers[\"Device-Id\"] = req.headers[\"device-id\"];\r\n}\r\nfunction accessForApprove(arr, user, traderuser) {\r\n  let Access = arr\r\n    .map((item) => {\r\n      return item.key;\r\n    })\r\n    .find((val) => {\r\n      return val == user || val == traderuser;\r\n    });\r\n  return Access != undefined ? true : false;\r\n}\r\nget_default5()\r\n  .then((obj) => {\r\n    get_defaultData()\r\n      .then((result1) => {\r\n        var result = result1;\r\n\r\n        get_default2().then((data2) => {\r\n          get_default4()\r\n            .then((data4) => {\r\n              var dataid = data2;\r\n              var userId = JSON.parse(data4);\r\n              dataid = JSON.parse(dataid);\r\n              console.log(result);\r\n              if (result.data.length == 0) {\r\n                res\r\n                  .status(500)\r\n                  .send(\"Please fill the default values for this trader user\");\r\n              }\r\n              var data = result.data[0];\r\n              var today = new Date();\r\n              today = moment(today).format(\"YYYY-MM-DD\");\r\n              today = today + \"T00:00:00.000+0000\";\r\n              if (req.body.issueDate && moment(req.body.issueDate).isValid()) {\r\n                req.body.issueDate = moment(req.body.issueDate).format(\r\n                  \"YYYY-MM-DD\"\r\n                );\r\n                req.body.issueDate = req.body.issueDate + \"T00:00:00.000+0000\";\r\n                today = req.body.issueDate;\r\n              }\r\n\r\n              req.body.deliveryFromDate = moment(\r\n                req.body.deliveryFromDate\r\n              ).format(\"YYYY-MM-DD\");\r\n\r\n              req.body.deliveryFromDate =\r\n                req.body.deliveryFromDate + \"T00:00:00.000+0000\";\r\n              req.body.deliveryToDate = moment(req.body.deliveryToDate).format(\r\n                \"YYYY-MM-DD\"\r\n              );\r\n              req.body.deliveryToDate =\r\n                req.body.deliveryToDate + \"T00:00:00.000+0000\";\r\n              data.paymentDueDate = moment(data.paymentDueDate).format(\r\n                \"YYYY-MM-DD\"\r\n              );\r\n              data.paymentDueDate = data.paymentDueDate + \"T00:00:00.000+0000\";\r\n              let contractObject = {\r\n                _id: dataid._id,\r\n                issueDate: today,\r\n                dealType: \"Third_Party\",\r\n                contractType: req.body.contractType,\r\n                traderUserId: req.body.traderUserId,\r\n                cpProfileId: req.body.cpProfileId,\r\n                paymentTermId: data.paymentTermId,\r\n                applicableLawId: data.applicableLawId,\r\n                arbitrationId: data.arbitrationId,\r\n                incotermId: req.body.incotermId,\r\n                totalQtyUnitId: req.body.totalQtyUnitId,\r\n                isOptionalFieldsEnabled: \"false\",\r\n              };\r\n              var displayValue = {};\r\n              for (let key in contractObject) {\r\n                if (\r\n                  obj.fields.hasOwnProperty(key) &&\r\n                  obj.fields[key].dropdownValue\r\n                ) {\r\n                  if (data[key])\r\n                    displayValue[obj.fields[key].dropdownValue] =\r\n                      data[obj.fields[key].dropdownValue];\r\n                  else {\r\n                    displayValue[obj.fields[key].dropdownValue] =\r\n                      req.body[obj.fields[key].dropdownValue];\r\n                  }\r\n                }\r\n              }\r\n              contractObject.itemDetails = [];\r\n              let keyOfitemDetails = {\r\n                itemNo: 1,\r\n                productId: req.body.productId,\r\n                quality: req.body.quality,\r\n                itemQty: req.body.itemQty,\r\n                toleranceMin: data.toleranceMin,\r\n                toleranceMax: data.toleranceMax,\r\n                itemQtyUnitId: req.body.itemQtyUnitId,\r\n                toleranceLevel: data.toleranceLevel,\r\n                toleranceType: data.toleranceType,\r\n                shipmentMode: data.shipmentMode,\r\n                profitCenterId: data.profitCenterId,\r\n                strategyAccId: data.strategyAccId,\r\n                taxScheduleCountryId: data.taxScheduleCountryId,\r\n                taxScheduleId: data.taxScheduleId,\r\n                destinationCountryId: req.body.destinationCountryId,\r\n                originationCountryId: req.body.originationCountryId,\r\n                loadingLocationGroupTypeId: req.body.loadingLocationGroupTypeId,\r\n                originationCityId: req.body.originationCityId,\r\n                destinationLocationGroupTypeId:\r\n                  req.body.destinationLocationGroupTypeId,\r\n                destinationCityId: req.body.destinationCityId,\r\n                deliveryFromDate: req.body.deliveryFromDate,\r\n                deliveryToDate: req.body.deliveryToDate,\r\n                pricing: {\r\n                  priceTypeId: req.body.priceTypeId,\r\n                  priceDf: null,\r\n                  priceUnitId: null,\r\n                  fxBasisToPayin: null,\r\n                  priceMonthText: null,\r\n                  basisPrice: null,\r\n                  basisPriceUnitId: null,\r\n                  differentialPrice: null,\r\n                  differentialPriceUnit: null,\r\n\r\n                  futureInstrumentText: null,\r\n                  futurePrice: null,\r\n                  futurePriceUnitId: null,\r\n                  fxInstToBasis: null,\r\n\r\n                  priceContractDefId: null,\r\n                  priceFutureContractId: null,\r\n                  priceInclusiveOfTax: null,\r\n\r\n                  pricingFormulaId: null,\r\n                },\r\n                paymentDueDate: data.paymentDueDate,\r\n\r\n                payInCurId: req.body.payInCurId,\r\n              };\r\n              if (data.hasOwnProperty(\"taxScheduleStateId\")) {\r\n                keyOfitemDetails[\"taxScheduleStateId\"] =\r\n                  data.taxScheduleStateId;\r\n              }\r\n              for (let key in keyOfitemDetails) {\r\n                if (\r\n                  obj.fields.hasOwnProperty(key) &&\r\n                  obj.fields[key].dropdownValue\r\n                ) {\r\n                  if (data[key])\r\n                    displayValue[obj.fields[key].dropdownValue] =\r\n                      data[obj.fields[key].dropdownValue];\r\n                  else {\r\n                    displayValue[obj.fields[key].dropdownValue] =\r\n                      req.body[obj.fields[key].dropdownValue];\r\n                  }\r\n                }\r\n              }\r\n              for (let key in keyOfitemDetails.pricing) {\r\n                if (\r\n                  obj.fields.hasOwnProperty(key) &&\r\n                  obj.fields[key].dropdownValue\r\n                ) {\r\n                  if (data[key])\r\n                    displayValue[obj.fields[key].dropdownValue] =\r\n                      data[obj.fields[key].dropdownValue];\r\n                  else {\r\n                    displayValue[obj.fields[key].dropdownValue] =\r\n                      req.body[obj.fields[key].dropdownValue];\r\n                  }\r\n                }\r\n              }\r\n              console.log(displayValue);\r\n              req.body.earliestBy = moment(req.body.earliestBy).format(\r\n                \"YYYY-MM-DD\"\r\n              );\r\n              req.body.earliestBy = req.body.earliestBy + \"T00:00:00.000+0000\";\r\n              if (keyOfitemDetails.pricing.priceTypeId === \"Flat\") {\r\n                keyOfitemDetails.pricing.priceDf = req.body.priceDf;\r\n                keyOfitemDetails.pricing.priceUnitId = req.body.priceUnitId;\r\n                keyOfitemDetails.pricing.fxBasisToPayin =\r\n                  req.body.fxBasisToPayin;\r\n                if (\r\n                  keyOfitemDetails.pricing.priceDf === null ||\r\n                  keyOfitemDetails.pricing.priceDf === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill contract price\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.priceUnitId === null ||\r\n                  keyOfitemDetails.pricing.priceUnitId === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill contract price Unit\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.fxBasisToPayin === null ||\r\n                  keyOfitemDetails.pricing.fxBasisToPayin === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill fx Basis To PayIn\");\r\n                }\r\n              } else if (keyOfitemDetails.pricing.priceTypeId === \"Fixed\") {\r\n                keyOfitemDetails.pricing.priceFutureContractId =\r\n                  req.body.priceFutureContractId;\r\n                keyOfitemDetails.pricing.futurePriceUnitId =\r\n                  req.body.futurePriceUnitId;\r\n                keyOfitemDetails.pricing.priceMonthText =\r\n                  req.body.priceFutureContractIdDisplayName;\r\n                keyOfitemDetails.pricing.futurePrice = req.body.futurePrice;\r\n                keyOfitemDetails.pricing.basisPrice = req.body.basisPrice;\r\n                keyOfitemDetails.pricing.basisPriceUnitId =\r\n                  req.body.basisPriceUnitId;\r\n                keyOfitemDetails.pricing.priceDf = req.body.priceDf;\r\n                keyOfitemDetails.pricing.priceUnitId = req.body.priceUnitId;\r\n                keyOfitemDetails.pricing.fxBasisToPayin =\r\n                  req.body.fxBasisToPayin;\r\n                keyOfitemDetails.pricing.fxInstToBasis = req.body.fxInstToBasis;\r\n                keyOfitemDetails.priceContractDefId =\r\n                  req.body.priceContractDefId;\r\n\r\n                if (\r\n                  keyOfitemDetails.pricing.priceFutureContractId === null ||\r\n                  keyOfitemDetails.pricing.priceFutureContractId === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Price Month\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.fxBasisToPayin === null ||\r\n                  keyOfitemDetails.pricing.fxBasisToPayin === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill fx Basis To PayIn\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.priceDf === null ||\r\n                  keyOfitemDetails.pricing.priceDf === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill contract price\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.priceUnitId === null ||\r\n                  keyOfitemDetails.pricing.priceUnitId === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill contract price Unit\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.fxBasisToPayin === null ||\r\n                  keyOfitemDetails.pricing.fxBasisToPayin === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill fx Basis To PayIn\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.priceDf === null ||\r\n                  keyOfitemDetails.pricing.priceDf === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill contract price\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.basisPrice === null ||\r\n                  keyOfitemDetails.pricing.basisPrice === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Basis price\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.fxInstToBasis === null ||\r\n                  keyOfitemDetails.pricing.fxInstToBasis === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill FX-Futures to Basis\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.futurePrice === null ||\r\n                  keyOfitemDetails.pricing.futurePrice === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Future price\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.basisPriceUnitId == null ||\r\n                  keyOfitemDetails.pricing.basisPriceUnitId === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill  Basis Price Unit\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.futurePriceUnitId === null ||\r\n                  keyOfitemDetails.pricing.futurePriceUnitId === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill  Future Price Unit\");\r\n                }\r\n              } else if (\r\n                keyOfitemDetails.pricing.priceTypeId === \"FormulaPricing\"\r\n              ) {\r\n                keyOfitemDetails.pricing.pricingFormulaId =\r\n                  req.body.pricingFormulaId;\r\n                keyOfitemDetails.pricing[\"pricingStrategy\"] =\r\n                  \"pricingStrategy-001\";\r\n                keyOfitemDetails.pricing.priceUnitId = req.body.priceUnitId;\r\n                keyOfitemDetails.pricing.priceDf = 0.001;\r\n                if (\r\n                  keyOfitemDetails.pricing.pricingFormulaId === null ||\r\n                  keyOfitemDetails.pricing.pricingFormulaId === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please select Formula\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.priceUnitId === null ||\r\n                  keyOfitemDetails.pricing.priceUnitId === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill contract price Unit\");\r\n                }\r\n              } else if (\r\n                keyOfitemDetails.pricing.priceTypeId === \"On Call Basis Fixed\"\r\n              ) {\r\n                keyOfitemDetails.pricing.priceMonthText =\r\n                  req.body.priceFutureContractIdDisplayName;\r\n                keyOfitemDetails.pricing.basisFixedQty = req.body.itemQty;\r\n                keyOfitemDetails.pricing.basisPrice = req.body.basisPrice;\r\n                keyOfitemDetails.pricing.basisPriceUnitId =\r\n                  req.body.basisPriceUnitId;\r\n                keyOfitemDetails.pricing.priceFutureContractId =\r\n                  req.body.priceFutureContractId;\r\n                keyOfitemDetails.earliestBy = req.body.earliestBy;\r\n                keyOfitemDetails.priceLastFixDayBasedOn =\r\n                  req.body.priceLastFixDayBasedOn;\r\n                keyOfitemDetails.optionsToFix = req.body.optionsToFix;\r\n                keyOfitemDetails.fixationMethod = req.body.fixationMethod;\r\n                keyOfitemDetails.futureInstrumentText =\r\n                  req.body.priceContractDefIdDisplayName;\r\n                keyOfitemDetails.priceContractDefId =\r\n                  req.body.priceContractDefId;\r\n                if (\r\n                  keyOfitemDetails.pricing.priceFutureContractIdDisplayName ===\r\n                    null ||\r\n                  keyOfitemDetails.pricing.priceFutureContractIdDisplayName ===\r\n                    \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Price Month\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.futureInstrumentText === null ||\r\n                  keyOfitemDetails.futureInstrumentText === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Future Insrument\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.earliestBy === null ||\r\n                  keyOfitemDetails.earliestBy === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Price-Fix Earliest by\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.priceLastFixDayBasedOn === null ||\r\n                  keyOfitemDetails.priceLastFixDayBasedOn === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Price-Fix Latest by\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.optionsToFix === null ||\r\n                  keyOfitemDetails.optionsToFix === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Price-Fix Option\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.fixationMethod === null ||\r\n                  keyOfitemDetails.fixationMethod === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Price-Fix Method\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.basisPrice === null ||\r\n                  keyOfitemDetails.pricing.basisPrice === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill Basis price\");\r\n                }\r\n                if (\r\n                  keyOfitemDetails.pricing.basisPriceUnitId == null ||\r\n                  keyOfitemDetails.pricing.basisPriceUnitId === \"\"\r\n                ) {\r\n                  res.status(500).send(\"Please fill  Basis Price Unit\");\r\n                }\r\n              }\r\n              contractObject.itemDetails = [];\r\n              contractObject.itemDetails.push(keyOfitemDetails);\r\n\r\n              contractObject[\"generalDetailsDisplayValue\"] =\r\n                JSON.stringify(displayValue);\r\n              contractObject[\"approvalManagementDO\"] = userId;\r\n              if (\r\n                Array.isArray(\r\n                  contractObject[\"approvalManagementDO\"].approvalLevels\r\n                ) &&\r\n                Array.isArray(\r\n                  contractObject[\"approvalManagementDO\"].approvalLevels[0]\r\n                    .approvalSubLevelDos\r\n                )\r\n              ) {\r\n                subapprovalPayload.body[0].dependsOn.push(\r\n                  contractObject[\"approvalManagementDO\"].approvalLevels[0]\r\n                    .approvalSubLevelDos[0].approvalSubLevelId\r\n                );\r\n              }\r\n              get_subapprovallist()\r\n                .then((approvalist) => {\r\n                  if (\r\n                    approvalist.hasOwnProperty(\"sublevelApprovalUsersList\") &&\r\n                    Array.isArray(approvalist.sublevelApprovalUsersList)\r\n                  ) {\r\n                    if (\r\n                      accessForApprove(\r\n                        approvalist.sublevelApprovalUsersList,\r\n                        userId.currentUserId,\r\n                        contractObject.traderUserId\r\n                      ) &&\r\n                      contractObject[\"approvalManagementDO\"].approvalLevels\r\n                        .length > 0\r\n                    ) {\r\n                      contractObject[\r\n                        \"approvalManagementDO\"\r\n                      ].approvalLevels[0].approvalSubLevelDos[0].approvalStatus =\r\n                        \"Approved\";\r\n                    } else if (\r\n                      contractObject[\"approvalManagementDO\"].approvalLevels\r\n                        .length > 0\r\n                    ) {\r\n                      contractObject[\r\n                        \"approvalManagementDO\"\r\n                      ].approvalLevels[0].approvalSubLevelDos[0].approvalStatus =\r\n                        \"Pending\";\r\n                      contractObject[\r\n                        \"approvalManagementDO\"\r\n                      ].approvalLevels[0].approvalSubLevelDos[0].suggestedApproverId =\r\n                        approvalist.sublevelApprovalUsersList[0].key;\r\n                    }\r\n                  }\r\n                  console.log(keyOfitemDetails);\r\n\r\n                  delete contractObject.processorId;\r\n                  delete contractObject.processorDetails;\r\n                  delete contractObject.propertyList;\r\n                  delete contractObject.appId;\r\n                  delete contractObject.sys__UUID;\r\n                  \/\/ res.status(200).send(contractObject);\r\n                  get_incotermData()\r\n                    .then((incoData) => {\r\n                      contractObject[\"qualityFinalAt\"] =\r\n                        incoData.locationField == \"ORIGINATION\"\r\n                          ? \"Loading\"\r\n                          : \"Discharge\";\r\n                      contractObject[\"weightFinalAt\"] =\r\n                        incoData.locationField == \"ORIGINATION\"\r\n                          ? \"Loading\"\r\n                          : \"Discharge\";\r\n                      console.log(contractObject);\r\n                      get_default3(contractObject)\r\n                        .then((data3) => {\r\n                          console.log(data3);\r\n                          if (data3.status === \"success\") {\r\n                            data3.contractRefNo =\r\n                              data3.data.contractDetails.contractRefNo;\r\n                            res.status(200).send(data3);\r\n                          } else if (data3.errorLocalizedMessage) {\r\n                            res.status(500).send(data3.errorLocalizedMessage);\r\n                          } else {\r\n                            res.status(500).send(\"Contract Creation Failed\");\r\n                          }\r\n                        })\r\n                        .catch((err) => {\r\n                          console.log(err);\r\n                          res.status(500).send(err);\r\n                        });\r\n                    })\r\n                    .catch((err) => {\r\n                      console, log(err);\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                  res.status(500).send(err);\r\n                });\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              res.status(500).send(err);\r\n            });\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        res.status(500).send(err);\r\n      });\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n    res.status(500).send(err);\r\n  });",
    "sys__UUID" : "1675540a-5a52-4117-b7f9-81a7fee3048f",
    "sys__createdBy" : "srini@ekaplus.com"
}