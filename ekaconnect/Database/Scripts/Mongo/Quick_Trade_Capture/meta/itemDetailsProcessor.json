{
  "_id" : "itemDetailsProcessor_MOBILEQTC",
  "name" : "itemDetailsProcessor",
  "refType" : "app",
  "refTypeId" : "5d907cd2-7785-4d34-bcda-aa84b2158415",
  "snippet" : "\r\nfunction createbody(method, host, url_end_Point, body = {}, Connection = false) {\r\n    let bdy = {\r\n        method: method,\r\n        url: req.body.propertyList[host] + url_end_Point,\r\n        headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid']\r\n        },\r\n        json: true,\r\n        body: body\r\n    };\r\n    if (Connection) bdy.headers['Connection'] = \"keep-alive\"\r\n    return bdy\r\n}\r\n\r\nfunction call_API(url_details) {\r\n    return new Promise(function (resolve, reject) {\r\n        request(url_details, function (err, response, body) {\r\n            console.log(url_details.url + '   ->   ' + err)\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body); //Success \r\n            } else {\r\n                reject(body); //Failure\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction idtovalue(mdmdata, key) {\r\n    if (mdmdata) {\r\n        for (let i = 0; i < mdmdata.length; i++) {\r\n            if (mdmdata[i].key == key) return mdmdata[i].value\r\n        }\r\n    }\r\n    return key\r\n}\r\ncall_API(createbody('GET', 'eka_trm_physicals_api_host', '/contract/trm?contractRefNo=' + req.body.selectedData.internalContractRefNo, {}, true)).then((contract_data) => {\r\n    call_API(createbody('GET', 'eka_connect_host', '/meta/object/5335f2cf-8169-48af-bc38-d52a551d7be1')).then((object) => {\r\n\r\n        contract_data.itemDetails.forEach((item) => {\r\n            if (item.hasOwnProperty('pricing')) {\r\n                for (let ke in item.pricing) {\r\n                    item[ke] = item.pricing[ke]\r\n                }\r\n            }\r\n        })\r\n        let bodyForEachItem = contract_data.itemDetails.map((contractItem) => {\r\n            let arr = []\r\n            for (let key in object.fields) {\r\n                if (object.fields[key].hasOwnProperty('serviceKey') && object.fields[key]['serviceKey'] != '') {\r\n                    if (object.fields[key].hasOwnProperty('serviceKey') && object.fields[key].hasOwnProperty('parent'))\r\n                        arr.push({\r\n                            'serviceKey': object.fields[key]['serviceKey'], dependsOn: object.fields[key].parent.map((item) => {\r\n                                if (contractItem[item] == null) return 'not defined'\r\n                                return contractItem[item]\r\n                            })\r\n                        })\r\n                    else\r\n                        arr.push({ 'serviceKey': object.fields[key]['serviceKey'] })\r\n                }\r\n            }\r\n            return arr\r\n        })\r\n\r\n        Promise.all(bodyForEachItem.map(eachitem =>\r\n            call_API(createbody('POST', 'eka_mdm_host', '/mdm/5d907cd2-7785-4d34-bcda-aa84b2158415/data', eachitem)))).then(respo => {\r\n                let items = Object.values(respo).map((item, index) => {\r\n                    let displayValue = {}\r\n                    for (let k in object.fields) {\r\n                        if (object.fields[k].hasOwnProperty('dropdownValue') && contract_data.itemDetails[index][k]) {\r\n                            displayValue[object.fields[k].dropdownValue] = idtovalue(item[object.fields[k].serviceKey], contract_data.itemDetails[index][k])\r\n                        }\r\n                    }\r\n                    contract_data.itemDetails[index] = {\r\n                        ...contract_data.itemDetails[index],\r\n                        ...displayValue\r\n                    }\r\n                    if(req.body.selectedData.contractRefNo){\r\n                        contract_data.itemDetails[index]['contractRefNo'] = req.body.selectedData.contractRefNo\r\n                    }\r\n                    return contract_data.itemDetails[index]\r\n                })\r\n                res.status(200).send(items)\r\n            }).catch(err => {\r\n                res.status(500).send(err)\r\n            })\r\n    }).catch(err => {\r\n        res.status(500).send(err)\r\n    })\r\n}).catch(err => {\r\n    res.status(500).send(err)\r\n})\r\n",
  "sys__UUID" : "a7d6eb75-36cf-4f06-a747-bdecf209b542",
  "sys__createdBy" : "avinash.singh@ekaplus.com",
  "type" : "processor"
}