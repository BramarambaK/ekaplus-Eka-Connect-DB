{
  "_id": "price_withdraw_processor",
  "name": "price_withdraw_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "object": "ab3fc628-ecbc-43e0-81cb-aa2d5b6e5c40",
  "snippet": "var moment = require(\"moment\");\r\nvar currentDateTime = moment.utc();\r\nconst appId = \"12325a98-a959-4939-9005-4158d136afcd\";\r\nconst priceObjId = \"ab3fc628-ecbc-43e0-81cb-aa2d5b6e5c40\";\r\nconst getRequestBody = (url, body) => ({\r\n  method: 'GET',\r\n  url,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    'X-TenantID': req.headers['x-tenantid'],\r\n  },\r\n  body,\r\n  json: true,\r\n});\r\n// var connectData = getRequestBody(\r\n//   req.body.propertyList.eka_connect_host +\r\n//     '/data/12325a98-a959-4939-9005-4158d136afcd/ab3fc628-ecbc-43e0-81cb-aa2d5b6e5c40',\r\n//   {}\r\n// );\r\nfunction get_connectData(connectUrl) {\r\n  return new Promise(function (resolve, reject) {\r\n    request(connectUrl, function (err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n}\r\nvar connectMetaPrice = {\r\n  method: \"GET\",\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    `/meta/app/${appId}/object/${priceObjId}`,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n    requestid: req.headers[\"requestid\"],\r\n  },\r\n};\r\nfunction get_connectMeta(connectData) {\r\n  return new Promise(function (resolve, reject) {\r\n  //   console.log(\"get_connectData Request-\" + JSON.stringify(connectData));\r\n    request(connectData, function (err, response, body) {\r\n      //   console.log(\"get_connectData Response-\" + JSON.stringify(body));\r\n      if (response.statusCode === 200) resolve(body);\r\n      else {\r\n        reject(err || body);\r\n      }\r\n    });\r\n  });\r\n}\r\nconst userInfo = getRequestBody(\r\n  req.body.propertyList.eka_connect_host + '/api/getbpuserinfo'\r\n);\r\nvar offset = 0;\r\nlet finalData = [];\r\nvar data;\r\n//Format payload into object array\r\nif (!Array.isArray(req.body.bulkPayLoadData)) {\r\n  data = [{ ...req.body }];\r\ndelete data[0][\"processorDetails\"];\r\ndelete data[0][\"propertyList\"];\r\n} else {\r\n  data = req.body.bulkPayLoadData;\r\n}\r\n\r\nif (data.length > 0) {\r\n  get_connectData(userInfo).then((userDetails) => {\r\n    const userName =\r\n      userDetails.data.firstName + ' ' + userDetails.data.lastName;\r\n      get_connectMeta(connectMetaPrice)\r\n      .then(async (objectMeta) => {\r\n          var priceUniqueFields = JSON.parse(objectMeta).uniqueFields;\r\n          priceUniqueFields.push('startDateTime','startDate','startTime','endDateTime','endDate','endTime');\r\n          var currentDateTimeWithTimezone;\r\n          for (let i = 0; i < data.length; i++) {\r\n            data[i]['sustainable'] =\r\n            data[i]['sustainable'] == 'Yes' ? true : false;\r\n            offset = data[i].clientTimezoneOffset ? data[i].clientTimezoneOffset : 0;\r\n            currentDateTimeWithTimezone = currentDateTime.clone().subtract(offset, 'minutes');\r\n\t\t\t      if(moment.utc(data[i].startDateTime) > currentDateTime){\r\n              data[i].startDateTime = currentDateTime.format('YYYY-MM-DDTHH:mm:ss[Z]');\r\n              data[i].startDate = currentDateTimeWithTimezone.format('YYYY-MM-DD');\r\n              data[i].startTime = currentDateTimeWithTimezone.format('HH:mm');\r\n            }\r\n            data[i].endDateTime = currentDateTime.format('YYYY-MM-DDTHH:mm:ss[Z]');\r\n            data[i].endDate = currentDateTimeWithTimezone.format('YYYY-MM-DD');\r\n            data[i].endTime = currentDateTimeWithTimezone.format('HH:mm');\r\n\t\t\t  \r\n            finalData.push({\r\n              ...priceUniqueFields.reduce(\r\n                (result, item) => ({\r\n                  ...result,\r\n                  [item]: data[i][item],\r\n                }),\r\n                {}\r\n              ),\r\n              status: 'Expired',\r\n              withdrawnBy: userName,\r\n            });\r\n          }\r\n          console.log('finalData-',JSON.stringify(finalData));\r\n          res.status(200).send(finalData);\r\n      })\r\n      .catch((err) => {\r\n        res.status(500).send('Something went wrong. Kindly check after some time.');\r\n      });\r\n  });\r\n}",
  "sys__UUID": "a98a212d-1ad2-453c-9131-9215dd7a0646"
}
