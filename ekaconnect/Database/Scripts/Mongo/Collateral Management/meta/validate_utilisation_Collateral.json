{
  "_id": "validate_utilisation_Collateral",
  "name": "validate_utilisation_Collateral",
  "type": "processor",
  "refType": "app",
  "refTypeId": "00ca04e8-5ca5-4c2f-8636-23b1d79fab5b",
  "snippet": "req.body.utilization.forEach((item) => {\r\n\tif (!item.allocatedTo) {\r\n\t\treturn res.status(500).send('Allocated To filed is require to be filled!');\r\n\t} else if (!item.utilizedAmount) {\r\n\t\treturn res.status(500).send('Utilized Amount filed are require to be filled!');\r\n\t} else if (!item.date) {\r\n\t\treturn res.status(500).send('Date filed are require to be filled!');\r\n\t}\r\n});\r\n\r\nconst data = {\r\n\trefNo: req.body.refNo\r\n};\r\n\r\nvar user = {\r\n\tmethod: 'GET',\r\n\turl: req.body.propertyList.eka_connect_host + '\/api\/userinfo',\r\n\theaders: {\r\n\t\tAuthorization: req.headers.authorization,\r\n\t\t'X-TenantID': req.headers['x-tenantid']\r\n\t},\r\n\tjson: true\r\n};\r\n\r\nvar getDataOfUser = function getDataOfUser() {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\trequest(user, function (err, response, body) {\r\n\t\t\tif (response.statusCode >= 200 && response.statusCode <= 299) {\r\n\t\t\t\tresolve(body);\r\n\t\t\t} else {\r\n\t\t\t\treject(body);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n};\r\n\r\ngetDataOfUser().then(async function (userinfo) {\r\n\treq.body.utilization.forEach((item) => {\r\n\t\titem.refNo = req.body.refNo;\r\n\t\titem['userName'] = userinfo.firstName + ' ' + userinfo.lastName;\r\n\t});\r\n\r\n\tlet all = Promise.all([getId(req.body.utilization), getAllocationData()]).then((responces) => {\r\n\t\tdata['utilization'] = responces[0];\r\n\r\n\t\tupdateAllocationDetils(responces[1]);\r\n\t\tres.status(200).send(data);\r\n\t})\r\n\r\n}).catch(function (err) {\r\n\tres.status(500).send(err);\r\n});\r\n\r\n\r\nvar Payload = {\r\n\tmethod: 'POST',\r\n\turl: req.body.propertyList.eka_connect_host + '\/workflow',\r\n\theaders: {\r\n\t\t'Content-Type': 'application\/json',\r\n\t\tAuthorization: req.headers.authorization,\r\n\t\t'X-TenantID': req.headers['x-tenantid']\r\n\t},\r\n\tjson: true,\r\n\tbody: {\r\n\t\tworkflowTaskName: 'saveutilisationrealobj',\r\n\t\ttask: 'saveutilisationrealobj',\r\n\t\tappName: 'collateral',\r\n\t\tappId: '00ca04e8-5ca5-4c2f-8636-23b1d79fab5b',\r\n\t\toutput: {\r\n\t\t\tsaveutilisationrealobj: {}\r\n\t\t},\r\n\t\tid: '',\r\n\t\tparams: {},\r\n\t\tsD: []\r\n\t}\r\n};\r\n\r\nvar user = {\r\n\tmethod: 'GET',\r\n\turl: req.body.propertyList.eka_connect_host + '\/api\/userinfo',\r\n\theaders: {\r\n\t\tAuthorization: req.headers.authorization,\r\n\t\t'X-TenantID': req.headers['x-tenantid']\r\n\t},\r\n\tjson: true\r\n};\r\n\r\nfunction saveIdData(data) {\r\n\treturn new Promise(async function (resolve, reject) {\r\n\t\tconsole.log(data)\r\n\t\tPayload.body.output.saveutilisationrealobj = data;\r\n        Payload.body.id=data.id?data.id:'';\r\n\t\trequest(Payload, function (err, response, body) {\r\n\t\t\tif (response.statusCode >= 200 && response.statusCode <= 299) {\r\n\t\t\t\tresolve(body.data);\r\n\t\t\t} else {\r\n\t\t\t\treject(body);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\nfunction updateAllocationDetils(res) {\r\n\r\n\tlet utilizedNewArray = {};\r\n\tlet utilization = req.body.utilization;\r\n\r\n\tutilization.forEach(item => {\r\n\t\tutilizedNewArray[item.allocatedTo] = utilizedNewArray[item.allocatedTo] ? (utilizedNewArray[item.allocatedTo] + item.utilizedAmount) : item.utilizedAmount;\r\n\t});\r\n\r\n\tres[0].physicals.map(item => {\r\n\t\tlet amount = utilizedNewArray[item.allocationId];\r\n\t\titem.utilizedAmount = amount;\r\n\t});\r\n\r\n\tlet updateAllocationPayload = {\r\n\t\tmethod: 'POST',\r\n\t\turl: req.body.propertyList.eka_connect_host + '\/workflow',\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application\/json',\r\n\t\t\tAuthorization: req.headers.authorization,\r\n\t\t\t'X-TenantID': req.headers['x-tenantid']\r\n\t\t},\r\n\t\tjson: true,\r\n\t\tbody: {\r\n\t\t\tworkflowTaskName: \"collateralallocationsform\",\r\n\t\t\ttask: \"collateralallocationscomposite\",\r\n\t\t\tappName: \"collateral\",\r\n\t\t\tappId: \"00ca04e8-5ca5-4c2f-8636-23b1d79fab5b\",\r\n\t\t\toutput: {\r\n\t\t\t\tcollateralallocationsform: {\r\n\t\t\t\t\ttypeofallocation: \"Physicals\",\r\n\t\t\t\t\trefNo: req.body.refNo,\r\n\t\t\t\t\tphysicals: res[0].physicals,\r\n                    disableAllocationPopup: true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tid: res[0]._id,\r\n\t\t\tparams: {},\r\n\t\t\tsD: []\r\n\t\t}\r\n\t};\r\n\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\trequest(updateAllocationPayload, function (err, response, body) {\r\n\t\t\tif (response.statusCode >= 200 && response.statusCode <= 299) {\r\n\t\t\t\tresolve(body);\r\n\t\t\t} else {\r\n\t\t\t\treject(body);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}\r\n\r\nasync function getId(arr) {\r\n\tconst id = [];\r\n\tfor (var i = 0; i < arr.length; i++) {\r\n\t\tawait saveIdData(arr[i]).then(function (data) {\r\n\t\t\tid.push(data);\r\n\t\t});\r\n\t}\r\n\treturn id;\r\n}\r\n\r\nvar payloadForGetAllocation = {\r\n\tmethod: 'GET',\r\n\turl: `${req.body.propertyList.eka_connect_host}\/data\/${req.body.appId}\/5e6a81d6-1a86-4cc9-bdf7-a59190278be3?refNo=${req.body.refNo}`,\r\n\theaders: {\r\n\t\tAuthorization: req.headers.authorization,\r\n\t\t'Content-Type': 'application\/json',\r\n\t\t'X-TenantID': req.headers['x-tenantid']\r\n\t},\r\n\tjson: true,\r\n\tbody: {}\r\n}\r\n\r\nfunction getAllocationData() {\r\n\treturn new Promise(function (resolve, reject) {\r\n\t\trequest(payloadForGetAllocation, function (err, response, body) {\r\n\t\t\tif (response.statusCode >= 200 && response.statusCode <= 299) {\r\n\t\t\t\tresolve(body);\r\n\t\t\t} else {\r\n\t\t\t\treject(body);\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n}",
  "sys__UUID": "c0fc1ed9-5e99-4cd7-9efa-45d756ef3e72"
}
