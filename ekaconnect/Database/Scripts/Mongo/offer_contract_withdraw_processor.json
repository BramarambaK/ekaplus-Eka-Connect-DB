{
  "_id": "offer_contract_withdraw_processor",
  "name": "offer_contract_withdraw_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "object": "46e84f42-6288-4027-b6d0-fd1c11019259",
  "sys__UUID": "08114d57-391b-4a1c-9010-99ea24f3f45d",
  "snippet": "    var payloadData;\r\n    var payloadDataOpenTab = [];\r\n    var withdrawnRequestId = req.body.requestId;\r\n\r\n    payloadData = [\r\n      (({ contractRefNo, contractItemRefNo, requestIdUnique }) => ({\r\n        contractRefNo,\r\n        contractItemRefNo,\r\n        requestIdUnique,\r\n        approvalStatus: 'Withdrawn',\r\n        isRequestActive: false\r\n      }))(req.body)\r\n    ];\r\n\r\n    var contractRequestConnectData = {\r\n      method: 'GET',\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/data/12325a98-a959-4939-9005-4158d136afcd/3725efac-7f2a-462b-8af0-5462e33cf544',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        requestid: req.headers['requestid'] + '-processor'\r\n      },\r\n      body: {\r\n        filterData: {\r\n          filter: [\r\n            {\r\n              fieldName: 'contractRefNo',\r\n              operator: 'in',\r\n              value: []\r\n            },\r\n            {\r\n              fieldName: 'requestType',\r\n              operator: 'in',\r\n              value: ['New contract', 'Amendment']\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      json: true\r\n    };\r\n\r\n    function get_contractRequestconnectData() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(contractRequestConnectData, function(err, response, body) {\r\n          if (response.statusCode === 200) resolve(body);\r\n          else {\r\n            reject(err || body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    var connectUpdateContractDomainData = {\r\n      method: 'POST',\r\n      url: req.body.propertyList.eka_connect_host + '/workflow',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        requestid: req.headers['requestid'] + '-processor-delete'\r\n      },\r\n      body: {\r\n        output: {\r\n          update_contractDomainData: []\r\n        },\r\n        task: 'update_contractDomainData',\r\n        appId: '12325a98-a959-4939-9005-4158d136afcd',\r\n        workflowTaskName: 'update_contractDomainData'\r\n      },\r\n      json: true\r\n    };\r\n\r\n    function get_connectData(connectUrl) {\r\n      console.log('reuwst', connectUrl);\r\n      return new Promise(function(resolve, reject) {\r\n        request(connectUrl, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          } else {\r\n            console.log('faliure 1', body);\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    (async () => {\r\n      contractRequestConnectData.body.filterData.filter[0].value = payloadData.map(o => o.contractRefNo);\r\n      await get_contractRequestconnectData().then(result => {\r\n        if (result > 0) {\r\n          result.forEach(element =>\r\n            payloadDataOpenTab.push(\r\n              (({ contractRefNo, contractItemRefNo, requestId }) => ({\r\n                contractRefNo,\r\n                contractItemRefNo,\r\n                requestIdUnique: requestId + '-',\r\n                approvalStatus: 'Withdrawn',\r\n                isRequestActive: false\r\n              }))(element)\r\n            )\r\n          );\r\n        }\r\n      });\r\n      payloadData.push(...payloadDataOpenTab);\r\n      console.log('payloadData' + JSON.stringify(payloadData));\r\n      connectUpdateContractDomainData.body.output.update_contractDomainData = payloadData;\r\n      get_connectData(connectUpdateContractDomainData)\r\n        .then(result => {\r\n          res.status(200).send({\r\n            requestId: withdrawnRequestId\r\n          });\r\n        })\r\n        .catch(err => {\r\n          res.status(500).send(err);\r\n        });\r\n    })();\r\n  "
}
