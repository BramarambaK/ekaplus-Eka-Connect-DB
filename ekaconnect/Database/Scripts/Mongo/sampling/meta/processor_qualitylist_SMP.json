{
  "_id" : "processor_qualitylist_SMP",
  "name" : "processor_qualitylist",
  "type" : "processor",
  "refType" : "app",
  "refTypeId" : "bcb79287-04fb-4af2-ae97-61af272b2c45",
  "version" : "V2",
  "snippet" : "var moment = require(\"moment\");\r\nvar connectQualityUrl =\r\n  req.body.propertyList.eka_connect_host + \"/workflow/data\";\r\nvar connectUrl = req.body.propertyList.eka_connect_host + \"/workflow/data\";\r\nvar connectQualityBody = {\r\n  appId: req.body.appId,\r\n  workFlowTask: \"qualitylistCOPY\",\r\n};\r\nvar connectBody = {\r\n  appId: req.body.appId,\r\n  workFlowTask: \"createqualitycompositeview\",\r\n};\r\nvar connectQuality = {\r\n  method: \"POST\",\r\n  body: connectQualityBody,\r\n  url: connectQualityUrl,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nvar connect = {\r\n  method: \"POST\",\r\n  body: connectBody,\r\n  url: connectUrl,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nfunction get_connectQuality() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(connectQuality, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\nfunction get_connect() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(connect, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\nPromise.all([get_connectQuality(), get_connect()])\r\n  .then(function (result) {\r\n    var quality = result[0].data;\r\n    var innerdata = result[1].data;\r\n    var list = [];\r\n    for (var i = 0; i < quality.length; i++) {\r\n      quality[i][\"ref_no\"] = [];\r\n      for (var j = 0; j < innerdata.length; j++) {\r\n        if (quality[i][\"quality_ref_no\"] == innerdata[j][\"quality_ref_no\"]) {\r\n          if (quality[i][\"ref_no\"])\r\n            quality[i][\"ref_no\"].push(innerdata[j][\"sample_ref_no\"]);\r\n        }\r\n      }\r\n      quality[i][\"ref_no\"] = quality[i][\"ref_no\"].filter(\r\n        (v, i, a) => a.indexOf(v) === i\r\n      );\r\n      quality[i][\"ref_no\"] = quality[i][\"ref_no\"].toString();\r\n    }\r\n    for (var i = 0; i < quality.length; i++) {\r\n        quality[i][\"quality_date\"] = moment(quality[i][\"quality_date\"]).format(\"DD-MMM-YYYY\")\r\n      if (quality[i][\"forqualitymandatory\"] == \"forqualitymandatory\") {\r\n        list.push(quality[i]);\r\n      }\r\n    }\r\n\r\n    success(list, 200);\r\n  })\r\n  .catch((err) => {\r\n    error(err, 500);\r\n  });\r\n",
  "sys__UUID" : "2bb1e37d-e0d3-44d6-a66d-bde5c40aca7f",
  "sys__createdBy" : "srini@ekaplus.com"
}