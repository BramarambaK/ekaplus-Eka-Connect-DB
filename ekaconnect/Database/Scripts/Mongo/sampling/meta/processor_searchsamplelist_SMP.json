{
  "_id": "processor_searchsamplelist_SMP",
  "name": "processor_searchsamplelist",
  "type": "processor",
  "refType": "app",
  "refTypeId": "bcb79287-04fb-4af2-ae97-61af272b2c45",
  "version": "V2",
  "snippet": "\r\n    var connectSampleUrl = req.body.propertyList.eka_connect_host + '\/workflow\/data';\r\n    var connectInstuctionUrl = req.body.propertyList.eka_connect_host + '\/workflow\/data';\r\n    var connectSampleBody = {\r\n      appId: req.body.appId,\r\n      workFlowTask: 'linkcontractCOPY'\r\n    };\r\n    var connectInstructionBody = {\r\n      appId: req.body.appId,\r\n      workFlowTask: 'samplinginstructionlistCOPY'\r\n    };\r\n    var connectSample = {\r\n      method: 'POST',\r\n      body: connectSampleBody,\r\n      url: connectSampleUrl,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    var connectInstruction = {\r\n      method: 'POST',\r\n      body: connectInstructionBody,\r\n      url: connectInstuctionUrl,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_connectSample() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(connectSample, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    function get_connectInstruction() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(connectInstruction, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    Promise.all([get_connectSample(), get_connectInstruction()])\r\n      .then(function(result) {\r\n        var header = result[0].data;\r\n        var instructions = result[1].data;\r\n        var instruction = instructions.filter(data => data.status == 'active');\r\n        var outputData = [];\r\n        for (var j = 0; j < header.length; j++) {\r\n          if (header[j]['_id']) delete header[j]['_id'];\r\n          if (header[j]['object']) delete header[j]['object'];\r\n          if (header[j]['refType']) delete header[j]['refType'];\r\n          if (header[j]['refTypeId']) delete header[j]['refTypeId'];\r\n          if (header[j]['sys__createdBy']) delete header[j]['sys__createdBy'];\r\n          if (header[j]['sys__createdOn']) delete header[j]['sys__createdOn'];\r\n          if (header[j]['refTypeId']) delete header[j]['refTypeId'];\r\n          if (header[j]['sys__updatedBy']) delete header[j]['sys__updatedBy'];\r\n          if (header[j]['sys__updatedOn']) delete header[j]['sys__updatedOn'];\r\n          if (header[j]['sys__data__state']) delete header[j]['sys__data__state'];\r\n          if (header[j]['sys__UUID']) delete header[j]['sys__UUID'];\r\n          for (var i = 0; i < instruction.length; i++) {\r\n            if (instruction[i]['sample_instruction_id'] == header[j]['sample_instruction_id']) {\r\n              header[j]['sample_ref_no'] = '';\r\n              header[j]['product_specs'] = '';\r\n              header[j]['quality'] = '';\r\n              header[j]['sample_sent_to'] = '';\r\n              header[j]['sample_approval_status'] = '';\r\n              header[j]['allocated_to'] = '';\r\n              header[j]['supplier_CP_name'] = '';\r\n              header[j]['container_no'] = '';\r\n              header[j]['sample_instruction_id_display'] = '';\r\n              if (header[j]['sample_status']) header[j]['sample_approval_status'] = header[j]['sample_status'];\r\n              if (header[j]['sample_quantity']) header[j]['quality'] = header[j]['sample_quantity'];\r\n              if (instruction[i]['product']) header[j]['product_specs'] = instruction[i]['product'];\r\n              if (instruction[i]['sample_instruction_id_display']) {\r\n                header[j]['sample_instruction_id_display'] = instruction[i]['sample_instruction_id_display'];\r\n                header[j]['sample_ref_no'] = instruction[i]['sample_instruction_id_display'];\r\n              }\r\n              if (instruction[i]['product_specs']) header[j]['product_specs'] = instruction[i]['product_specs'];\r\n              if (instruction[i]['send_sample_to_name'])\r\n                header[j]['sample_sent_to'] = instruction[i]['send_sample_to_name'];\r\n              if (instruction[i]['instruction_against_ref_no'])\r\n                header[j]['allocated_to'] = instruction[i]['instruction_against_ref_no'];\r\n              if (instruction[i]['send_sample_to_name'])\r\n                header[j]['supplier_CP_name'] = instruction[i]['send_sample_to_name'];\r\n              if (instruction[i]['sample_status'] === 'Pending')\r\n                header[j]['sample_approval_status'] = instruction[i]['sample_status'];\r\n              break;\r\n            } else if (instruction.length - 1 == i) {\r\n              header[j]['present'] = 'deleted';\r\n            }\r\n          }\r\n        }\r\n        for (var j = 0; j < header.length; j++) {\r\n          if (header[j]['sample_ref_no'] && header[j]['present'] != 'deleted') {\r\n            outputData.push(header[j]);\r\n          }\r\n        }\r\n        console.log(header);\r\n        \/\/res.status(200).send(outputData);\r\n        success(outputData, 200);\r\n      })\r\n      .catch(err => {\r\n        \/\/    res.status(500).send(err);\r\n        error(err, 500);\r\n      });\r\n  ",
  "sys__UUID": "ad28b7a9-4476-4d00-a382-eef82ff07885",
  "sys__createdOn": ISODate("2019-05-22T09:51:04.600Z"),
  "sys__createdBy": "srini@ekaplus.com"
}
