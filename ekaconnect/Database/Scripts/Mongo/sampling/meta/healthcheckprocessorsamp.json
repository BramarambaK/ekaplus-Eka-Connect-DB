{
  "_id": "HEALTHCHECK_PROCESSOR_SAMPLING",
  "name": "healthcheckprocessorsamp",
  "type": "processor",
  "refType": "app",
  "refTypeId": "bcb79287-04fb-4af2-ae97-61af272b2c45",
  "snippet": "\r\nlet propertyList = req.body.propertyList;\r\nvar output = [];\r\nvar properties = [];\r\nif (propertyList.isAWSUser) output.push({ target: 'Property', targetType: 'isAWSUser', status: 'Success' });\r\nelse\r\n    output.push({\r\n        target: 'Property',\r\n        targetType: 'isAWSUser',\r\n        status: 'Fail',\r\n        statusMessage: 'isAWSUser property not present'\r\n    });\r\nvar collection = {\r\n    method: 'POST',\r\n    url: req.body.propertyList.eka_connect_host +\r\n        '/collectionmapper/' +\r\n        req.body.appId +\r\n        '/37ee3da6-dfa5-487e-920d-ed7656ee2795/fetchCollectionRecords',\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json',\r\n        ttl: 300,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        'X-Remote-User': 'ekaApp'\r\n    },\r\n    json: true\r\n};\r\n\r\nfunction get_collection(collectionName) {\r\n    if (collectionName) {\r\n        collection.body = {}\r\n        collection.body = { collectionName: collectionName }\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        request(collection, function (err, response, body) {\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nvar property = {\r\n    method: 'GET',\r\n    url: '',\r\n    json: true\r\n};\r\nfunction get_property(propertyURL) {\r\n    if (propertyURL) {\r\n        property.url = propertyURL;\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        request(property, function (err, response, body) {\r\n            if (response && response.statusCode) {\r\n                if (typeof body == 'string') {\r\n                    body = {};\r\n                }\r\n                body.status = '';\r\n                body.status = response.statusCode;\r\n            }\r\n            resolve(err || body);\r\n        });\r\n    });\r\n}\r\n\r\nvar collectionName = [\r\n    'Sampling Physical trade details',\r\n    'Sampling Allocation group details',\r\n    'Sampling Logistics details',\r\n    'Sampling Allocation group header'\r\n];\r\n\r\n//Properties\r\nproperties = [\r\n    { propertyName: 'eka_connect_host', propertyURL: propertyList.eka_connect_host },\r\n\r\n    { propertyName: 'eka_ctrm_host', propertyURL: propertyList.eka_ctrm_host },\r\n    {\r\n        propertyName: 'eka_connect_ui_host',\r\n        propertyURL: propertyList.eka_connect_ui_host\r\n    },\r\n    { propertyName: 'eka_utility_host', propertyURL: propertyList.eka_utility_host }\r\n];\r\nconst run = async function () {\r\n    const collectionData = await Promise.all(\r\n        collectionName.map(async item => {\r\n            return await get_collection(item);\r\n        })\r\n    ).then(result => {\r\n        function newItem(item, index) {\r\n            if (item.data) output.push({ target: 'Collection', targetType: collectionName[index], status: 'Success' });\r\n            else\r\n                output.push({\r\n                    target: 'Collection',\r\n                    targetType: collectionName[index],\r\n                    status: 'Fail',\r\n                    statusMessage: item['message']\r\n                });\r\n        }\r\n        result.forEach(newItem);\r\n        return output;\r\n    });\r\n    const errorResponse = [];\r\n    const propertyData = await Promise.all(\r\n        properties.map(async item => {\r\n            return await get_property(item.propertyURL);\r\n        })\r\n    ).then(err => {\r\n        function error(item, index) {\r\n            if (Number(item.status) == 200 || (Number(item.status) >= 400 && Number(item.status) <= 600))\r\n                errorResponse.push({ target: 'API', targetType: properties[index]['propertyName'], status: 'Success' });\r\n            else\r\n                errorResponse.push({\r\n                    target: 'API',\r\n                    targetType: properties[index]['propertyName'],\r\n                    status: 'Fail',\r\n                    statusMessage: properties[index]['propertyURL'] + ' is failing. PLease check'\r\n                });\r\n        }\r\n        err.forEach(error);\r\n        return errorResponse;\r\n    });\r\n    collectionData;\r\n    propertyData;\r\n    errorResponse;\r\n    var responseArray = [];\r\n    responseArray = collectionData.concat(propertyData);\r\n    res.status(200).send(responseArray);\r\n};\r\nrun();\r\n",
  "sys__UUID": "29285d5b-e0fc-4cde-bb3a-f9c26c6d40f8",
  "sys__createdBy": "ekauser@ekaplus.com"
}
