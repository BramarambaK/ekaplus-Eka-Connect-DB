{
    "_id" : "filter_samplinginstructionlistdummyv2",
    "name" : "filter_samplinginstructionlistdummyv2",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "bcb79287-04fb-4af2-ae97-61af272b2c45",
    "snippet" : "\r\n    var moment = require('moment')\r\n    var apiDetails = {\r\n      method: 'POST',\r\n      body: { appId: 'bcb79287-04fb-4af2-ae97-61af272b2c45', workFlowTask: 'samplinginstructionlistdummyv2' },\r\n      url: req.body.propertyList.eka_connect_host + '\/workflow\/data',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application\/json',\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    function get_data() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(apiDetails, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          } else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    get_data().then(data => {\r\n      let results = data.data.map(function (item) {\r\n        if (item.sys__updatedOn) item.sys__updatedOn = moment(item.sys__updatedOn).format('DD-MMM-YYYY');\r\n        return item;\r\n      })\r\n      results.sort(function(a,b){\r\n        return new Date(b.sys__updatedOn) - new Date(a.sys__updatedOn);\r\n      });\r\n      res.status(200).send(results);\r\n    }).catch(err => {\r\n      console.error(err)\r\n      res.status(500).send(err)\r\n    });\r\n  ",
    "sys__UUID" : "128bb6c9-d092-4df1-b611-4698e08b8380"
}