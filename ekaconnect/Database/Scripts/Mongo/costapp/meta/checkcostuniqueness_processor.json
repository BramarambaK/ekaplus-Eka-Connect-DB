{
  "_id": "checkcostuniqueness_processor",
  "name": "checkcostuniqueness",
  "type": "processor",
  "refType": "app",
  "refTypeId": "d33143ac-4164-4a3f-8d30-61d845c9eeed",
  "snippet": "var paramString = \"\";\r\nvar object;\r\nvar data = req.body;\r\nvar isZeroCostAllowed = req.body.propertyList.is_zero_cost_allowed;\r\nif (!isZeroCostAllowed && Number(data.costValue) == 0) {\r\n  var msg = \"Validation error - zero cost is not allowed.\";\r\n  res.status(500).send(msg);\r\n  return;\r\n}\r\nif (req.body.queryParams.hasOwnProperty(\"draftEstimateNo\"))\r\n  object = \"00189ca9-cfc1-4327-95ac-f937f22deb60\";\r\nelse if (req.body.queryParams.hasOwnProperty(\"entityRefNo\"))\r\n  object = \"f3d6ff89-b541-4dc0-b88d-12065d10cc90\";\r\nfor (var key in req.body.queryParams) {\r\n  if (\r\n    key === \"entityType\" ||\r\n    key === \"draftEstimateNo\" ||\r\n    key === \"entityRefNo\"\r\n  ) {\r\n    if (paramString) {\r\n      paramString = paramString + \"&\";\r\n    }\r\n    paramString = paramString + key + \"=\" + req.body.queryParams[key];\r\n  }\r\n}\r\nvar connectData = {\r\n  method: \"GET\",\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    `\/data\/d33143ac-4164-4a3f-8d30-61d845c9eeed\/${object}?${paramString}`,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n    json: true,\r\n  },\r\n};\r\nfunction get_connectData() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(connectData, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction validate(estimates) {\r\n  return new Promise((resolve, reject) => {\r\n    var valid = true;\r\n    for (var i = 0; i < estimates.length; i++) {\r\n      if (\r\n        estimates[i].costComponentDisplayName ==\r\n          data.costComponentDisplayName &&\r\n        estimates[i].counterpartyGroupNameDisplayName ==\r\n          data.counterpartyGroupNameDisplayName &&\r\n        estimates[i].incExpenseDisplayName == data.incExpenseDisplayName &&\r\n        estimates[i].costAmountInBaseCurrencyUnitId ==\r\n          data.costAmountInBaseCurrencyUnitId &&\r\n        estimates[i].sys__UUID != data.sys__UUID\r\n      ) {\r\n        if (\r\n          (typeof data.contractItemRefNo === \"undefined\" ||\r\n            data.contractItemRefNo === null) &&\r\n          (typeof estimates[i].contractItemRefNo === \"undefined\" ||\r\n            estimates[i].contractItemRefNo === null)\r\n        ) {\r\n          valid = false;\r\n          break;\r\n        } else if (\r\n          (typeof data.contractItemRefNo === \"undefined\" ||\r\n            data.contractItemRefNo === null ||\r\n            data.contractItemRefNo) &&\r\n          estimates[i].contractItemRefNo\r\n        ) {\r\n          if (estimates[i].contractItemRefNo === data.contractItemRefNo) {\r\n            valid = false;\r\n            break;\r\n          }\r\n        } else {\r\n          valid = false;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (valid) resolve(true);\r\n    else resolve(false);\r\n  });\r\n}\r\n\r\nget_connectData().then(async (estimates) => {\r\n  estimates = JSON.parse(estimates);\r\n  await validate(estimates).then((valid) => {\r\n    let is_same_cost_accrual_estimate_allowed =\r\n      req.body.propertyList.is_same_cost_accrual_estimate_allowed;\r\n    let dataFromQuery = JSON.parse(JSON.stringify(data.queryParams));\r\n    data = { ...dataFromQuery, ...data };\r\n    data[\"condition\"] = true;\r\n    delete data.queryParams;\r\n    delete data.processorDetails;\r\n    delete data.propertyList;\r\n    delete data.processorId;\r\n    delete data.appId;\r\n    delete data.isPopUp;\r\n    delete data.showMenu;\r\n    delete data.taskId;\r\n    if (valid == true) {\r\n      if (data.hasOwnProperty(\"id\")) delete data.id;\r\n      res.status(200).send(data);\r\n    } else if (is_same_cost_accrual_estimate_allowed == \"'true'\") {\r\n      data[\"condition\"] = false;\r\n      var msg =\r\n        \"This cost has already been defined here. If more cost is required to be added you can modify the existing cost\";\r\n      res.status(200).send(data);\r\n    } else {\r\n      var msg =\r\n        \"This cost has already been defined here. If more cost is required to be added you can modify the existing cost\";\r\n      res.status(500).send(msg);\r\n    }\r\n  });\r\n});\r\n",
  "sys__UUID": "2ccf3834-9ec6-407d-974a-13558b15e48d"
}
