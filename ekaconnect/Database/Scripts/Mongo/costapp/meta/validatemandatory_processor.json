{
  "_id": "validatemandatory_processor",
  "name": "validatemandatory",
  "type": "processor",
  "refType": "app",
  "refTypeId": "d33143ac-4164-4a3f-8d30-61d845c9eeed",
  "snippet": "var paramString = \"\";\r\nvar object = \"00189ca9-cfc1-4327-95ac-f937f22deb60\";\r\nvar contractType;\r\nif (\r\n  req.body.queryParams.contractType &&\r\n  req.body.queryParams.contractType == \"P\"\r\n)\r\n  contractType = \"Purchase\";\r\nelse if (\r\n  req.body.queryParams.contractType &&\r\n  req.body.queryParams.contractType == \"S\"\r\n)\r\n  contractType = \"Sale\";\r\nvar mandatoryDataBody = {\r\n  attributes: [\r\n    {\r\n      attributeName: \"Contract Type\",\r\n      attributeValue: contractType,\r\n    },\r\n    {\r\n      attributeName: \"Contract Incoterm\",\r\n      attributeValue: req.body.queryParams.contractIncoTerm,\r\n    },\r\n    {\r\n      attributeName: \"Valuation Incoterm\",\r\n      attributeValue: req.body.queryParams.valuationIncoTerm,\r\n    },\r\n    {\r\n      attributeName: \"Payment Term\",\r\n      attributeValue: req.body.queryParams.paymentTerm,\r\n    },\r\n  ],\r\n};\r\nfor (var key in req.body.queryParams) {\r\n  if (key === \"entityType\" || key === \"draftEstimateNo\") {\r\n    if (paramString) {\r\n      paramString = paramString + \"&\";\r\n    }\r\n    paramString = paramString + key + \"=\" + req.body.queryParams[key];\r\n  }\r\n}\r\nvar connectData = {\r\n  method: \"GET\",\r\n  url:\r\n    req.body.propertyList.eka_connect_host +\r\n    `/data/d33143ac-4164-4a3f-8d30-61d845c9eeed/${object}?${paramString}`,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n    json: true,\r\n  },\r\n};\r\nfunction get_connectData() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(connectData, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nvar mandatoryData = {\r\n  method: \"POST\",\r\n  url: req.body.propertyList.eka_utility_host + \"/costapp/getCostComponents\",\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  body: mandatoryDataBody,\r\n  json: true,\r\n};\r\nfunction get_mandatoryData() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(mandatoryData, function (err, response, body) {\r\n      if (err || body.error) reject(body);\r\n      else {\r\n        resolve(body);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nPromise.all([get_connectData(), get_mandatoryData()]).then(function (result) {\r\n  var savedRecords = JSON.parse(result[0]);\r\n  var mandatoryRecords = result[1];\r\n  var flag = 0;\r\n  var invalid = false;\r\n  var configFlag = 0;\r\n\r\n  for (var k = 0; k < savedRecords.length; k++) {\r\n    if (savedRecords[k].fxToBaseType) {\r\n      if (\r\n        savedRecords[k].fxToBaseType == \"Absolute\" &&\r\n        !(savedRecords[k].fxToBase || req.body.propertyList.is_zero_cost_allowed)\r\n      ) {\r\n        configFlag = 1;\r\n        break;\r\n      } else if (\r\n        savedRecords[k].fxToBaseType == \"Curve\" &&\r\n        !savedRecords[k].fxRate &&\r\n        !savedRecords[k].fxValueDate\r\n      ) {\r\n        configFlag = 1;\r\n        break;\r\n      }\r\n    }\r\n    if (\r\n      savedRecords[k].rateTypePrice == \"rate\" ||\r\n      savedRecords[k].rateTypePrice == \"absolute\"\r\n    ) {\r\n        if (savedRecords[k].fxToAccuralType !== '') {\r\n            if (savedRecords[k].fxToAccuralType != \"Floating\") {\r\n                if (!savedRecords[k].costValue || !savedRecords[k].costAmountInBaseCurrency || !req.body.propertyList.is_zero_cost_allowed) {\r\n                    flag = 1;\r\n                    break;\r\n                }\r\n            }\r\n        } \r\n        else if (\r\n        !(savedRecords[k].costValue || req.body.propertyList.is_zero_cost_allowed) ||\r\n        !savedRecords[k].costPriceUnitIdDisplayName ||\r\n        !(savedRecords[k].costAmountInBaseCurrency || req.body.propertyList.is_zero_cost_allowed) ||\r\n        !savedRecords[k].costAmountInBaseCurrencyUnitId\r\n        ) {\r\n        configFlag = 1;\r\n        break;\r\n      }\r\n    } else if (savedRecords[k].rateTypePrice == \"% of Price\") {\r\n      if (\r\n        !(savedRecords[k].costValue || req.body.propertyList.is_zero_cost_allowed) ||\r\n        !(savedRecords[k].costAmountInBaseCurrency || req.body.propertyList.is_zero_cost_allowed) ||\r\n        !savedRecords[k].costAmountInBaseCurrencyUnitId\r\n      ) {\r\n        configFlag = 1;\r\n        break;\r\n      }\r\n    } else if (savedRecords[k].rateTypePrice == \"curve\") {\r\n      if (\r\n        !savedRecords[k].costCurve ||\r\n        !savedRecords[k].costMonth ||\r\n        !savedRecords[k].curveCurrency\r\n      ) {\r\n        configFlag = 1;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (configFlag == 1) {\r\n    res.status(500).send(\"Cost Estimates not configured correctly\");\r\n  } else {\r\n    if (mandatoryRecords.length > 0) {\r\n      for (var i = 0; i < mandatoryRecords.length; i++) {\r\n        if (savedRecords.length > 0) {\r\n          for (var j = 0; j < savedRecords.length; j++) {\r\n            if (\r\n              mandatoryRecords[i].templateName ==\r\n                savedRecords[j].templateName ||\r\n              (savedRecords[j].costType == \"template\" &&\r\n                mandatoryRecords[i].costComponentDisplayName !=\r\n                  savedRecords[j].costComponentDisplayName)\r\n            ) {\r\n              flag = 0;\r\n              break;\r\n            } else {\r\n              flag = 1;\r\n            }\r\n          }\r\n          if (flag == 1) {\r\n            invalid = true;\r\n          }\r\n        } else {\r\n          invalid = true;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    if (invalid) {\r\n      res.status(500).send(\"Mandatory costs are missing\");\r\n    } else {\r\n      res.status(200).send(savedRecords);\r\n    }\r\n  }\r\n});",
  "sys__UUID": "e2bc3152-cb28-4b4a-8ff0-6436907e7d61",
  "sys__createdBy": "srini@ekaplus.com"
}
