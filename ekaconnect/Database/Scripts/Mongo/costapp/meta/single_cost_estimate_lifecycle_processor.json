{
  "_id": "costestimatelifecycle_single_estimate_COST",
  "name": "single_cost_estimate_lifecycle",
  "type": "processor",
  "refType": "app",
  "refTypeId": "d33143ac-4164-4a3f-8d30-61d845c9eeed",
  "snippet": "var moment = require(\"moment\");\r\nvar versioning_data = {\r\n    method: \"GET\",\r\n    url:\r\n        req.body.propertyList.eka_connect_host +\r\n        \"\/workflow\/\" +\r\n        req.body.selectedData.refTypeId +\r\n        \"\/_UT_VIEW_VERSION_HISTORY\/data\/\" +\r\n        req.body.selectedData.sys__UUID +\r\n        \"\/versions\",\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n    },\r\n    json: true,\r\n};\r\n\r\nfunction get_connect(input) {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log(\"Request - \" + input.url);\r\n        request(input, function (err, response, body) {\r\n            if (err || body.error) reject(body);\r\n            else {\r\n                console.log(\"Success\");\r\n                resolve(body);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nvar metaObject = {\r\n    method: \"GET\",\r\n    url:\r\n        req.body.propertyList.eka_connect_host +\r\n        \"\/meta\/object\/f3d6ff89-b541-4dc0-b88d-12065d10cc90\",\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n    },\r\n    json: true,\r\n};\r\n\r\nlet fieldsData = {};\r\nget_connect(metaObject).then((result) => {\r\n    fieldsData = result.fields;\r\n}).catch(error => {\r\n    console.log(JSON.stringify(error));\r\n    send(500, 'Error while calling connect-api, please contact system admin');\r\n});\r\n\r\nget_connect(versioning_data)\r\n    .then((result) => {\r\n        var versions = result.versions;\r\n        var details = [];\r\n        var description = [];\r\n        var dataset = [];\r\n        var data = [];\r\n        var values = [];\r\n        var sys_payload = [];\r\n        if (versions[0] && versions[0].entityType)\r\n            details.push({ name: \"Entity Name\", value: versions[0].entityType });\r\n        if (versions[0] && versions[0].entityRefNo)\r\n            details.push({ name: \"Internal Ref No\", value: versions[0].entityRefNo });\r\n        if (versions.length > 1) {\r\n            for (var t = 0; t < versions.length; t++) {\r\n                data = [];\r\n                if (t < versions.length - 1) {\r\n                    data.push(versions[t]);\r\n                    data.push(versions[t + 1]);\r\n                    data;\r\n                    var date = data[1][\"sys__updatedOn\"];\r\n                    \/\/   if (req.body.selectedData.hasOwnProperty(\"timezone\")) {\r\n                    \/\/       date = new Date(date).setMinutes(new Date(date).getMinutes() + req.body.selectedData.timezone)\r\n                    \/\/   }\r\n                    \/\/   date = moment(date).format(\"DD\/MM\/YYYY hh:mm:ss\");\r\n                    var doneBy = data[1][\"sys__updatedBy\"];\r\n                    sys_payload = [];\r\n                    dataset = [];\r\n                    sys_payload = data[1][\"sys__payload\"];\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        var obj = {};\r\n                        for (var j = 0; j < sys_payload.length; j++) {\r\n                            obj[sys_payload[j]] = data[i][sys_payload[j]];\r\n                        }\r\n                        dataset.push(obj);\r\n                    }\r\n                    \/\/ 0 -->prevValues\r\n                    \/\/ 1 --> postValue\r\n                    if (dataset[0][\"costComponent\"]) {\r\n                        delete dataset[0][\"costComponent\"];\r\n                    }\r\n                    if (dataset[1][\"costComponent\"]) {\r\n                        delete dataset[1][\"costComponent\"];\r\n                    }\r\n                    if (dataset[0][\"incExpense\"]) {\r\n                        delete dataset[0][\"incExpense\"];\r\n                    }\r\n                    if (dataset[1][\"incExpense\"]) {\r\n                        delete dataset[1][\"incExpense\"];\r\n                    }\r\n                    if (dataset[0][\"rateTypePrice\"]) {\r\n                        delete dataset[0][\"rateTypePrice\"];\r\n                    }\r\n                    if (dataset[1][\"rateTypePrice\"]) {\r\n                        delete dataset[1][\"rateTypePrice\"];\r\n                    }\r\n                    if (dataset[0][\"counterpartyGroupName\"]) {\r\n                        delete dataset[0][\"counterpartyGroupName\"];\r\n                    }\r\n                    if (dataset[1][\"counterpartyGroupName\"]) {\r\n                        delete dataset[1][\"counterpartyGroupName\"];\r\n                    }\r\n                    if (dataset[0][\"costPriceUnitId\"]) {\r\n                        delete dataset[0][\"costPriceUnitId\"];\r\n                    }\r\n                    if (dataset[1][\"costPriceUnitId\"]) {\r\n                        delete dataset[1][\"costPriceUnitId\"];\r\n                    }\r\n                    if (dataset[0][\"estimateValueUnitId\"]) {\r\n                        delete dataset[0][\"estimateValueUnitId\"];\r\n                    }\r\n                    if (dataset[1][\"estimateValueUnitId\"]) {\r\n                        delete dataset[1][\"estimateValueUnitId\"];\r\n                    }\r\n                    values = Object.keys(dataset[0]);\r\n                    var obj = {};\r\n                    obj[\"timestamp\"] = date;\r\n                    obj[\"doneBy\"] = doneBy;\r\n                    obj[\"details\"] = [];\r\n                    for (var j = 0; j < values.length; j++) {\r\n                        var str = \"\";\r\n                        str = values[j];\r\n                        if (str == \"costComponentDisplayName\") {\r\n                            str = \"Cost Component Name\";\r\n                        } else if (str == \"incExpenseDisplayName\") {\r\n                            str = \"Income\/Expense\";\r\n                        } else if (str == \"rateTypePriceDisplayName\") {\r\n                            str = \"Rate Type\";\r\n                        } else if (str == \"counterpartyGroupNameDisplayName\") {\r\n                            str = \"CP Name\";\r\n                        } \/\/else if (str == \"costPriceUnitIdDisplayName\") {\r\n                        \/\/str = \"Cost Value Unit\";\r\n                        \/\/ } \r\n                        else if (str == fieldsData[str]['labelKey']) {\r\n                            str = fieldsData[str][str];\r\n                        }\r\n                        str = str\r\n                            .replace(\/(_|-)\/g, \" \")\r\n                            .trim()\r\n                            .replace(\/\\w\\S*\/g, function (str) {\r\n                                return str.charAt(0).toUpperCase() + str.substr(1);\r\n                            })\r\n                            .replace(\/([a-z])([A-Z])\/g, \"$1 $2\")\r\n                            .replace(\/([A-Z])([A-Z][a-z])\/g, \"$1 $2\");\r\n                        obj[\"details\"].push({\r\n                            name: str,\r\n                            preValue: dataset[0][values[j]],\r\n                            postValue: dataset[1][values[j]],\r\n                        });\r\n                    }\r\n                    obj;\r\n                    description.push(obj);\r\n                }\r\n            }\r\n            data = { details, description };\r\n            res.status(200).send(data);\r\n        } else {\r\n            description = [];\r\n            var message = \"No versioning history available\";\r\n            data = { details, description, message };\r\n            res.status(200).send(data);\r\n        }\r\n    })\r\n    .catch((err) => {\r\n        console.log(\"error:\" + err.stack);\r\n        res.status(500).send(err);\r\n    });",
  "sys__UUID": "f3c0be10-e863-40c5-865c-e685c1d78077",
  "sys__createdBy": "srini@ekaplus.com"
}