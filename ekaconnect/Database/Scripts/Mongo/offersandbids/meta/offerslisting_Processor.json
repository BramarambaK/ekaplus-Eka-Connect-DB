{
    "_id" : "offerslisting_Processor",
    "name" : "offerslisting_processor",
    "refType" : "app",
    "refTypeId" : "d44a3b31-6758-4367-b8a2-3808532b0c4a",
    "snippet" : "\r\n    var roles = {\r\n      method: 'GET',\r\n      url: req.body.propertyList.platform_url + '/cac-security/api/userinfo?filter=all',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: req.headers.authorization\r\n      },\r\n      json: true\r\n    };\r\n    if (req.headers.hasOwnProperty('device-id')) {\r\n      roles.headers['Device-Id'] = req.headers['device-id'];\r\n    }\r\n    var connectData = {\r\n      method: 'POST',\r\n      url: req.body.propertyList.eka_connect_host + '/workflow/data',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json',\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      body: {\r\n        appId: 'd44a3b31-6758-4367-b8a2-3808532b0c4a',\r\n        workFlowTask: 'getOffersList'\r\n      },\r\n      json: true\r\n    };\r\n    if (req.headers.hasOwnProperty('device-id')) {\r\n      connectData.headers['Device-Id'] = req.headers['device-id'];\r\n    }\r\n    var connectDatabids = {\r\n      method: 'GET',\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/data/d44a3b31-6758-4367-b8a2-3808532b0c4a/7fca5e4f-b554-4141-b347-ee344081ffb8',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        json: true\r\n      }\r\n    };\r\n    if (req.headers.hasOwnProperty('device-id')) {\r\n      connectDatabids.headers['Device-Id'] = req.headers['device-id'];\r\n    }\r\n    function get_connectDatabids() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(connectDatabids, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function get_connectdata() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(connectData, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function get_roles() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(roles, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    Promise.all([get_roles(), get_connectdata(), get_connectDatabids()]).then(result => {\r\n      // let flag = false;\r\n      // if (result[0].permCodes.includes('STD_APP_BIDDER_BID')) {\r\n      //   flag = true;\r\n      // }\r\n      // if (result[0].permCodes.includes('STD_APP_BIDS_OFFEROR')) {\r\n      //   flag = true;\r\n      // }\r\n      // if (flag) {\r\n      let filconnectdata = [];\r\n      let roles = '';\r\n      result[0].roles.forEach(role => {\r\n        roles = roles + role.name + ' ,';\r\n      });\r\n      roles = roles.replace(/,\\s*$/, '');\r\n      let data = result[1].data;\r\n      let biddata = JSON.parse(result[2]);\r\n\r\n      var bidid = '';\r\n      for (let i = 0; i < data.length; i++) {\r\n        data[i]['roles'] = roles;\r\n        bidid = '';\r\n        biddata.forEach(data3 => {\r\n          if (data3.offer_id === data[i].offer_id) {\r\n            bidid = bidid + data3.bid_id + ', ';\r\n          }\r\n        });\r\n        bidid = bidid.replace(/,\\s*$/, '');\r\n        data[i]['bid_id'] = bidid;\r\n        // if (data[i].sys__createdBy === result[0].userName) {\r\n        filconnectdata.push(data[i]);\r\n        //}\r\n      }\r\n      res.status(200).send(filconnectdata);\r\n      // }\r\n    });\r\n ",
    "sys__UUID" : "2491f8f1-a484-4803-a98c-3a9f41c42b32",
    "sys__createdBy" : "gopal.gupta@ekaplus.com",
    "type" : "processor"
}