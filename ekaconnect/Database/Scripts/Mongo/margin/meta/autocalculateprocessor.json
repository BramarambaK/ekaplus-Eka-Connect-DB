{
    "_id" : "autoCalculation",
    "name" : "autoCalculation",
    "type" : "processor",
    "refType" : "app",
    "version":"V2",
    "refTypeId" : "40a27e7f-3f50-406f-a872-2ee7d9436df9",
    "snippet" : "\r\n    if (req.body.propertyList.autocalculationflag == false) {\r\n success([{ autocalculation: 'false' }],200);    \r\n    } else {\r\n      var connectData = {\r\n        method: 'POST',\r\n        url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow/data',\r\n\r\n        headers: {\r\n          Authorization: req.headers.authorization,\r\n          'X-TenantID': req.headers['x-tenantid'],\r\n          json: true,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: {\r\n          appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n          workFlowTask: 'listing'\r\n        },\r\n        json: true\r\n      };\r\n\r\n      function get_connectData() {\r\n        return new Promise(function(resolve, reject) {\r\n          // //console.log('Request - ' + connectData.url);\r\n          // //console.log('Payload -' + JSON.stringify(connectData));\r\n          request(connectData, function(err, response, body) {\r\n            // if (body.message === '403 Forbidden') reject(body);\r\n            //  //console.log('Response - ' + body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n              resolve(body);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      var compositeView = function(index) {\r\n        return {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow/data',\r\n\r\n          headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid'],\r\n            json: true,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: {\r\n            appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n            payLoadData: result[index],\r\n            workFlowTask: 'compositeView'\r\n          },\r\n          json: true\r\n        };\r\n      };\r\n      function get_compositeView(index) {\r\n        return new Promise(function(resolve, reject) {\r\n          //console.log('Request - ' + compositeView.url);\r\n          //console.log('Payload -' + JSON.stringify(connectData));\r\n          // console.log(\"Nubner------------------------\"+index);\r\n          request(compositeView(index), function(err, response, body) {\r\n            // if (body.message === '403 Forbidden') reject(body);\r\n            //console.log('Response - ' + body);\r\n            // console.log(\"Nubner------------------------\"+index);\r\n\r\n            resolve({ body: body, index: index });\r\n          });\r\n        });\r\n      }\r\n      var calculate = function(index) {\r\n        return {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow',\r\n\r\n          headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid'],\r\n            json: true,\r\n            Connection: 'keep-alive',\r\n            'Content-Type': 'application/json'\r\n          },\r\n\r\n          body: {\r\n            appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n\r\n            workflowTaskName: 'compositeView',\r\n            task: 'calculatecompositeView',\r\n            output: {\r\n              compositeView: {\r\n                compositeView: compositeresult,\r\n                listing: result[index]\r\n              }\r\n            }\r\n          },\r\n          json: true\r\n        };\r\n      };\r\n      function get_calculate(index) {\r\n        return new Promise(function(resolve, reject) {\r\n          //console.log('Request - ' + calculate.url);\r\n          //console.log('Payload -' + JSON.stringify(connectData));\r\n\r\n          request(calculate(index), function(err, response, body) {\r\n            // if (body.message === '403 Forbidden') reject(body);\r\n            //console.log('Response - ' + body);\r\n            // console.log(\"Nubner------------------------\"+index);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n              resolve({ body: body, index: index });\r\n            }\r\n          });\r\n        });\r\n      }\r\n      var save = function(index) {\r\n        return {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow',\r\n\r\n          headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid'],\r\n            json: true,\r\n            Connection: 'keep-alive',\r\n            'Content-Type': 'application/json'\r\n          },\r\n          gzip: true,\r\n          body: {\r\n            appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n            id: '',\r\n            workflowTaskName: 'compositeView',\r\n            task: 'compositeView',\r\n            output: {\r\n              compositeView: {\r\n                compositeView: calculatedresult,\r\n                listing: result[index]\r\n              }\r\n            }\r\n          },\r\n          json: true\r\n        };\r\n      };\r\n      function get_save(index) {\r\n        return new Promise(function(resolve, reject) {\r\n          //console.log('Request - ' + compositeView.url);\r\n          //console.log('Payload -' + JSON.stringify(connectData));\r\n          request(save(index), function(err, response, body) {\r\n            // if (body.message === '403 Forbidden') reject(body);\r\n            //console.log('Response - ' + body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n              resolve({ body: body, index: index });\r\n            }\r\n          });\r\n        });\r\n      }\r\n      var failed = function(index) {\r\n        return {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow',\r\n\r\n          headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid'],\r\n            json: true,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: {\r\n            appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n            id: '',\r\n            workflowTaskName: 'failedmarginobject',\r\n            task: 'failedmarginobject',\r\n            output: {\r\n              failedmarginobject: result[index]\r\n            }\r\n          },\r\n          json: true\r\n        };\r\n      };\r\n      function get_failed(index) {\r\n        return new Promise(function(resolve, reject) {\r\n          //console.log('Request - ' + compositeView.url);\r\n          //console.log('Payload -' + JSON.stringify(connectData));\r\n          request(failed(index), function(err, response, body) {\r\n            // if (body.message === '403 Forbidden') reject(body);\r\n            //console.log('Response - ' + body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n              resolve({ body: body, index: index });\r\n            }\r\n          });\r\n        });\r\n      }\r\n      var othercollections = {\r\n        method: 'POST',\r\n        url:\r\n          req.body.propertyList.eka_connect_host +\r\n          '/collectionmapper/40a27e7f-3f50-406f-a872-2ee7d9436df9/3ef370f9-febe-41a0-8e43-4ef6ce769b3b/fetchMultiCollectionRecords',\r\n        headers: {\r\n          Authorization: req.headers.authorization,\r\n          'X-TenantID': req.headers['x-tenantid'],\r\n          'Content-Type': 'application/json',\r\n          'X-Remote-User': 'ekaApp',\r\n          ttl: 300\r\n        },\r\n        body: [\r\n          {\r\n            collectionName: 'InterestRates'\r\n          },\r\n          {\r\n            collectionName: 'FxRates'\r\n          },\r\n          {\r\n            collectionName: 'DefaultTradeMargin'\r\n          },\r\n          {\r\n            collectionName: 'financingDays'\r\n          }\r\n        ],\r\n        json: true\r\n      };\r\n\r\n      function get_othercollections() {\r\n        return new Promise(function(resolve, reject) {\r\n          // console.log('Request - ' + allocation_group_header.url);\r\n          request(othercollections, function(err, response, body) {\r\n            // console.log('Response - header');\r\n            var l = Object.keys(body).length;\r\n            if (l !== 4) {\r\n        error('Unable to get data from Other Collections',500);      \r\n              reject(body);\r\n            } else {\r\n              //  console.log('Success header');\r\n              resolve(body);\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      var successRecords = 0;\r\n      var result = [];\r\n      var compositeresult = [];\r\n      var calculatedresult = [];\r\n      var saved = [];\r\n      var defaultMargin = [];\r\n      var interestall = [];\r\n      var financingDaysfromplatform = [];\r\n      var fxratesall = [];\r\n      var timeInMss2 = new Date().getTime();\r\n      get_othercollections().then(dataother => {\r\n        var paynew = {\r\n          data: dataother['DefaultTradeMargin-']\r\n        };\r\n        defaultMargin.push(paynew);\r\n\r\n        var paynew = {\r\n          data: dataother['InterestRates-']\r\n        };\r\n        interestall.push(paynew);\r\n\r\n        var paynew = {\r\n          data: dataother['financingDays-']\r\n        };\r\n        financingDaysfromplatform.push(paynew);\r\n\r\n        var paynew = {\r\n          data: dataother['FxRates-']\r\n        };\r\n        fxratesall.push(paynew);\r\n        get_connectData().then(data => {\r\n          result = data.data;\r\n\r\n          function autocalculate(i) {\r\n            if (i >= result.length) {\r\n              return;\r\n            }\r\n            result[i].defaultMargin = defaultMargin;\r\n            result[i].interestall = interestall;\r\n            result[i].financingDaysfromplatform = financingDaysfromplatform;\r\n            result[i].fxratesall = fxratesall;\r\n            result[i].autocalculate = true;\r\n\r\n            if (result[i].status != 'Closed') {\r\n              get_compositeView(i).then(data1 => {\r\n                compositeresult = data1.body.data;\r\n                if (data1.body.error || data1.body.errorMessage) {\r\n                  // console.log('Collections giving error');\r\n                  result[data1.index].statusremark = data1.body.message ? data1.body.message : data1.body.errorMessage;\r\n                  get_failed(data1.index)\r\n                    .then(fail => {\r\n                      // console.log(\"BM failed\");\r\n                      i++;\r\n                      return autocalculate(i);\r\n                    })\r\n                    .catch(err => {\r\n                      console.log(err);\r\n                      i++;\r\n                      return autocalculate(i);\r\n                    });\r\n                }\r\n                //console.log('-----------------------------------' + compositeresult);\r\n                else if (compositeresult || compositeresult.listingmargin) {\r\n                  get_calculate(data1.index)\r\n                    .then(data2 => {\r\n                      calculatedresult = data2.body.data;\r\n                      // console.log('Calculated--------------------------' + calculatedresult);\r\n\r\n                      get_save(data2.index)\r\n                        .then(data3 => {\r\n                          // console.log('Savedd----------------------' + data3.body.message);\r\n                          result[data1.index].statusremark = 'gg';\r\n                          successRecords++;\r\n                          i++;\r\n                          return autocalculate(i);\r\n                        })\r\n                        .catch(err => {\r\n                          console.log(err);\r\n                          i++;\r\n                          return autocalculate(i);\r\n                        });\r\n                    })\r\n                    .catch(err => {\r\n                      console.log(err);\r\n                      i++;\r\n                      return autocalculate(i);\r\n                    });\r\n                } else {\r\n                  console.log('error in composite due to some issue' + data1.body);\r\n                  result[data1.index].statusremark = 'something went wrong';\r\n                  get_failed(data1.index)\r\n                    .then(fail => {\r\n                      // console.log(\"BM failed\");\r\n                      i++;\r\n                      return autocalculate(i);\r\n                    })\r\n                    .catch(err => {\r\n                      console.log(err);\r\n                      i++;\r\n                      return autocalculate(i);\r\n                    });\r\n                }\r\n              });\r\n            } else {\r\n              i++;\r\n              return autocalculate(i);\r\n            }\r\n          }\r\n\r\n          autocalculate(0);\r\n        });\r\n      });\r\n      var timeInMss3 = new Date().getTime();\r\n      var time1 = new Date();\r\n      console.log('Autocalculation total time' + timeInMss3 - timeInMss2);\r\n  success([{ autocalculation: 'true', time: time1 }],200);    \r\n    }\r\n  ",
    "sys__createdOn" : ISODate("2019-06-03T13:38:13.102Z"),
    "sys__UUID" : "13bae328-e147-476b-b55b-d71453a83856",
    "sys__createdBy" : "admin@ekaplus.com"
}