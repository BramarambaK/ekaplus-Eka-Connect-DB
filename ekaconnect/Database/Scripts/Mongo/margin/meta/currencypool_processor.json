{
    "_id" : "currencypool_processor",
    "name" : "currencypool",
    "type" : "processor",
    "refType" : "app",
    "version" : "V2",
    "refTypeId" : "40a27e7f-3f50-406f-a872-2ee7d9436df9",
    "snippet" : " \r\n    var moment = require('moment');\r\n\r\n    var connectUrl = req.body.propertyList.eka_connect_host + '/workflow/data';\r\n\r\n    var connectBody = {\r\n      appId: req.body.appId,\r\n\r\n      workFlowTask: 'listingcurrencypool_COPY'\r\n    };\r\n\r\n    if (req.body.filterData && req.body.filterData.filter) {\r\n      connectBody.filterData = req.body.filterData;\r\n    }\r\n\r\n    var connect = {\r\n      method: 'POST',\r\n\r\n      body: connectBody,\r\n\r\n      url: connectUrl,\r\n\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n\r\n      json: true\r\n    };\r\n\r\n    function get_connect() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(connect, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    function getFirstLetterCaps(string) {\r\n      string = string[0].toUpperCase() + string.slice(1);\r\n\r\n      return string;\r\n    }\r\n\r\n    get_connect().then(function(result) {\r\n      let connect = result.data;\r\n\r\n      var final = [];\r\n\r\n      for (var i = 0; i < connect.length; i++) {\r\n        var currency = connect[i];\r\n\r\n        var versiondate;\r\n        if (currency.corporate) {\r\n          if (currency['sys__version'] <= 1) {\r\n            versiondate = currency['sys__createdOn'];\r\n\r\n            versiondate = parseInt(versiondate);\r\n\r\n            versiondate = moment(versiondate).format('DD-MM-YYYY');\r\n          } else {\r\n            versiondate = currency['sys__updatedOn'];\r\n\r\n            versiondate = parseInt(versiondate);\r\n\r\n            versiondate = moment(versiondate).format('DD-MM-YYYY');\r\n          }\r\n\r\n          var currency2 = {\r\n            Date: versiondate || '',\r\n\r\n            Corporate: currency.corporate || '',\r\n\r\n            'Legal Entity': currency.legalentity || '',\r\n\r\n            'Profit Center': currency.profitcentername || '',\r\n\r\n            'Allocation Group': currency.allocationgroup || '',\r\n\r\n            'Sale Contract Item Ref. No.': currency.salesContractItemRefNo || '',\r\n\r\n            'Margin Type': getFirstLetterCaps(currency.margin) || '',\r\n\r\n            'Version No': 'V' + currency.sys__version || '',\r\n\r\n            'Cost Currency': currency.costcurrency || '',\r\n\r\n            'Debit Total': currency.debittotal.toFixed(2) || '',\r\n\r\n            'Credit Total': currency.credittotal.toFixed(2) || '',\r\n\r\n            'Cost Currency Total': currency.currentcostcurrency.toFixed(2) || '',\r\n\r\n            'Previous Cost Currency Total': currency.previouscostcurrency.toFixed(2) || '',\r\n\r\n            'Cost Currency Change': currency.costcurrencychange.toFixed(2) || '',\r\n\r\n            'FX Rate': parseFloat(currency.fxrate).toFixed(6) || '',\r\n\r\n            'Current Margin Currency total': currency.margincurrencyamount.toFixed(2) || '',\r\n\r\n            'Previous Margin Currency total': currency.previousmargincurrencytotal.toFixed(2) || '',\r\n\r\n            'Margin Currency Amount': currency.currentmargincurrencytotal.toFixed(2) || '',\r\n\r\n            Remarks: currency.remarks || ''\r\n          };\r\n\r\n          final.push(currency2);\r\n        }\r\n      }\r\n\r\n  success(final,200);    \r\n    });\r\n",
    "sys__createdOn" : ISODate("2019-06-03T13:38:13.102Z"),
    "sys__UUID" : "54ce313a-ef11-49dd-8a18-033f4001121e",
    "sys__createdBy" : "admin@ekaplus.com"
}