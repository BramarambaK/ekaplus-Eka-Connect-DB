{
    "_id" : "versioningbudgetactualdata_processor",
    "name" : "versioningbudgetactualdata",
    "type" : "processor",
    "refType" : "app",
    "version" : "V2",
    "refTypeId" : "40a27e7f-3f50-406f-a872-2ee7d9436df9",
    "snippet" : "   var moment = require('moment');\r\n    var URL = req.body.propertyList.eka_connect_host + '/workflow/' + req.body.appId + '/data/versions';\r\n\r\n    var versionbody = {\r\n      objects: ['a094c021-4870-4b9c-940e-3858e2405e9e', '3ef370f9-febe-41a0-8e43-4ef6ce769b3b']\r\n    };\r\n\r\n    var versioningData = {\r\n      method: 'POST',\r\n      url: URL,\r\n      body: versionbody,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    var get_versions = function get_versions() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(versioningData, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    };\r\n    function getFirstLetterCaps(string) {\r\n      string = string[0].toUpperCase() + string.slice(1);\r\n      return string;\r\n    }\r\n    Promise.all([get_versions()]).then(function(result) {\r\n      var data = result[0];\r\n      var final = [];\r\n      for (var i = 0; i < data.length; i++) {\r\n        if (data[i]['objectUUID'] === 'a094c021-4870-4b9c-940e-3858e2405e9e') {\r\n          for (var j = 0; j < data[i]['versions'].length; j++) {\r\n            var actual = data[i]['versions'][j];\r\n            if (actual && actual['actualmargindata']) {\r\n              var versiondate;\r\n              if (actual['sys__version'] <= 1) {\r\n                versiondate = actual['sys__createdOn'];\r\n                versiondate = moment(versiondate).format('DD-MM-YYYY');\r\n              } else {\r\n                versiondate = actual['sys__updatedOn'];\r\n                versiondate = moment(versiondate).format('DD-MM-YYYY');\r\n              }\r\n              var trademarginbefore = actual['actualmargindata']['tradeMargin']['trademargin'];\r\n              var trademarginafter = [];\r\n              if (\r\n                actual &&\r\n                actual['actualmargindata'] &&\r\n                actual['actualmargindata']['shares'] &&\r\n                actual['actualmargindata']['shares']['trademarginaftershare']\r\n              ) {\r\n                if (!(actual['actualmargindata']['shares']['trademarginaftershare'] instanceof Object)) {\r\n                  trademarginafter = actual['actualmargindata']['shares']['trademarginaftershare'];\r\n                  trademarginafter = trademarginafter.split('|');\r\n                }\r\n              }\r\n              let actual_purchase_cp_name;\r\n              let actual_sale_cp_name;\r\n              if (actual && actual['actualmargindata'] && actual['actualmargindata']['listingactualmargin']) {\r\n                for (let i = 0; i < actual['actualmargindata']['listingactualmargin'].length; i++) {\r\n                  if (\r\n                    actual['actualmargindata'] &&\r\n                    actual['actualmargindata']['listingactualmargin'] &&\r\n                    actual['actualmargindata']['listingactualmargin'][i] &&\r\n                    actual['actualmargindata']['listingactualmargin'][i]['COST COMPONENT NAME'] ==\r\n                      'Purchase Material Cost'\r\n                  )\r\n                    actual_purchase_cp_name = actual['actualmargindata']['listingactualmargin'][i]['CP NAME'];\r\n                  if (\r\n                    actual['actualmargindata'] &&\r\n                    actual['actualmargindata']['listingactualmargin'] &&\r\n                    actual['actualmargindata']['listingactualmargin'][i] &&\r\n                    actual['actualmargindata']['listingactualmargin'][i]['COST COMPONENT NAME'] == 'Sales Material Cost'\r\n                  )\r\n                    actual_sale_cp_name = actual['actualmargindata']['listingactualmargin'][i]['CP NAME'];\r\n                }\r\n              }\r\n              let actual_margin_type;\r\n              if (actual && actual['margin']) {\r\n                actual_margin_type = getFirstLetterCaps(actual['margin']);\r\n              }\r\n              trademarginbefore = trademarginbefore.split('|');\r\n              var actual2 = {\r\n                'Allocation Group': actual['ALLOCATION GROUP NO'] || '',\r\n                'Sale Contract Item Ref. No.': actual['actualmargindata']['viewmargin']['salesContractItemRefNo'] || '',\r\n                'Version No': 'V' + actual['sys__version'] || '',\r\n                'Margin Type': actual_margin_type || '',\r\n                'Version Date': versiondate || '',\r\n                'Sale contract Issue date': actual['shipmentFromDate'] || '',\r\n                'Allocation Group date': actual['ALLOCATION_DATE'] || '',\r\n                'Title transfer date': actual['actualmargindata']['viewmargin']['titleTransferDate'] || '',\r\n                'Margin currency': actual['actualmargindata']['viewmargin']['contractValueUOM' || ''],\r\n                'Final customer': actual['actualmargindata']['viewmargin']['finalCustomer'] || '',\r\n                'File status': actual['status'] || '',\r\n                'Legal entity': actual['LEGAL ENTITY'] || '',\r\n                'Allocation group Status': actual['EXECUTION_STATUS'] || '',\r\n                Product: actual['actualmargindata']['viewmargin']['product'] || '',\r\n                Corporate: actual['CORPORATE_NAME'] || '',\r\n                'Profit Centre': actual['PROFIT CENTER NAME'] || '',\r\n                UOM: actual['actualmargindata']['viewmargin']['contractValueUOM'] || '',\r\n                'Sales CP name': actual_sale_cp_name || '',\r\n                'Purchase CP name': actual_purchase_cp_name || '',\r\n                Quality: actual['quality'] || '',\r\n                'Quantity allocated': actual['NET QTY'] || '',\r\n                'Quantity released': actual['quantityr'] || '',\r\n                'Person in charge from sales contract': actual['PERSON INCHARGE'] || '',\r\n                'Trader name (SC)': actual['actualmargindata']['viewmargin']['traderName'] || '',\r\n                'Margin in currency': '',\r\n                'Margin in EUR': trademarginbefore[0] || '',\r\n                'Trade Margin before Shares': trademarginbefore[0] || '',\r\n                'Trade Margin before shares in %': trademarginbefore[1] || '',\r\n                'Trade Margin after Shares': trademarginafter[0] || '',\r\n                'Trade Margin after Shares in %': trademarginafter[1] || '',\r\n                ROCE: actual['actualmargindata']['tradeMargin']['roce'] || ''\r\n              };\r\n              final.push(actual2);\r\n            }\r\n          }\r\n        } else if (data[i]['objectUUID'] === '3ef370f9-febe-41a0-8e43-4ef6ce769b3b') {\r\n          for (var j = 0; j < data[i]['versions'].length; j++) {\r\n            var budget = data[i]['versions'][j];\r\n            if (budget && budget['margindata']) {\r\n              var versiondate;\r\n              if (budget['sys__version'] <= 1) {\r\n                versiondate = budget['sys__createdOn'];\r\n                versiondate = moment(versiondate).format('DD-MM-YYYY');\r\n              } else {\r\n                versiondate = budget['sys__updatedOn'];\r\n                versiondate = moment(versiondate).format('DD-MM-YYYY');\r\n              }\r\n              var trademarginbefore = budget['margindata']['tradeMargin']['trademargin'];\r\n              var trademarginafter = [];\r\n              if (\r\n                budget &&\r\n                budget['margindata'] &&\r\n                budget['margindata']['shares'] &&\r\n                budget['margindata']['shares']['trademarginaftershare']\r\n              ) {\r\n                if (!(budget['margindata']['shares']['trademarginaftershare'] instanceof Object)) {\r\n                  trademarginafter = budget['margindata']['shares']['trademarginaftershare'];\r\n                  trademarginafter = trademarginafter.split('|');\r\n                }\r\n              }\r\n              let budget_purchase_cp_name;\r\n              let budget_sale_cp_name;\r\n              if (budget && budget['margindata'] && budget['margindata']['listingmargin'])\r\n                for (let i = 0; i < budget['margindata']['listingmargin'].length; i++) {\r\n                  if (\r\n                    budget['margindata'] &&\r\n                    budget['margindata']['listingmargin'] &&\r\n                    budget['margindata']['listingmargin'][i] &&\r\n                    budget['margindata']['listingmargin'][i]['COST COMPONENT NAME'] == 'Purchase Material Cost'\r\n                  )\r\n                    budget_purchase_cp_name = budget['margindata']['listingmargin'][i]['CP NAME'];\r\n                  if (\r\n                    budget['margindata'] &&\r\n                    budget['margindata']['listingmargin'] &&\r\n                    budget['margindata']['listingmargin'][i] &&\r\n                    budget['margindata']['listingmargin'][i]['COST COMPONENT NAME'] == 'Sales Material Cost'\r\n                  )\r\n                    budget_sale_cp_name = budget['margindata']['listingmargin'][i]['CP NAME'];\r\n                }\r\n              trademarginbefore = trademarginbefore.split('|');\r\n              let budget_margin_type;\r\n              if (budget && budget['margin']) {\r\n                budget_margin_type = getFirstLetterCaps(budget['margin']);\r\n              }\r\n              var budget2 = {\r\n                'Allocation Group': budget['ALLOCATION GROUP NO'] || '',\r\n                'Sale Contract Item Ref. No.': budget['margindata']['viewmargin']['salesContractItemRefNo'] || '',\r\n                'Version No': 'V' + budget['sys__version'] || '',\r\n                'Margin Type': budget_margin_type || '',\r\n                'Version Date': versiondate || '',\r\n                'Sale contract Issue date': budget['shipmentFromDate'] || '',\r\n                'Allocation Group date': budget['ALLOCATION_DATE'] || '',\r\n                'Title transfer date': budget['margindata']['viewmargin']['titleTransferDate'] || '',\r\n                'Margin currency': budget['margindata']['viewmargin']['contractValueUOM' || ''],\r\n                'Final customer': budget['margindata']['viewmargin']['finalCustomer'] || '',\r\n                'File status': budget['status'] || '',\r\n                'Legal entity': budget['LEGAL ENTITY'] || '',\r\n                'Allocation group Status': budget['EXECUTION_STATUS'] || '',\r\n                Product: budget['margindata']['viewmargin']['product'] || '',\r\n                Corporate: budget['CORPORATE_NAME'] || '',\r\n                'Profit Centre': budget['PROFIT CENTER NAME'] || '',\r\n                UOM: budget['margindata']['viewmargin']['contractValueUOM'] || '',\r\n                'Sales CP name': budget_sale_cp_name || '',\r\n                'Purchase CP name': budget_purchase_cp_name || '',\r\n                Quality: budget['quality'] || '',\r\n                'Quantity allocated': budget['NET QTY'] || '',\r\n                'Quantity released': budget['quantityr'] || '',\r\n                'Person in charge from sales contract': budget['PERSON INCHARGE'] || '',\r\n                'Trader name (SC)': budget['margindata']['viewmargin']['traderName'] || '',\r\n                'Margin in currency': '',\r\n                'Margin in EUR': trademarginbefore[0] || '',\r\n                'Trade Margin before Shares': trademarginbefore[0] || '',\r\n                'Trade Margin before shares in %': trademarginbefore[1] || '',\r\n                'Trade Margin after Shares': trademarginafter[0] || '',\r\n                'Trade Margin after Shares in %': trademarginafter[1] || '',\r\n                ROCE: budget['margindata']['tradeMargin']['roce'] || ''\r\n              };\r\n              final.push(budget2);\r\n            }\r\n          }\r\n          //budget\r\n        }\r\n      }\r\n   success(final,200);   \r\n    });",
    "sys__createdOn" : ISODate("2019-06-03T13:38:13.102Z"),
    "sys__UUID" : "4cc62d85-7459-4650-b220-3591444cfd88",
    "sys__createdBy" : "admin@ekaplus.com"
}