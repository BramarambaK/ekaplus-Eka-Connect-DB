{
    "_id" : ObjectId("5d89e1a04392954a9a0f1f5d"),
    "name" : "collectionpoolactual_processor",
    "type" : "processor",
    "refType" : "app",
    "version" : "V2",
    "refTypeId" : "40a27e7f-3f50-406f-a872-2ee7d9436df9",
    "snippet" : "  \r\n    var connectData = {\r\n      method: 'GET',\r\n      url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/data/40a27e7f-3f50-406f-a872-2ee7d9436df9/a094c021-4870-4b9c-940e-3858e2405e9e',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        json: true\r\n      }\r\n    };\r\n    function get_connectData() {\r\n      return new Promise(function(resolve, reject) {\r\n        // console.log('Request - ' + connectData.url);\r\n        //console.log('Payload -' + JSON.stringify(connectData));\r\n        request(connectData, function(err, response, body) {\r\n          //  console.log('Response - ' + body);\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var budgetsaveddata = [];\r\n    var budgetfiltered = [];\r\n    get_connectData().then(result => {\r\n      budgetsaveddata.push(result);\r\n      budgetsaveddata = JSON.parse(budgetsaveddata[0]);\r\n      var budgetmargin = req.body.compositeViewactualmargin;\r\n\r\n      for (var i = 0; i < budgetsaveddata.length; i++) {\r\n        if (\r\n          budgetsaveddata[i]['INT ALLOC GROUP ID'] == req.body.actuallisting['INT ALLOC GROUP ID'] &&\r\n          budgetsaveddata[i]['CONTRACT ITEM NO'] == req.body.actuallisting['CONTRACT ITEM NO'] &&\r\n          budgetsaveddata[i]['PRODUCT SPECS'] == req.body.actuallisting['PRODUCT SPECS']\r\n        ) {\r\n          budgetfiltered = budgetsaveddata[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      var response = [];\r\n      var debittotal = 0;\r\n      var credittotal = 0;\r\n      var switchdebit = 0;\r\n      var currentcostcurrency = 0;\r\n      var previouscostcurrency = 0;\r\n      var prevdebit = 0;\r\n      var prevcredit = 0;\r\n      var costcurrencychange = 0;\r\n      var fxrate = 0;\r\n      var currentmargincurrencytotal = 0;\r\n      var previousmargincurrencytotal = 0;\r\n      var margincurrencyamount = 0;\r\n      var costcurrency;\r\n      costcurrencychange;\r\n\r\n      var budgetlistingdata = budgetmargin.listingactualmargin;\r\n      if (budgetmargin.rates && budgetmargin.rates.length != 0) {\r\n        for (var i = 0; i < budgetmargin.rates.length; i++) {\r\n          for (var j = 0; j < budgetlistingdata.length; j++) {\r\n            var from = budgetmargin.rates[i].fxpair.split('-')[0];\r\n            var to = budgetmargin.rates[i].fxpair.split('-')[1];\r\n            if (budgetlistingdata[j]['COST GROUP NAME'] == 'Expense Total') {\r\n              switchdebit = 1;\r\n            }\r\n            if (\r\n              budgetlistingdata[j]['COST GROUP NAME'] != 'Expense Total' &&\r\n              budgetlistingdata[j]['COST GROUP NAME'] != 'Income Total'\r\n            ) {\r\n              if (\r\n                from == budgetlistingdata[j].costUom.split('/')[0] &&\r\n                to == budgetmargin.viewmargin.contractValueUOM &&\r\n                budgetlistingdata[j]['COST CLASS'] == 'Accrual'\r\n              ) {\r\n                if (\r\n                  switchdebit == 0 &&\r\n                  (budgetlistingdata[j]['COST GROUP NAME'] != 'Expense Total' &&\r\n                    budgetlistingdata[j]['COST GROUP NAME'] != 'Income Total')\r\n                ) {\r\n                  debittotal = debittotal + budgetlistingdata[j].totalAmount;\r\n                  if (budgetfiltered.sys__version == 1) {\r\n                    prevdebit = prevdebit + 0;\r\n                  } else {\r\n                    prevdebit = prevdebit + budgetfiltered.actualmargindata.listingactualmargin[j].totalAmount;\r\n                  }\r\n                } else if (\r\n                  switchdebit == 1 &&\r\n                  (budgetlistingdata[j]['COST GROUP NAME'] != 'Expense Total' &&\r\n                    budgetlistingdata[j]['COST GROUP NAME'] != 'Income Total')\r\n                ) {\r\n                  credittotal = credittotal + budgetlistingdata[j].totalAmount;\r\n                  if (budgetfiltered.sys__version == 1) {\r\n                    prevcredit = prevcredit + 0;\r\n                  } else {\r\n                    prevcredit = prevcredit + budgetfiltered.actualmargindata.listingactualmargin[j].totalAmount;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          if (\r\n            budgetfiltered &&\r\n            budgetfiltered.actualmargindata &&\r\n            budgetfiltered.actualmargindata.remark &&\r\n            budgetfiltered.actualmargindata.remark['remark']\r\n          ) {\r\n            var remark = budgetfiltered.actualmargindata.remark['remark'];\r\n          }\r\n\r\n          currentcostcurrency = debittotal + credittotal;\r\n          previouscostcurrency = prevdebit + prevcredit;\r\n          costcurrencychange = currentcostcurrency - previouscostcurrency;\r\n          fxrate = budgetmargin.rates[i].fxvalue;\r\n          currentmargincurrencytotal = currentcostcurrency * fxrate;\r\n          previousmargincurrencytotal = previouscostcurrency * fxrate;\r\n          margincurrencyamount = currentmargincurrencytotal - previousmargincurrencytotal;\r\n          response.push({\r\n            corporate: budgetfiltered['CORPORATE_NAME'],\r\n            profitcentername: budgetfiltered['PROFIT CENTER NAME'],\r\n            allocationgroup: budgetfiltered['ALLOCATION GROUP NO'],\r\n            salesContractItemRefNo: budgetfiltered['CONTRACT ITEM NO'],\r\n            margin: budgetfiltered['margin'],\r\n            remarks: remark,\r\n            legalentity: budgetfiltered['LEGAL ENTITY'],\r\n            debittotal: debittotal,\r\n            credittotal: credittotal,\r\n            currentcostcurrency: currentcostcurrency,\r\n            previouscostcurrency: previouscostcurrency,\r\n            costcurrencychange: costcurrencychange,\r\n            fxrate: fxrate,\r\n            currentmargincurrencytotal: currentmargincurrencytotal,\r\n            previousmargincurrencytotal: previousmargincurrencytotal,\r\n            margincurrencyamount: margincurrencyamount,\r\n            costcurrency: from\r\n          });\r\n          debittotal = 0;\r\n          credittotal = 0;\r\n          switchdebit = 0;\r\n          prevdebit = 0;\r\n          prevcredit = 0;\r\n          currentcostcurrency = 0;\r\n          fxrate = 0;\r\n          currentmargincurrencytotal = 0;\r\n          margincurrencyamount = 0;\r\n          previousmargincurrencytotal = 0;\r\n        }\r\n      } else {\r\n        response = [{ allocationgroup: budgetfiltered['ALLOCATION GROUP NO'] }];\r\n      }\r\n      success(response,200);\r\n    });\r\n   ",
    "sys__UUID" : "fed13b2a-594f-457f-84f3-222ed32fb879",
    "sys__createdOn" : ISODate("2019-05-20T09:29:21.300Z"),
    "sys__createdBy" : "Bravo"
}