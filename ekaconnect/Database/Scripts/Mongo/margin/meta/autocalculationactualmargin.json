{
  "_id": "autoCalculationactualmargin",
  "name": "autoCalculationactualmargin",
  "type": "processor",
  "refType": "app",
  "refTypeId": "40a27e7f-3f50-406f-a872-2ee7d9436df9",
  "snippet": "\r\n    if (req.body.propertyList.autocalculationflag == false) {\r\n  success([{ autocalculation: 'false' }],200);   \r\n    } else {\r\n      var connectDataBudgetmargin = {\r\n        method: 'POST',\r\n        url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow/data',\r\n        headers: {\r\n          Authorization: req.headers.authorization,\r\n          'X-TenantID': req.headers['x-tenantid'],\r\n          json: true,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: {\r\n          appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n          workFlowTask: 'listing'\r\n        },\r\n        json: true\r\n      };\r\n\r\n      function get_connectDataBudgetmargin() {\r\n        return new Promise(function(resolve, reject) {\r\n          // //console.log('Request - ' + connectData.url);\r\n          // //console.log('Payload -' + JSON.stringify(connectData));\r\n          request(connectDataBudgetmargin, function(err, response, body) {\r\n            // if (body.message === '403 Forbidden') reject(body);\r\n            //  //console.log('Response - ' + body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n              resolve(body);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      var compositeView = function(index) {\r\n        return {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow/data',\r\n          headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid'],\r\n            json: true,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: {\r\n            appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n            payLoadData: result[index],\r\n            workFlowTask: 'compositeView'\r\n          },\r\n          json: true\r\n        };\r\n      };\r\n      var connectData = {\r\n        method: 'POST',\r\n        url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow/data',\r\n        headers: {\r\n          Authorization: req.headers.authorization,\r\n          'X-TenantID': req.headers['x-tenantid'],\r\n          json: true,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: {\r\n          appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n          workFlowTask: 'actuallisting'\r\n        },\r\n        json: true\r\n      };\r\n\r\n      function get_connectData() {\r\n        return new Promise(function(resolve, reject) {\r\n          // //console.log('Request - ' + connectData.url);\r\n          // //console.log('Payload -' + JSON.stringify(connectData));\r\n          request(connectData, function(err, response, body) {\r\n            //  //console.log('Response - ' + body);\r\n            // if (body.message === '403 Forbidden') reject(body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n              resolve(body);\r\n            }\r\n          });\r\n        });\r\n      }\r\n      var compositeView = function(index) {\r\n        return {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow/data',\r\n          headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid'],\r\n            json: true,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: {\r\n            appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n            payLoadData: result[index],\r\n            workFlowTask: 'compositeViewactualmargin'\r\n          },\r\n          json: true\r\n        };\r\n      };\r\n      function get_compositeView(index) {\r\n        return new Promise(function(resolve, reject) {\r\n          //console.log('Request - ' + compositeView.url);\r\n          //console.log('Payload -' + JSON.stringify(connectData));\r\n          request(compositeView(index), function(err, response, body) {\r\n            //console.log('Response - ' + body);\r\n\r\n            resolve({ body: body, index: index });\r\n          });\r\n        });\r\n      }\r\n      var calculate = function(index) {\r\n        return {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow',\r\n          headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid'],\r\n            json: true,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: {\r\n            appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n\r\n            workflowTaskName: 'compositeViewactualmargin',\r\n            task: 'calculatecompositeView',\r\n            output: {\r\n              compositeViewactualmargin: {\r\n                compositeViewactualmargin: compositeresult,\r\n                actuallisting: result[index]\r\n              }\r\n            }\r\n          },\r\n          json: true\r\n        };\r\n      };\r\n      function get_calculate(index) {\r\n        return new Promise(function(resolve, reject) {\r\n          //console.log('Request - ' + calculate.url);\r\n          //console.log('Payload -' + JSON.stringify(connectData));\r\n          // console.log(calculate(index));\r\n          request(calculate(index), function(err, response, body) {\r\n            // if (body.message === '403 Forbidden') reject(body);\r\n            //console.log('Response - ' + body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n              resolve({ body: body, index: index });\r\n            }\r\n          });\r\n        });\r\n      }\r\n      var save = function(index) {\r\n        return {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow',\r\n          headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid'],\r\n            json: true,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: {\r\n            appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n            id: '',\r\n            workflowTaskName: 'compositeViewactualmargin',\r\n            task: 'compositeView',\r\n            output: {\r\n              compositeViewactualmargin: {\r\n                compositeViewactualmargin: calculatedresult,\r\n                actuallisting: result[index]\r\n              }\r\n            }\r\n          },\r\n          json: true\r\n        };\r\n      };\r\n      function get_save(index) {\r\n        return new Promise(function(resolve, reject) {\r\n          //console.log('Request - ' + compositeView.url);\r\n          //console.log('Payload -' + JSON.stringify(connectData));\r\n          request(save(index), function(err, response, body) {\r\n            //if (body.message === '403 Forbidden') reject(body);\r\n            //console.log('Response - ' + body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n              resolve({ body: body, index: index });\r\n            }\r\n          });\r\n        });\r\n      }\r\n      var failed = function(index) {\r\n        return {\r\n          method: 'POST',\r\n          url: req.body.propertyList.eka_connect_ui_host + '/connect/api/workflow',\r\n          headers: {\r\n            Authorization: req.headers.authorization,\r\n            'X-TenantID': req.headers['x-tenantid'],\r\n            json: true,\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: {\r\n            appId: '40a27e7f-3f50-406f-a872-2ee7d9436df9',\r\n            id: '',\r\n            workflowTaskName: 'failedactualmarginobject',\r\n            task: 'failedactualmarginobject',\r\n            output: {\r\n              failedactualmarginobject: result[index]\r\n            }\r\n          },\r\n          json: true\r\n        };\r\n      };\r\n      function get_failed(index) {\r\n        return new Promise(function(resolve, reject) {\r\n          //console.log('Request - ' + compositeView.url);\r\n          //console.log('Payload -' + JSON.stringify(connectData));\r\n          request(failed(index), function(err, response, body) {\r\n            // if (body.message === '403 Forbidden') reject(body);\r\n            //console.log('Response - ' + body);\r\n            if (err || body.error) reject(body);\r\n            else {\r\n              resolve({ body: body, index: index });\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      var successRecords = 0;\r\n      var result = [];\r\n      var resultbudget = [];\r\n      var compositeresult = [];\r\n      var calculatedresult = [];\r\n      var saved = [];\r\n\r\n      get_connectData()\r\n        .then(data => {\r\n          result = data.data;\r\n          get_connectDataBudgetmargin()\r\n            .then(databudget => {\r\n              resultbudget = databudget.data;\r\n\r\n              function autocalculate(i) {\r\n                if (i >= result.length) {\r\n                  return;\r\n                }\r\n                if (resultbudget[i].margindata) {\r\n                  if (resultbudget[i].status != 'Closed') {\r\n                    get_compositeView(i)\r\n                      .then(data1 => {\r\n                        compositeresult = data1.body.data;\r\n                        if (data1.body.error || data1.body.errorMessage || data1.body.status == 'UNAUTHORIZED') {\r\n                          //  console.log('Collections giving error');\r\n                          if (data1.body.status == 'UNAUTHORIZED') {\r\n                            result[data1.index].statusremark = 'Token expired';\r\n                          } else {\r\n                            result[data1.index].statusremark = data1.body.message\r\n                              ? data1.body.message\r\n                              : data1.body.errorMessage;\r\n                          }\r\n\r\n                          get_failed(data1.index)\r\n                            .then(fail => {\r\n                              // console.log(\"AM failed\");\r\n                              i++;\r\n                              return autocalculate(i);\r\n                            })\r\n                            .catch(err => {\r\n                              console.log(err);\r\n                              i++;\r\n                              return autocalculate(i);\r\n                            });\r\n                        }\r\n                        //console.log('-----------------------------------' + compositeresult);\r\n                        else if (compositeresult || compositeresult.listingmargin) {\r\n                          get_calculate(data1.index)\r\n                            .then(data2 => {\r\n                              calculatedresult = data2.body.data;\r\n                              //  console.log('Calculated--------------------------' + calculatedresult);\r\n\r\n                              get_save(data2.index)\r\n                                .then(data3 => {\r\n                                  //   console.log('Savedd----------------------' + data3.body.message);\r\n                                  successRecords++;\r\n                                  i++;\r\n                                  return autocalculate(i);\r\n                                })\r\n                                .catch(err => {\r\n                                  console.log('Save error' + err);\r\n                                  i++;\r\n                                  return autocalculate(i);\r\n                                });\r\n                            })\r\n                            .catch(err => {\r\n                              console.log('calculate error' + err);\r\n                            });\r\n                        } else {\r\n                          result[data1.index].statusremark = 'Something went wrong';\r\n\r\n                          get_failed(data1.index)\r\n                            .then(fail => {\r\n                              // console.log(\"AM failed\");\r\n                              i++;\r\n                              return autocalculate(i);\r\n                            })\r\n                            .catch(err => {\r\n                              console.log(err);\r\n                              i++;\r\n                              return autocalculate(i);\r\n                            });\r\n                        }\r\n                      })\r\n                      .catch(err => {\r\n                        console.log('Composite error' + err);\r\n                        i++;\r\n                        return autocalculate(i);\r\n                      });\r\n                  } else {\r\n                    i++;\r\n                    return autocalculate(i);\r\n                  }\r\n                } else {\r\n                  i++;\r\n                  return autocalculate(i);\r\n                }\r\n              }\r\n              autocalculate(0);\r\n            })\r\n\r\n            .catch(err => {\r\n              console.log('connect budget data error' + err);\r\n            });\r\n        })\r\n        .catch(err => {\r\n          console.log('connect actual data error' + err);\r\n        });\r\n\r\n      var time1 = new Date();\r\n   success([{ autocalculation: 'true', time: time1 }],200);   \r\n    }\r\n ",
  "sys__createdOn": ISODate("2019-06-03T13:38:13.102Z"),
  "sys__UUID": "0085b657-041c-4ee1-b79f-8d6f9eb44df3",
  "sys__createdBy": "admin@ekaplus.com"
}
