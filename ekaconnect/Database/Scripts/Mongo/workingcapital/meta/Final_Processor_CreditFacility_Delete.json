{
    "_id" : "Final_Processor_for_credit_facility_delete",
    "name" : "Final_Processor_for_delete",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "e5b9fc05-22a9-4755-9cbc-c8598ab61ec2",
    "snippet" : "var moment = require(\"moment\");\r\nvar creditFacilityId = req.body.creditFacilityId;\r\nvar ekaCreditFacility =\r\n    req.body.propertyList.platform_url +\r\n    \"/spring/workingCapitalManagement/creditFacility/\" + creditFacilityId;\r\n  var ekaCreditFacilityUrl = {\r\n    method: \"DELETE\",\r\n    url: ekaCreditFacility,\r\n    headers: {\r\n      Authorization: req.headers.authorization,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    json: true,\r\n  };\r\n  var get_platformLiquidityplan = function get_platformLiquidityplan() {\r\n    return new Promise(function (resolve, reject) {\r\n      request(ekaCreditFacilityUrl, function (err, response, body) {\r\n        if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n          resolve(body);\r\n        } else {\r\n          reject(body);\r\n        }\r\n      });\r\n    });\r\n  };\r\n  get_platformLiquidityplan()\r\n    .then(function (ent) {\r\n      res.status(200).send({ msg: \"Deleted Successfully\" });\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n      if(!creditFacilityId){\r\n        res.status(400).send({ msg: \"Please select a credit facility to delete\" });\r\n      } else{\r\n        res.status(500).send({ msg: \"Failed to create\" });\r\n      }\r\n     \r\n    });\r\n\r\n",
    "sys__UUID" : "a23606b4-c8c0-43e7-aea9-4c9829fa253a",
    "sys__createdBy" : "Mukesh"
}