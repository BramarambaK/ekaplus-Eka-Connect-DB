{
    "_id" : "Initial_Processor_of_WorkingCapital_for_credit_facililty",
    "name" : "Initial_Processor_of_WorkingCapital_for_credit_facililty",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "e5b9fc05-22a9-4755-9cbc-c8598ab61ec2",
    "snippet" : "var moment = require('moment');\r\nlet selected = req.body.hasOwnProperty('selectedData') ? req.body.selectedData : {};\r\nvar ekaEntity = req.body.propertyList.platform_url + '/spring/workingCapitalManagement/creditFacility';\r\n\r\nvar listingCreditFacilityData = {\r\n  method: 'GET',\r\n  url: ekaEntity,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    'Content-Type': 'application/json',\r\n    'X-TenantID': req.headers['x-tenantid']\r\n  },\r\n  json: true\r\n};\r\nfunction setTranches(tranchesData){\r\n    let tranches = [];\r\n     if(tranchesData && tranchesData.tranches && tranchesData.tranches.length > 0) {\r\n        for(let i =0; i < tranchesData.tranches.length; i++) {\r\n            let tranche = {...tranchesData.tranches[i]};\r\n                tranche.trancheAmount = tranche.trancheAmount ? tranche.trancheAmount: '';\r\n            if(tranchesData.tranches[i].syndicate){\r\n              delete tranche.syndicate;\r\n            }\r\n            tranches.push(tranche)\r\n        }\r\n     }\r\n       return tranches;\r\n\r\n    }\r\n\r\nfunction setSyndicates(tranchesData) {\r\n  let syndicates = [];\r\n  if(tranchesData && tranchesData.tranches && tranchesData.tranches.length > 0) {\r\n    for(let i =0; i < tranchesData.tranches.length; i++) {\r\n        if(tranchesData.tranches[i].syndicate){\r\n            syndicates[i] = {...tranchesData.tranches[i].syndicate};\r\n        }\r\n       }\r\n }\r\n\r\n return syndicates;\r\n}\r\nfunction setFeesData(fees){\r\n    for(let i =0; i < fees.length; i++ ){\r\n        if(fees[i].frequency == 'One time') {\r\n          fees[i].paymentStartDate = fees[i].paymentStartDate ? moment(fees[i].paymentStartDate ).format('DD-MMM-YYYY'): null;\r\n          fees[i].paymentEndDate1 = ''; \r\n          fees[i].paymentEndDate = null;\r\n        }else {\r\n          fees[i].paymentStartDate = fees[i].paymentStartDate ? moment(fees[i].paymentStartDate ).format('DD-MMM-YYYY'): null;\r\n          fees[i].paymentEndDate1 = ''; \r\n          fees[i].paymentEndDate = fees[i].paymentEndDate ? moment(fees[i].paymentEndDate ).format('DD-MMM-YYYY'): null;;\r\n        }\r\n        if(fees[i].basis == 'Amount'){\r\n          fees[i].currencyAmount = fees[i].currency;\r\n          fees[i].currencyNotion = null;\r\n          delete fees[i].currency;\r\n          fees[i].amount = fees[i].amount ? fees[i].amount : '';\r\n        }else {\r\n          fees[i].currencyNotion = fees[i].currency;\r\n          fees[i].currencyAmount = null;\r\n          fees[i].amount =  fees[i].amount ? fees[i].amount : '';\r\n          delete fees[i].currency;\r\n         \r\n        }\r\n      }\r\n      return fees;\r\n}\r\nvar get_ListingCreditFacilityData = function get_ListingCreditFacilityData() {\r\n  return new Promise(function(resolve, reject) {\r\n    request(listingCreditFacilityData, function(err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nPromise.all([get_ListingCreditFacilityData()])\r\n  .then(results => {\r\n    let creditfacility = [];\r\n    for (let i = 0; i < results[0].length; i++) {\r\n      creditfacility[i] = results[0][i];\r\n      creditfacility[i]['creditFacilityId'] = creditfacility[i]['c3'];\r\n      creditfacility[i]['externalRefNo'] = creditfacility[i]['c4'];\r\n      creditfacility[i]['approvalDate'] = creditfacility[i]['c5'] === undefined ||\r\n        creditfacility[i]['c5'] === null ||\r\n          !moment(creditfacility[i]['c5']).isValid()\r\n          ? null\r\n          :moment(creditfacility[i]['c5']).format('DD-MMM-YYYY');\r\n      creditfacility[i]['legalEntity'] = creditfacility[i]['c6'];\r\n      creditfacility[i]['profitCenter'] = creditfacility[i]['c7'];\r\n      creditfacility[i]['effectiveDate'] = creditfacility[i]['c8'] === undefined ||\r\n        creditfacility[i]['c8'] === null ||\r\n          !moment(creditfacility[i]['c8']).isValid()\r\n          ? null\r\n          :moment(creditfacility[i]['c8']).format('DD-MMM-YYYY');\r\n      creditfacility[i]['maturityDate'] = creditfacility[i]['c9'] === undefined ||\r\n        creditfacility[i]['c9'] === null ||\r\n        !moment(creditfacility[i]['c9']).isValid()\r\n          ? null\r\n          :moment(creditfacility[i]['c9']).format('DD-MMM-YYYY');\r\n      creditfacility[i]['limitCurrency'] = creditfacility[i]['c10'];\r\n      creditfacility[i]['limitAmount'] = creditfacility[i]['c11'];\r\n      creditfacility[i]['bankName'] = creditfacility[i]['c12'];\r\n      creditfacility[i]['bankId'] = creditfacility[i]['c13'];\r\n      creditfacility[i]['bankAccount'] = creditfacility[i]['c14'];\r\n      creditfacility[i]['revolving'] = creditfacility[i]['c15'] === undefined ||\r\n        creditfacility[i]['c15'] === null || creditfacility[i]['c15'] === ''\r\n          ? ''\r\n          :creditfacility[i]['c15'] == 'true' ? 'Yes' : '';\r\n      creditfacility[i]['syndicated'] = creditfacility[i]['c16'] === undefined ||\r\n        creditfacility[i]['c16'] === null || creditfacility[i]['c16'] === ''\r\n          ? ''\r\n          :creditfacility[i]['c16'] == 'true' ? 'Yes' : '';\r\n      creditfacility[i]['remarks'] = creditfacility[i]['c17'] === undefined ||\r\n        creditfacility[i]['c17'] === null\r\n          ? '-'\r\n          :creditfacility[i]['c17'];\r\n      creditfacility[i]['createdDate'] = creditfacility[i]['c20'];\r\n      creditfacility[i]['updatedDate'] = creditfacility[i]['c21'];\r\n\t  creditfacility[i]['updatedBy'] = creditfacility[i]['c24'];\r\n      creditfacility[i]['user'] = creditfacility[i]['c22'];\r\n      if(creditfacility[i]['c18']){\r\n        creditfacility[i]['fees'] = creditfacility[i]['c18'] && creditfacility[i]['c18'].fees ? setFeesData(creditfacility[i]['c18'].fees) : [];\r\n        creditfacility[i]['tranches'] = setTranches(creditfacility[i]['c18']);\r\n        creditfacility[i]['syndicate'] = setSyndicates(creditfacility[i]['c18']);\r\n      }else{\r\n        creditfacility[i]['fees'] = [];\r\n        creditfacility[i]['tranches'] = [];\r\n       creditfacility[i]['syndicate'] = [];\r\n      }\r\n      creditfacility[i]['operations']= 'EDIT/DELETE';\r\n    }\r\n    res.status(200).send([...creditfacility]);\r\n  })\r\n  .catch(err => {\r\n    res.status(500).send(err);\r\n});",
    "sys__UUID" : "56256ab6-4efb-4ba5-bcf1-e375cfe4688b",
    "sys__createdBy" : "Jay"
}