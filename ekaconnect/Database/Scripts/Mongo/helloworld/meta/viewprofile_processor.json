{
  "_id": "viewprofile_processor_hello",
  "name": "viewprofile",
  "type": "processor",
  "refType": "app",
  "refTypeId": "29a2660b-78a2-498a-9b94-75cdacd5f471",
  "snippet": "var connect = {\r\n      method: 'GET',\r\n      url: req.body.propertyList.eka_connect_host + '/common/' + req.body.appId + '/User_Info/currentUserInfo',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n      },\r\n      json: true\r\n    };\r\n    var platform_data = {\r\n      method: 'GET',\r\n      url: req.body.propertyList.platform_url + '/spring/smartapp/currentUser',\r\n      headers: {\r\n        Authorization: req.headers.authorization\r\n      },\r\n      json: true\r\n    };\r\n    function get_collection() {\r\n      return new Promise(function(resolve, reject) {\r\n        console.log('Request - ' + connect.url);\r\n        request(connect, function(err, response, body) {\r\n          console.log('Response - ' + body);\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            console.log('Success');\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    function get_platform_data() {\r\n      return new Promise(function(resolve, reject) {\r\n        console.log('Request - ' + platform_data.url);\r\n        request(platform_data, function(err, response, body) {\r\n          console.log('Response - ' + body);\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            console.log('Success');\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    Promise.all([get_collection(), get_platform_data()])\r\n      .then(function(result) {\r\n        let collection = result[0];\r\n        let platform_data = result[1];\r\n        if (collection.length > 0) {\r\n          if (collection[0].username === platform_data.data.emailAddress) {\r\n            collection['username'] = platform_data.data.emailAddress;\r\n            collection['address'] = platform_data.data.address[0].street;\r\n            collection = JSON.parse(\r\n              JSON.stringify(collection)\r\n                .split('\"emailAddress\":')\r\n                .join('\"email\":')\r\n            );\r\n            collection = JSON.parse(\r\n              JSON.stringify(collection)\r\n                .split('\"mobileno\":')\r\n                .join('\"mobile\":')\r\n            );\r\n            collection = JSON.parse(\r\n              JSON.stringify(collection)\r\n                .split('\"phoneCountryCode\":')\r\n                .join('\"phCountryCode\":')\r\n            );\r\n            collection = JSON.parse(\r\n              JSON.stringify(collection)\r\n                .split('\"phoneno\":')\r\n                .join('\"phone\":')\r\n            );\r\n            collection.push({ ...collection[0], ...platform_data });\r\n          }\r\n        } else {\r\n          collection.push({ ...platform_data.data });\r\n          collection['username'] = platform_data.data.emailAddress;\r\n          collection['address'] = platform_data.data.address[0].street;\r\n          collection = JSON.parse(\r\n            JSON.stringify(collection)\r\n              .split('\"emailAddress\":')\r\n              .join('\"email\":')\r\n          );\r\n          collection = JSON.parse(\r\n            JSON.stringify(collection)\r\n              .split('\"mobileno\":')\r\n              .join('\"mobile\":')\r\n          );\r\n          collection = JSON.parse(\r\n            JSON.stringify(collection)\r\n              .split('\"phoneCountryCode\":')\r\n              .join('\"phCountryCode\":')\r\n          );\r\n          collection = JSON.parse(\r\n            JSON.stringify(collection)\r\n              .split('\"phoneno\":')\r\n              .join('\"phone\":')\r\n          );\r\n        }\r\n        console.log(collection[0]);\r\n        res.status(200).send(collection);\r\n      })\r\n      .catch(err => {\r\n        console.log('Error->' + err);\r\n        res.status(500).send(err);\r\n      });",
  "sys__UUID": "bccad1dc-bc97-401c-9811-2c3bb63b836f",
  "sys__createdOn": ISODate("2019-06-17T13:20:58.140Z"),
  "sys__createdBy": "ekauser@ekaplus.com"
}
