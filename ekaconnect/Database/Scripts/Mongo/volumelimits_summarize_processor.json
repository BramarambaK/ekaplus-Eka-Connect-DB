{
  "_id": "volumelimits_summarize_processor",
  "name": "volumelimits_summarize_processor",
  "type": "processor",
  "refType": "app",
  "refTypeId": "12325a98-a959-4939-9005-4158d136afcd",
  "snippet": "const sendError = (message, context) =>\r\nres.status(400).send({\r\n  errorCode: '004',\r\n  errorMessage: message,\r\n  errorContext: null,\r\n  errorLocalizedMessage: message,\r\n  errors: [\r\n    {\r\n      errorCode: '004',\r\n      errorMessage: message,\r\n      errorContext: context,\r\n      errorLocalizedMessage: message,\r\n      errors: null,\r\n    },\r\n  ],\r\n});\r\nif (!req.body.bpRefNo) {\r\n  return sendError('Please select an Account', '{enterlimits:bpRefNo}');\r\n}\r\nif (!req.body.season) {\r\n  return sendError('Please choose a harvest season', '{enterlimits:season}');\r\n}\r\nconst bpDetails = req.body.bpRefNo.split(' @#@ ');\r\nconst data = (req.body.tonnagelimits || []).reduce((ac1, cur1, ind1) => {\r\n  ac1.push(\r\n    ...(cur1.site && cur1.site.length > 0 ? cur1.site : [null]).reduce(\r\n      (ac2, cur2) => {\r\n        ac2.push(\r\n          ...(cur1.quality && cur1.quality.length > 0\r\n            ? cur1.quality\r\n            : [null]\r\n          ).map((quality) => ({\r\n            ...cur1,\r\n            quality,\r\n            site: cur2,\r\n            bpRefNo: bpDetails[0],\r\n            bpName: bpDetails[1],\r\n            bpExternalName: bpDetails[2],\r\n            bpExternalCode: bpDetails[3],\r\n            season: req.body.season,\r\n            oldDailylimit: (cur1.quality.length > 1 || cur1.site.length > 1) ? req.body.tonnagelimits[ind1].oldDailylimit : cur1.oldDailylimit,\r\n            dailypurchased: (cur1.quality.length > 1 || cur1.site.length > 1) ? req.body.tonnagelimits[ind1].dailypurchased : cur1.dailypurchased,\r\n            _groupNo: ind1,\r\n          }))\r\n        );\r\n        return ac2;\r\n      },\r\n      []\r\n    )\r\n  );\r\n  return ac1;\r\n}, []);\r\ndata.forEach((i) => {\r\n  if (\r\n    i.dailypurchased == '-' ||\r\n    i.dailypurchased == '0' ||\r\n    i.dailypurchased == ''\r\n  ) {\r\n    delete i.dailypurchased;\r\n  }\r\n  if (typeof i.dailyLimit == 'string') {\r\n    i.dailyLimit = parseInt(i.dailyLimit);\r\n  }\r\n  if (\r\n    i.oldDailylimit == '-' ||\r\n    i.oldDailylimit == '0' ||\r\n    i.oldDailylimit == ''\r\n  ) {\r\n    delete i.oldDailylimit;\r\n  }\r\n});\r\nres.status(200).send(data);",
  "sys__UUID": "f67d8c98-f93b-4456-a752-36761f4731e4"
}
