{
  "_id": "Create_Derivative_processor_OMS",
  "name": "_ST_PROCESSOR_CREATE_DERIVATIVE_ORDER",
  "type": "processor",
  "refType": "app",
  "refTypeId": "e621d081-85cb-4951-adea-49b88d7f4ab0",
  "snippet": "let data = { ...req.body };\r\n    var errorFlag = 0;\r\n    delete data.propertyList;\r\n    delete data.processorDetails;\r\n    delete data.processorId;\r\n    delete data.appId;\r\n    if (data.instrumentType === 'Option') {\r\n      if (data.strikePrice === '') {\r\n        errorFlag = 1;\r\n        res.status(500).send('Strike Price cannot be empty');\r\n      } else if (!Number(data.strikePrice)) {\r\n        errorFlag = 1;\r\n        res.status(500).send('Strike Price must be a Number');\r\n      }\r\n      if (data.optionType === '') {\r\n        errorFlag = 1;\r\n        res.status(500).send('Option Type cannot be empty');\r\n      }\r\n      if (data.instrument === 'NYBOT Cotton') {\r\n        errorFlag = 1;\r\n        res.status(500).send('NYBOT Cotton is not a valid instrument for Option');\r\n      }\r\n      if (data.orderType === 'Stop Limit') {\r\n        errorFlag = 1;\r\n        res.status(500).send('Stop Limit is not a valid order type for Option');\r\n      }\r\n    }\r\n    if (!Number.isInteger(Number(data.orderQuantity))) {\r\n      errorFlag = 1;\r\n      res.status(500).send('Order Quantity should be an Integer');\r\n    }\r\n    if (data.orderType === 'Stop Limit') {\r\n      if (data.limitPrice === '') {\r\n        errorFlag = 1;\r\n        res.status(500).send('Limit Price cannot be empty');\r\n      } else if (data.triggerPrice === '') {\r\n        errorFlag = 1;\r\n        res.status(500).send('Trigger Price cannot be empty');\r\n      } else {\r\n        if (!Number(data.limitPrice)) {\r\n          errorFlag = 1;\r\n          res.status(500).send('Limit Price must be a Number');\r\n        } else if (!Number(data.triggerPrice)) {\r\n          errorFlag = 1;\r\n          res.status(500).send('Trigger Price must be a Number');\r\n        } else {\r\n          if (parseFloat(data.limitPrice) > 0) {\r\n            if (parseInt(data.orderQuantity) > 0) {\r\n              if (data.tradeType === 'Buy') {\r\n                if (parseFloat(data.limitPrice) < parseFloat(data.triggerPrice)) {\r\n                  errorFlag = 1;\r\n                  res.status(500).send('For Buy orders, Limit Price must be greater than or equal to Trigger Price');\r\n                }\r\n              } else if (data.tradeType === 'Sell') {\r\n                if (parseFloat(data.limitPrice) > parseFloat(data.triggerPrice)) {\r\n                  errorFlag = 1;\r\n                  res.status(500).send('For Sell orders, Trigger Price must be greater than or equal to Limit Price');\r\n                }\r\n              }\r\n            } else {\r\n              errorFlag = 1;\r\n              res.status(500).send('Order Quantity must be greater than 0');\r\n            }\r\n          } else {\r\n            errorFlag = 1;\r\n            res.status(500).send('Limit Price must be greater than 0');\r\n          }\r\n        }\r\n      }\r\n    } else if (data.orderType === 'Limit') {\r\n      if (data.limitPrice === '') {\r\n        errorFlag = 1;\r\n        res.status(500).send('Limit Price cannot be empty');\r\n      } else {\r\n        if (!Number(data.limitPrice)) {\r\n          errorFlag = 1;\r\n          res.status(500).send('Limit Price must be a Number');\r\n        } else {\r\n          if (parseFloat(data.limitPrice) > 0) {\r\n            if (parseInt(data.orderQuantity) < 0 || parseInt(data.orderQuantity) === 0) {\r\n              errorFlag = 1;\r\n              res.status(500).send('Order Quantity must be greater than 0');\r\n            }\r\n          } else {\r\n            errorFlag = 1;\r\n            res.status(500).send('Limit Price must be greater than 0');\r\n          }\r\n        }\r\n      }\r\n    } else if (data.orderType === 'Market') {\r\n      if (parseInt(data.orderQuantity) < 0 || parseInt(data.orderQuantity) === 0) {\r\n        errorFlag = 1;\r\n        res.status(500).send('Order Quantity must be greater than 0');\r\n      }\r\n    }\r\n    if (data.operation && data.operation == 'Replace') {\r\n      if (parseInt(data.orderQuantity) <= parseInt(data.filledQuantity)) {\r\n        errorFlag = 1;\r\n        res.status(500).send('Order Quantity must be greater than filled quantity');\r\n      }\r\n    }\r\n    if (errorFlag === 0) res.status(200).send(data);",
  "sys__UUID": "c7d369a4-f19f-462f-b028-9ef6456ae890",
  "sys__createdOn": ISODate("2019-06-26T08:50:01.556Z"),
  "sys__createdBy": "Bravo"
}
