{
  "_id": "Final_Processor_for_exposure",
  "name": "Final_Processor_for_exposure",
  "type": "processor",
  "refType": "app",
  "refTypeId": "d88e9a79-c0cc-4c28-bb01-ee56ff33048e",
  "snippet": "var moment = require(\"moment\");\r\nfunction findbody(data) {\r\n  return [\r\n    {\r\n      entity: data.hasOwnProperty(\"entity\") ? data.entity : null,\r\n      bank: data.hasOwnProperty(\"bank\") ? data.bank : null,\r\n      bankAccount: data.hasOwnProperty(\"bankAccount\") ? data.bankAccount : null,\r\n      referencePlanName: data.hasOwnProperty(\"referencePlanName\")\r\n        ? data.referencePlanName\r\n        : null,\r\n      exposureDate: moment(data.exposureDate).format(\"YYYY-MM-DD\"),\r\n      currency: data.hasOwnProperty(\"currency\") ? data.currency : null,\r\n      amount: data.hasOwnProperty(\"amount\") ? data.amount : null,\r\n      classification: data.hasOwnProperty(\"classification\")\r\n        ? data.classification\r\n        : null,\r\n      externalRefNo: data.hasOwnProperty(\"externalRefNo\")\r\n        ? data.externalRefNo\r\n        : null,\r\n      direction: data.hasOwnProperty(\"direction\") ? data.direction : null,\r\n      strategy: data.hasOwnProperty(\"strategy\") ? data.strategy : null,\r\n      profitCenter: data.hasOwnProperty(\"profitCenter\")\r\n        ? data.profitCenter\r\n        : null,\r\n      remarks: data.hasOwnProperty(\"remarks\") ? data.remarks : null,\r\n      exposureType: \"type\",\r\n    },\r\n  ];\r\n}\r\nvar ekaexposure =\r\n  req.body.propertyList.platform_url + \"/spring/liquidityManagement/exposure\";\r\nvar ekaexposureurl = {\r\n  method: \"POST\",\r\n  url: ekaexposure,\r\n  body: findbody(req.body),\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  json: true,\r\n};\r\nvar get_platformExposure = function get_platformExposure() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(ekaexposureurl, function (err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject({ ...body, statusCode: response.statusCode });\r\n      }\r\n    });\r\n  });\r\n};\r\nget_platformExposure()\r\n  .then(function (ent) {\r\n    res.status(200).send({ msg: \"Exposure Created Successfully\" });\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n    let message = \"Failed to create\";\r\n    if (err.statusCode >= 400 && err.statusCode <= 499 && err.message) {\r\n      message = err.message;\r\n    } else if (\r\n      err.message.includes(\"Amount is required or should be greater than 0\")\r\n    )\r\n      message = \"Amount is required or should be greater than 0\";\r\n    res.status(err.statusCode).send(message);\r\n  });\r\n",
  "sys__UUID": "fc7af762-1ec4-431d-a455-a0590b0dd10c",
  "sys__createdBy": "avinash"
}
