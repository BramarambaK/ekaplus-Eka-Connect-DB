{
  "_id": "Processor_toGetPopupData",
  "name": "Processor_toGetPopupData",
  "type": "processor",
  "refType": "app",
  "refTypeId": "d88e9a79-c0cc-4c28-bb01-ee56ff33048e",
  "snippet": "var moment = require(\"moment\");\r\nvar selectedData = req.body.selectedData;\r\nvar planName =\r\n  selectedData.planactivitycreation.planactivity.planactivitycreation\r\n    .liquidityPlanName;\r\nvar reqBody =\r\n  selectedData.planactivitycreation.planactivity.planactivitycreation;\r\nvar path = selectedData.celldata[\"path\"].split(\".\");\r\nvar ekaEntity =\r\n  req.body.propertyList.platform_url +\r\n  `/spring/liquidityManagement/forecast?liquidityPlanId=${planName}&expenseGroup=${path[0]}&classification=${path[1]}`;\r\n\r\nvar platformEntityPopupData = {\r\n  method: \"GET\",\r\n  url: ekaEntity,\r\n  body: {\r\n    asOfDate: moment(selectedData.celldata.data[1][\"Start Date\"]).format(\r\n      \"YYYY-MM-DD\"\r\n    ),\r\n    toDate: moment(selectedData.celldata.data[2][\"End Date\"]).format(\r\n      \"YYYY-MM-DD\"\r\n    ),\r\n    entityIds: [reqBody.entity],\r\n  },\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"Content-Type\": \"application/json\",\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nvar get_platformEntityPopupData = function get_platformEntityPopupData() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(platformEntityPopupData, function (err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n};\r\nget_platformEntityPopupData().then(function (data) {\r\n  res.status(200).send(data);\r\n});\r\n",
  "sys__UUID": "710e3b08-990b-4daf-abaf-da10190fb44a"
}
