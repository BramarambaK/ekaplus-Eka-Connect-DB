{
  "_id": "Final_Processor_for_saveOverlayPanelData",
  "name": "Final_Processor_for_saveOverlayPanelData",
  "type": "processor",
  "refType": "app",
  "refTypeId": "d88e9a79-c0cc-4c28-bb01-ee56ff33048e",
  "snippet": "\r\n    var moment = require('moment');\r\n    function findbody(data) {\r\n      let arr = [];\r\n      data.map(item => {\r\n        let obj = {\r\n          operation: item.operation,\r\n          forecast: {\r\n            bankId: item.hasOwnProperty('c7') ? item.c7 : null,\r\n            forecastId: item.hasOwnProperty('c3') ? item.c3 : null,\r\n            transactionDate: moment(item.c19).format('YYYY-MM-DD'),\r\n            currency: item.hasOwnProperty('c15') ? item.c15 : null,\r\n            bankAccount: item.hasOwnProperty('c6') ? item.c6 : null,\r\n            amount: item.hasOwnProperty('c14') ? item.c14 : null,\r\n            direction: item.hasOwnProperty('c16') ? item.c16 : null,\r\n            classification: item.hasOwnProperty('c17') ? item.c17 : null,\r\n            entity: item.hasOwnProperty('c5') ? item.c5 : null,\r\n            liquidityPlanName: item.hasOwnProperty('c10') ? item.c10 : null,\r\n            remarks: item.hasOwnProperty('c23') ? item.c23 : null,\r\n            strategy: item.hasOwnProperty('c21') ? item.c21 : null,\r\n            profileCenter: item.hasOwnProperty('c20') ? item.c20 : null\r\n          }\r\n        };\r\n        arr.push(obj);\r\n      });\r\n      console.log(arr);\r\n      return arr;\r\n      console.log(data);\r\n    }\r\n    var planId = req.body.bulkPayLoadData[0].c9;\r\n    var ekaliquiditypopupsave =\r\n      req.body.propertyList.platform_url + `/spring/liquidityManagement/liquidityPlan/${planId}/planActivity`;\r\n    var ekaliquiditypopupsaveurl = {\r\n      method: 'POST',\r\n      url: ekaliquiditypopupsave,\r\n      body: findbody(req.body.bulkPayLoadData),\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      json: true\r\n    };\r\n    var get_platformLiquidityPopupSave = function get_platformLiquidityPopupSave() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(ekaliquiditypopupsaveurl, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          } else {\r\n            reject({ ...body, statusCode: response.statusCode });\r\n          }\r\n        });\r\n      });\r\n    };\r\n    get_platformLiquidityPopupSave()\r\n      .then(function(ent) {\r\n        var message = ent;\r\n        res.status(200).send({ message });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        let message = 'Failed to update';\r\n        if (err.statusCode >= 400 && err.statusCode <= 499 && err.message) {\r\n          let errMessages =\r\n            err.message && err.message.substring(err.message.indexOf(':') + 1, err.message.length).trim();\r\n          errMessages = errMessages.split('\\n').filter(Boolean);\r\n          message = errMessages[0];\r\n          res.status(err.statusCode).send(message);\r\n        }\r\n        res.status(err.statusCode).send(message);\r\n      });\r\n  ",
  "sys__UUID": "7b5ef722-42dc-4daa-b381-27f84f2c7966"
}
