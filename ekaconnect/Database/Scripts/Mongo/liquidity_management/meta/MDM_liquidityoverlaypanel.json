{
  "_id": "MDM_liquidityoverlaypanel",
  "name": "MDM_liquidityoverlaypanel",
  "type": "processor",
  "refType": "app",
  "refTypeId": "d88e9a79-c0cc-4c28-bb01-ee56ff33048e",
  "snippet": "var moment = require(\"moment\");\r\nlet mdmbody = JSON.parse(req.body.mdmProcessorServiceKey);\r\nreq.body.mdmProcessorServiceKey = JSON.parse(req.body.mdmProcessorServiceKey);\r\nvar planId =\r\n  req.body.selectedData &&\r\n  req.body.selectedData.planactivitycreation &&\r\n  req.body.selectedData.planactivitycreation.liquidityPlanName\r\n    ? req.body.selectedData.planactivitycreation.liquidityPlanName\r\n    : \"\";\r\n\r\nfunction findindex(serviceKey) {\r\n  return req.body.mdmProcessorServiceKey.findIndex(\r\n    (x) => x.serviceKey == serviceKey\r\n  );\r\n}\r\nvar ekaEntity =\r\n  req.body.propertyList.platform_url + \"/spring/cashManagement/entity\";\r\n\r\nvar platformEntity = {\r\n  method: \"GET\",\r\n  url: ekaEntity,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"Content-Type\": \"application/json\",\r\n    ttl: 300,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n    \"X-Remote-User\": \"ekaApp\",\r\n  },\r\n  json: true,\r\n};\r\nvar get_platformEntity = function get_platformEntity() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(platformEntity, function (err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n};\r\nvar TemplateUrl =\r\n  req.body.propertyList.platform_url + \"/collection/v1/internal/template/\";\r\n\r\nvar templateBody = {\r\n  method: \"GET\",\r\n  url: TemplateUrl,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"Content-Type\": \"application/json\",\r\n    ttl: 300,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n    \"X-Remote-User\": \"ekaApp\",\r\n  },\r\n  json: true,\r\n};\r\nvar get_template = function get_template(name) {\r\n  templateBody.url =\r\n    req.body.propertyList.platform_url +\r\n    \"/collection/v1/internal/template/\" +\r\n    name +\r\n    \"?start=0&limit=10000\";\r\n  return new Promise(function (resolve, reject) {\r\n    request(templateBody, function (err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nasync function main() {\r\n  let mdmdata = {};\r\n  let { datefilters } = req.body.selectedData;\r\n  if (findindex(\"currency\") != -1) {\r\n    try {\r\n      let BankDetails = await get_template(\"TreasuryBankAccount\");\r\n      let ent = mdmbody[findindex(\"currency\")].dependsOn[0];\r\n      let filtered = BankDetails.data.filter((res) => res.Entity == ent);\r\n      mdmdata[\"currency\"] = [\r\n        ...new Set(filtered.map((obj) => obj[\"Currency\"])),\r\n      ].map((item) => {\r\n        return { key: item, value: item };\r\n      });\r\n      mdmdata[\"Direction\"] = [\r\n        { key: \"Debit\", value: \"Debit\" },\r\n        { key: \"Credit\", value: \"Credit\" },\r\n      ];\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return mdmdata;\r\n}\r\nmain().then((mdmdata) => {\r\n  res.status(200).send(mdmdata);\r\n});\r\n",
  "sys__UUID": "d831748f-d3de-4fe0-8b74-572c150531bf"
}
