{
    "_id" : "Initial_Processor_for_liquidity_plan_status_log",
    "name" : "Initial_Processor_for_liquidity_plan_status_log",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "d88e9a79-c0cc-4c28-bb01-ee56ff33048e",
    "snippet" : "var moment = require(\"moment\");\r\nvar ekaliquidityplan =\r\n  req.body.propertyList.platform_url +\r\n  \"/spring/liquidityManagement/liquidityPlan/bulkProcess\";\r\nvar ekaliquidityplanurl = {\r\n  method: \"POST\",\r\n  url: ekaliquidityplan,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  json: true,\r\n};\r\nvar get_platformLiquidityPlan = function get_platformLiquidityPlan() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(ekaliquidityplanurl, function (err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n};\r\nget_platformLiquidityPlan()\r\n  .then(function (ent) {\r\n    res.status(200).send({ msg: \"Bulk processing of the Liquidity Plan has been done successfully\" });\r\n  })\r\n  .catch((err) => {\r\n    console.error(err);\r\n    res.status(500).send({ msg: \"failed to create\" });\r\n  });\r\n",
    "sys__UUID" : "0cf87c4f-b9fe-4c23-9628-d5cb8ef1edd5",
    "sys__createdBy" : "Jay"
}