{
  "_id": "Initial_Processor_for_liquidity_plan",
  "name": "Initial_Processor_for_liquidity_plan",
  "type": "processor",
  "refType": "app",
  "refTypeId": "d88e9a79-c0cc-4c28-bb01-ee56ff33048e",
  "snippet": "var moment = require(\"moment\");\r\nlet selected = req.body.hasOwnProperty(\"selectedData\")\r\n  ? req.body.selectedData\r\n  : {};\r\nvar ekaEntity =\r\n  req.body.propertyList.platform_url +\r\n  \"/spring/liquidityManagement/liquidityPlan\";\r\nvar platformBody = { asOfDate: \"\", clientID: \"8\", entityIds: [] };\r\n\r\nvar platformEntityLiquidityPlanData = {\r\n  method: \"GET\",\r\n  url: ekaEntity,\r\n  body: platformBody,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"Content-Type\": \"application/json\",\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nvar get_platformEntityLiquidityPlanData =\r\n  function get_platformEntityLiquidityPlanData(date, entity, toDate) {\r\n    if (date && toDate) {\r\n      date = moment(date).format(\"YYYY-MM-DD\");\r\n      platformBody.asOfDate = date;\r\n      platformBody.toDate = toDate;\r\n    } else {\r\n      platformBody.asOfDate = moment(new Date()).format(\"YYYY-MM-DD\");\r\n      platformBody.toDate = moment(new Date()).format(\"YYYY-MM-DD\");\r\n    }\r\n    if (entity && entity.length > 0) {\r\n      platformBody.entityIds = entity;\r\n    }\r\n    platformEntityLiquidityPlanData.body = platformBody;\r\n    return new Promise(function (resolve, reject) {\r\n      request(platformEntityLiquidityPlanData, function (err, response, body) {\r\n        if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n          resolve(body);\r\n        } else {\r\n          reject(body);\r\n        }\r\n      });\r\n    });\r\n  };\r\nvar ekaEntity =\r\n  req.body.propertyList.platform_url + \"/spring/cashManagement/entity\";\r\n\r\nvar platformEntity = {\r\n  method: \"GET\",\r\n  url: ekaEntity,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"Content-Type\": \"application/json\",\r\n    ttl: 300,\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n    \"X-Remote-User\": \"ekaApp\",\r\n  },\r\n  json: true,\r\n};\r\nvar get_platformEntity = function get_platformEntity() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(platformEntity, function (err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n};\r\nget_platformEntity()\r\n  .then(function (ent) {\r\n    var entity = ent.map(function (res) {\r\n      return res[\"c1\"];\r\n    });\r\n    if (\r\n      selected.hasOwnProperty(\"filterDate\") &&\r\n      selected.hasOwnProperty(\"toDate\")\r\n    ) {\r\n      var date = req.body.selectedData.filterDate;\r\n      var toDate = req.body.selectedData.toDate;\r\n      entity = req.body.selectedData.formcheckbox;\r\n    }\r\n    Promise.all([get_platformEntityLiquidityPlanData(date, entity, toDate)])\r\n      .then((results) => {\r\n        let liquidityplan = [];\r\n        for (let i = 0; i < results[0].length; i++) {\r\n          liquidityplan[i] = results[0][i];\r\n          liquidityplan[i][\"liquidityPlanId\"] = liquidityplan[i][\"c1\"];\r\n          liquidityplan[i][\"liquidityPlanName\"] = liquidityplan[i][\"c2\"];\r\n          liquidityplan[i][\"liquidityPlanDescription\"] = liquidityplan[i][\"c3\"];\r\n          liquidityplan[i][\"entity\"] = liquidityplan[i][\"c4\"];\r\n          liquidityplan[i][\"liquidityPlanPeriod\"] = liquidityplan[i][\"c5\"];\r\n          liquidityplan[i][\"planStartDate\"] = moment(\r\n            liquidityplan[i][\"c6\"]\r\n          ).format(\"DD-MMM-YYYY\");\r\n          liquidityplan[i][\"planEndDate\"] = moment(\r\n            liquidityplan[i][\"c7\"]\r\n          ).format(\"DD-MMM-YYYY\");\r\n          liquidityplan[i][\"planRollOver\"] = liquidityplan[i][\"c8\"];\r\n          liquidityplan[i][\"planSource\"] = liquidityplan[i][\"c9\"];\r\n          liquidityplan[i][\"liquidityPlanFunction\"] = liquidityplan[i][\"c10\"];\r\n          liquidityplan[i][\"currency\"] = liquidityplan[i][\"c11\"];\r\n          liquidityplan[i][\"status\"] = liquidityplan[i][\"c12\"];\r\n          liquidityplan[i][\"submittedDate\"] =\r\n            liquidityplan[i][\"c13\"] === undefined ||\r\n            liquidityplan[i][\"c13\"] === null ||\r\n            !moment(liquidityplan[i][\"c13\"]).isValid()\r\n              ? null\r\n              : moment(liquidityplan[i][\"c13\"]).format(\"DD-MMM-YYYY\");\r\n          liquidityplan[i][\"submittedBy\"] = liquidityplan[i][\"c14\"];\r\n          liquidityplan[i][\"approvedDate\"] =\r\n            liquidityplan[i][\"c15\"] === undefined ||\r\n            liquidityplan[i][\"c15\"] === null ||\r\n            !moment(liquidityplan[i][\"c15\"]).isValid()\r\n              ? null\r\n              : moment(liquidityplan[i][\"c15\"]).format(\"DD-MMM-YYYY\");\r\n          liquidityplan[i][\"approvedBy\"] = liquidityplan[i][\"c16\"];\r\n          liquidityplan[i][\"createdDate\"] = liquidityplan[i][\"c17\"];\r\n          liquidityplan[i][\"updatedDate\"] = liquidityplan[i][\"c18\"]\r\n            ? moment(liquidityplan[i][\"c18\"]).format(\"DD-MMM-YYYY HH:MM:SS\")\r\n            : \"\";\r\n          liquidityplan[i][\"updatedBy\"] = liquidityplan[i][\"c19\"];\r\n          liquidityplan[i][\"remarks\"] = liquidityplan[i][\"c20\"];\r\n          liquidityplan[i][\"source\"] = liquidityplan[i][\"c22\"];\r\n          liquidityplan[i][\"sourceId\"] = liquidityplan[i][\"c23\"];\r\n          liquidityplan[i][\"planActivityStatus\"] = liquidityplan[i][\"c24\"];\r\n          liquidityplan[i][\"planType\"] = liquidityplan[i][\"c25\"];\r\n        }\r\n        res.status(200).send([...liquidityplan]);\r\n      })\r\n      .catch((err) => {\r\n        res.status(500).send(err);\r\n      });\r\n  })\r\n  .catch((err) => {\r\n    res.status(500).send(err);\r\n  });\r\n",
  "sys__UUID": "2fbf071a-e88b-4352-ad53-02698baf5c9b",
  "sys__createdBy": "Jay"
}
