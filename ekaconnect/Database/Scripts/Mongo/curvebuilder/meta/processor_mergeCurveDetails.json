{
    "_id" : "mergebasecurveandcurveDetails",
    "name" : "mergebasecurveandcurveDetails",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "1e032ad8-cb25-4d7b-a555-da6951078b41",
    "snippet" : "var defaultDataURL =\r\n  req.body.propertyList.eka_connect_host + '/workflow/data';\r\n  var dbody = {\r\n    \"appId\":\"84d7b167-1d9f-406d-b974-bea406a25f9a\",\r\n    \"workFlowTask\":\"basecurve_list\"\r\n  }\r\n  var defaultdata = {\r\n    method: 'POST',\r\n    url: defaultDataURL,\r\n    body:dbody,\r\n    headers: {\r\n      Authorization: req.headers.authorization,\r\n      'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true\r\n  };\r\n  function get_defaultData() {\r\n    return new Promise(function(resolve, reject) {\r\n      request(defaultdata, function(err, response, body) {\r\n        if (err || body.error) reject(body);\r\n        else {\r\n          resolve(body);\r\n        }\r\n      });\r\n    });\r\n  }\r\n  var defaultdata1 = {\r\n    method: 'POST',\r\n    url: defaultDataURL,\r\n    body:{\r\n      \"appId\":\"1e032ad8-cb25-4d7b-a555-da6951078b41\",\r\n      \"workFlowTask\":\"curve_list_attribute\"\r\n    },\r\n    headers: {\r\n      Authorization: req.headers.authorization,\r\n      'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true\r\n  };\r\n  function get_defaultData1() {\r\n    return new Promise(function(resolve, reject) {\r\n      request(defaultdata1, function(err, response, body) {\r\n        if (err || body.error) reject(body);\r\n        else {\r\n          resolve(body);\r\n        }\r\n      });\r\n    });\r\n  }\r\nget_defaultData().then(function(result) {\r\n  var basecurvelist = result.data[0].data\r\n  get_defaultData1().then(data2=>{\r\n    var curveobject = {}\r\n    var showList = []\r\n    for(let i=0;i<basecurvelist.length;i++){\r\n      curveobject[basecurvelist[i].map.curveName] = basecurvelist[i].map\r\n    }\r\n    console.log(data2)\r\n    for(let j=0;j<data2.data.length;j++){\r\n      if(curveobject.hasOwnProperty(data2.data[j].curveName)){\r\n        if(data2.data[j].tenorTime!== \"\"){\r\n          data2.data[j].tenorTimeDisplayName = String(data2.data[j].tenor) + ' ' +data2.data[j].tenorTimeDisplayName\r\n        }\r\n        showList.push(data2.data[j])\r\n        delete curveobject[data2.data[j].curveName];\r\n      }\r\n    }\r\n      for(let key in curveobject){  \r\n      showList.push(curveobject[key])    \r\n    }\r\n    \r\n    res.status(200).send(showList);\r\n}).catch(err => {\r\n    console.log(err);\r\n  });\r\n  }).catch(err => {\r\n    console.log(err);\r\n  });",
    "sys__UUID" : "a4dc9b1d-b161-4c23-a5d9-6b628a32fd50",
    "sys__createdOn" : ISODate("2019-05-22T09:51:04.600Z"),
    "sys__createdBy" : "srini@ekaplus.com"
}