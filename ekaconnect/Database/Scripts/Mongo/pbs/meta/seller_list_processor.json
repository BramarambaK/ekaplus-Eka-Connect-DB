{
  "_id": "seller_list_PBS_processor",
  "name": "seller_list",
  "type": "processor",
  "refType": "app",
  "refTypeId": "4e20f754-574e-43e7-8d11-87c6fae060f5",
  "snippet": "var sessionStorageData = req.body.queryParams;\r\nvar plannedBulkShipmentNo = sessionStorageData.plannedBulkShipmentNo;\r\nplannedBulkShipmentNo = plannedBulkShipmentNo.toString();\r\nvar filterarr = [];\r\nfilterarr.push({\r\n    fieldName: 'Planned Bulk Shipment Ref No',\r\n    value: plannedBulkShipmentNo,\r\n    operator: 'in'\r\n});\r\nfilterarr.push({\r\n    fieldName: 'Item Type',\r\n    value: 'Purchase Contract',\r\n    operator: 'in'\r\n});\r\nvar salesContractItemBody = {};\r\nvar salesContractItemBody = {\r\n    criteria: {\r\n        filter: filterarr\r\n    },\r\n    collectionName: req.body.propertyList.sellerBuyer_collection_name\r\n};\r\nvar salesContractItem = {\r\n    method: 'POST',\r\n    body: salesContractItemBody,\r\n    url:\r\n        req.body.propertyList.eka_connect_host +\r\n        '/collectionmapper/' +\r\n        req.body.appId +\r\n        '/9c98c493-ee2f-490d-be92-fe2424f513e5/fetchCollectionRecords',\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json',\r\n        ttl: 300,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        'X-Remote-User': 'ekaApp'\r\n    },\r\n    json: true\r\n};\r\nfunction get_salesContractItem() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log(salesContractItem.body);\r\n        request(salesContractItem, function (err, response, body) {\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nvar connectUrl = req.body.propertyList.eka_connect_host + '/workflow/data';\r\nvar connectBody = {\r\n    appId: req.body.appId,\r\n    workFlowTask: 'createsellerlistCOPY'\r\n};\r\nvar connect = {\r\n    method: 'POST',\r\n    body: connectBody,\r\n    url: connectUrl,\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true\r\n};\r\nif (req.headers.hasOwnProperty('device-id')) {\r\n    connect.headers['Device-Id'] = req.headers['device-id'];\r\n}\r\nfunction get_connect() {\r\n    return new Promise(function (resolve, reject) {\r\n        request(connect, function (err, response, body) {\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nPromise.all([get_salesContractItem(), get_connect()])\r\n    .then(result => {\r\n        var seller_collection = result[0];\r\n        var connectData = result[1].data;\r\n        var collectiondata = [];\r\n        for (var i = 0; i < seller_collection.length; i++) {\r\n            seller_collection[i]['CP Name'] = seller_collection[i]['CP Name'].trim();\r\n            if (seller_collection[i]['Planned Bulk Shipment Ref No'] === req.body.queryParams.plannedBulkShipmentNo[0]) {\r\n                collectiondata.push({\r\n                    seller: seller_collection[i]['CP Name'],\r\n                    seller_id: seller_collection[i]['CP Name'],\r\n                    plannedBulkShipmentNo: req.body.queryParams.plannedBulkShipmentNo[0],\r\n                    sellerpbs: req.body.queryParams.plannedBulkShipmentNo[0] + seller_collection[i]['CP Name']\r\n                });\r\n            }\r\n        }\r\n        if (connectData.length > 0) {\r\n            for (var k = 0; k < collectiondata.length; k++) {\r\n                for (var j = 0; j < connectData.length; j++) {\r\n                    if (connectData[j]['sellerpbs'] === collectiondata[k]['sellerpbs'])\r\n                        collectiondata[k] = {\r\n                            seller: collectiondata[k]['seller'],\r\n                            seller_id: collectiondata[k]['seller'],\r\n                            plannedBulkShipmentNo: req.body.queryParams.plannedBulkShipmentNo[0],\r\n                            sellerpbs: req.body.queryParams.plannedBulkShipmentNo[0] + collectiondata[k]['seller'],\r\n                            ...connectData[j]\r\n                        };\r\n                }\r\n            }\r\n        }\r\n\r\n        collectiondata = collectiondata.reduce((unique, o) => {\r\n            if (!unique.some(obj => obj.sellerpbs === o.sellerpbs)) {\r\n                unique.push(o);\r\n            }\r\n            return unique;\r\n        }, []);\r\n\r\n        res.status(200).send(collectiondata);\r\n    })\r\n    .catch(err => {\r\n        res.status(500).send(err);\r\n    });\r\n",
  "sys__UUID": "949eb3a4-dd3e-43c6-bef9-6086ea69cb68",
  "sys__createdBy": "ekauser@ekaplus.com"
}
