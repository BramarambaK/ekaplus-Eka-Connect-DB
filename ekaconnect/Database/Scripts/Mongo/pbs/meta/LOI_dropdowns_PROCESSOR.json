{
  "_id": "LOI_dropdowns_PROCESSOR",
  "name": "LOI_Dropdown",
  "type": "processor",
  "refType": "app",
  "refTypeId": "4e20f754-574e-43e7-8d11-87c6fae060f5",
  "snippet": "\r\n    var salesContractItemBody = {};\r\n    var sessionStorageData = req.body.queryParams;\r\n    req.body.mdmProcessorServiceKey = JSON.parse(req.body.mdmProcessorServiceKey);\r\n    if (sessionStorageData && sessionStorageData.contractItems) {\r\n      sessionStorageData.contractItems = sessionStorageData.contractItems[0];\r\n    }\r\n    var sessionContract = [];\r\n    var contract;\r\n    var arr = [];\r\n    sessionStorageData.contractItems = sessionStorageData.contractItems.split(',');\r\n    for (var i = 0; i < sessionStorageData.contractItems.length; i++) {\r\n      var sessionContract = sessionStorageData.contractItems[i].split('-');\r\n      if (sessionContract[3]) {\r\n        contract = sessionContract[0] + '-' + sessionContract[1] + '-' + sessionContract[2] + '.' + sessionContract[3];\r\n        arr.push(contract);\r\n      }\r\n    }\r\n    arr = arr.toString();\r\n    var salesContractItemBody = {\r\n      refNo: arr,\r\n      criteria: {\r\n        filter: [\r\n          {\r\n            fieldName: 'Ref No',\r\n            value: arr,\r\n            operator: 'in'\r\n          }\r\n        ]\r\n      }\r\n    };\r\n    var salesContractItem = {\r\n      method: 'POST',\r\n      body: salesContractItemBody,\r\n      url: req.body.propertyList.platform_url +'/trm/api/v1/scm-sampling-physical-trade-details',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      json: true\r\n    };\r\n    function get_salesContractItem(filter) {\r\n      return new Promise(function(resolve, reject) {\r\n        if (filter) {\r\n          salesContractItem.body = {};\r\n          salesContractItem.body = filter;\r\n        }\r\n        request(salesContractItem, function(err, response, body) {\r\n          if (\r\n            response.statusCode >= 200 &&\r\n            response.statusCode <= 299 &&\r\n            body.hasOwnProperty('success') &&\r\n            body['success'] == true\r\n          ) {\r\n            resolve(JSON.parse(body.description));\r\n          } else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var platformUrl = req.body.propertyList.platform_url+'/trm/api/v1/scm-pbs-load-discharge-details';\r\n    var platformBody = {\r\n      planBulkShipNo: sessionStorageData.plannedBulkShipmentNo[0],\r\n      isLoadPort: 'N'\r\n    };\r\n    var collectionDischargePorts = {\r\n      method: 'POST',\r\n      url: platformUrl,\r\n      body: platformBody,\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      json: true\r\n    };\r\n    function get_collectionDischargePorts() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(collectionDischargePorts, function(err, response, body) {\r\n          if (\r\n            response.statusCode >= 200 &&\r\n            response.statusCode <= 299 &&\r\n            body.hasOwnProperty('success') &&\r\n            body['success'] == true\r\n          ) {\r\n            resolve(JSON.parse(body.description));\r\n          } else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var corporatebody = [\r\n      {\r\n        serviceKey: 'corporate'\r\n      }\r\n    ];\r\n    var mdmcorporate = {\r\n      method: 'POST',\r\n      body: corporatebody,\r\n      url: req.body.propertyList.eka_ctrm_host + '/mdmapi/data',\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      json: true\r\n    };\r\n    function get_mdmcorporate() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(mdmcorporate, function(err, response, body) {\r\n          if (err || body.error) reject(body);\r\n          else {\r\n            resolve(body);\r\n          }\r\n        });\r\n      });\r\n    }\r\n    var mdmDatasalesContractItem = [];\r\n    var mdmDatasalesCP = [];\r\n    var mdmDataproduct = [];\r\n    var mdmDataquality = [];\r\n    var mdmDatapaymentTerms = [];\r\n    var mdmDataprofitCenter = [];\r\n    var mdmDatacorporateName = [];\r\n    var mdmDataDischargePorts = [];\r\n    var mdmDatapersonIncharge = [];\r\n    if (req && req.body.mdmProcessorServiceKey) {\r\n      let mdmProcessorServiceKey = req.body.mdmProcessorServiceKey;\r\n      for (var i = 0; i < mdmProcessorServiceKey.length; i++) {\r\n        if (\r\n          mdmProcessorServiceKey &&\r\n          mdmProcessorServiceKey[i] &&\r\n          mdmProcessorServiceKey[i]['serviceKey'] == 'saleContractItem'\r\n        ) {\r\n          Promise.all([get_salesContractItem(), get_collectionDischargePorts()])\r\n            .then(result => {\r\n              var salesContractItem = result[0];\r\n              for (var j = 0; j < salesContractItem.length; j++) {\r\n                if (salesContractItem[j]['contractType'] == 'S') {\r\n                  mdmDatasalesContractItem.push({\r\n                    key: salesContractItem[j]['refNo'],\r\n                    value: salesContractItem[j]['refNo']\r\n                  });\r\n                }\r\n              }\r\n              for (var k = 0; k < result[1].length; k++) {\r\n                mdmDataDischargePorts.push({ key: result[1][k]['port'], value: result[1][k]['port'] });\r\n              }\r\n              var firstPersonInchargeName = [];\r\n              firstPersonInchargeName = sessionStorageData.firstPersonInchargeName[0].split(',');\r\n              for (var k = 0; k < firstPersonInchargeName.length; k++) {\r\n                mdmDatapersonIncharge.push({\r\n                  key: firstPersonInchargeName[k],\r\n                  value: firstPersonInchargeName[k]\r\n                });\r\n              }\r\n              let error = [];\r\n              if (result[0].hasOwnProperty('message')) {\r\n                result[0]['collection'] = 'Sampling Physical trade details';\r\n                error.push(result[0]);\r\n              }\r\n              if (result[1].hasOwnProperty('message')) {\r\n                result[1]['collection'] = 'Realtime PBS Loading Discharge Details';\r\n                error.push(result[1]);\r\n              }\r\n              console.log(error);\r\n              res.status(200).send({\r\n                saleContractItem: mdmDatasalesContractItem,\r\n                dischargePort: mdmDataDischargePorts,\r\n                personInCharge: mdmDatapersonIncharge,\r\n                error: error\r\n              });\r\n            })\r\n            .catch(err => {\r\n              console.error(err);\r\n              res.status(500).send(err);\r\n            });\r\n          break;\r\n        } else if (\r\n          mdmProcessorServiceKey &&\r\n          mdmProcessorServiceKey[i] &&\r\n          mdmProcessorServiceKey[i]['dependsOn'] &&\r\n          mdmProcessorServiceKey[i]['dependsOn'].length > 0\r\n        ) {\r\n          var dependsOn = mdmProcessorServiceKey[i]['dependsOn'][0];\r\n          // var body = {\r\n          //   filter: [\r\n          //     {\r\n          //       fieldName: 'Ref No',\r\n          //       value: dependsOn,\r\n          //       operator: 'eq'\r\n          //     }\r\n          //   ]\r\n          // };\r\n          var body = {\r\n            refNo: dependsOn\r\n          };\r\n          get_salesContractItem(body)\r\n            .then(function(result) {\r\n              var salesContractItem = result[0];\r\n              if (salesContractItem && salesContractItem['businessPartner']) {\r\n                mdmDatasalesCP.push({\r\n                  key: salesContractItem['businessPartner'],\r\n                  value: salesContractItem['businessPartner']\r\n                });\r\n              }\r\n              if (salesContractItem && salesContractItem['product']) {\r\n                mdmDataproduct.push({\r\n                  key: salesContractItem['product'],\r\n                  value: salesContractItem['product']\r\n                });\r\n              }\r\n              if (salesContractItem && salesContractItem['quality']) {\r\n                mdmDataquality.push({\r\n                  key: salesContractItem['quality'],\r\n                  value: salesContractItem['quality']\r\n                });\r\n              }\r\n              if (salesContractItem && salesContractItem['paymentTerm']) {\r\n                mdmDatapaymentTerms.push({\r\n                  key: salesContractItem['paymentTerm'],\r\n                  value: salesContractItem['paymentTerm']\r\n                });\r\n              }\r\n              if (salesContractItem && salesContractItem['profitCenter']) {\r\n                mdmDataprofitCenter.push({\r\n                  key: salesContractItem['profitCenter'],\r\n                  value: salesContractItem['profitCenter']\r\n                });\r\n              }\r\n              if (salesContractItem && salesContractItem['corporate']) {\r\n                mdmDatacorporateName.push({\r\n                  key: salesContractItem['corporate'],\r\n                  value: salesContractItem['corporate']\r\n                });\r\n              }\r\n              //write corporateid here\r\n              var corporateID;\r\n              var corporateName = mdmDatacorporateName[0]['value'];\r\n              var initials = Array.prototype.map\r\n                .call(corporateName.split(' '), function(x) {\r\n                  return x.substring(0, 1).toUpperCase();\r\n                })\r\n                .join('');\r\n              var x = dependsOn;\r\n              var year = new Date().getFullYear();\r\n              corporateID = initials + '_' + year + '_';\r\n              var error = [];\r\n              if (result[0].hasOwnProperty('message')) {\r\n                result[0]['collection'] = 'Sampling Physical trade details';\r\n                error.push(result[0]);\r\n              }\r\n              res.status(200).send({\r\n                salesCP: mdmDatasalesCP,\r\n                product: mdmDataproduct,\r\n                quality: mdmDataquality,\r\n                paymentTerms: mdmDatapaymentTerms,\r\n                profitCenter: mdmDataprofitCenter,\r\n                corporateName: mdmDatacorporateName,\r\n                corporateID: corporateID,\r\n                error: error\r\n              });\r\n            })\r\n            .catch(err => {\r\n              console.error(err);\r\n              res.status(500).send(err);\r\n            });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  ",
  "sys__UUID": "1afc9fbc-747c-45b0-9b4e-8efb9e965f75",
  "sys__createdBy": "Bravo"
}
