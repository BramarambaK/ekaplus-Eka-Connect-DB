{
  "_id": "createvoyage_PBS_processor",
  "name": "createvoyage",
  "type": "processor",
  "refType": "app",
  "refTypeId": "4e20f754-574e-43e7-8d11-87c6fae060f5",
  "snippet": "\r\nvar connectUrlLoadingPort = req.body.propertyList.eka_connect_host + '/workflow/data';\r\nvar connectUrlDischargePort = req.body.propertyList.eka_connect_host + '/workflow/data';\r\nvar connectBodyLoadingPort = {\r\n    appId: req.body.appId,\r\n    workFlowTask: 'loadingports'\r\n};\r\nvar connectBodyDischargePort = {\r\n    appId: req.body.appId,\r\n    workFlowTask: 'dischargeports'\r\n};\r\nvar connectLoadingPort = {\r\n    method: 'POST',\r\n    body: connectBodyLoadingPort,\r\n    url: connectUrlLoadingPort,\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true\r\n};\r\nif (req.headers.hasOwnProperty('device-id')) {\r\n    connectLoadingPort.headers['Device-Id'] = req.headers['device-id'];\r\n}\r\nvar connectDischargePort = {\r\n    method: 'POST',\r\n    body: connectBodyDischargePort,\r\n    url: connectUrlDischargePort,\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'X-TenantID': req.headers['x-tenantid']\r\n    },\r\n    json: true\r\n};\r\nif (req.headers.hasOwnProperty('device-id')) {\r\n    connectDischargePort.headers['Device-Id'] = req.headers['device-id'];\r\n}\r\nfunction get_connect_LoadingPort() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + collection_voyage.url);\r\n        request(connectLoadingPort, function (err, response, body) {\r\n            console.log('Response - ' + JSON.stringify(body));\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction get_connect_DischargePort() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + collection_voyage.url);\r\n        request(connectDischargePort, function (err, response, body) {\r\n            console.log('Response - ' + JSON.stringify(body));\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nvar platformUrl =\r\n    req.body.propertyList.eka_connect_host +\r\n    '/collectionmapper/' +\r\n    req.body.appId +\r\n    '/9c98c493-ee2f-490d-be92-fe2424f513e5/fetchCollectionRecords';\r\nvar voyage_collection_url =\r\n    req.body.propertyList.platform_url + '/collection/v1?collectionName=' + req.body.propertyList.voyage_collection;\r\nvar filterarr = [];\r\nvar filterarr2 = [];\r\n\r\nif (req && req.body && req.body.queryParams) {\r\n    var obj = {};\r\n    var obj2 = {};\r\n    obj['fieldName'] = 'ISLOADPORT';\r\n    obj['value'] = 'Y';\r\n    obj['operator'] = 'eq';\r\n    filterarr.push(obj);\r\n    var obj1 = {};\r\n    obj1['fieldName'] = 'PLAN BULK SHIP NO';\r\n    obj1['value'] = req.body.queryParams.plannedBulkShipmentNo[0];\r\n    obj1['operator'] = 'eq';\r\n    filterarr.push(obj1);\r\n    filterarr2.push(obj1);\r\n}\r\nvar platformBody = {\r\n    criteria: { filter: filterarr },\r\n\r\n    collectionName: req.body.propertyList.loadingports_collection_name\r\n};\r\nvar platformBody2 = {\r\n    criteria: { filter: filterarr2 },\r\n\r\n    collectionName: req.body.propertyList.loadingports_collection_name\r\n};\r\nvar collection = {\r\n    method: 'POST',\r\n    url: platformUrl,\r\n    body: platformBody,\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json',\r\n        ttl: 300,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        'X-Remote-User': 'ekaApp'\r\n    },\r\n    json: true\r\n};\r\nif (req.headers.hasOwnProperty('device-id')) {\r\n    collection.headers['Device-Id'] = req.headers['device-id'];\r\n}\r\nvar collection2 = {\r\n    method: 'POST',\r\n    url: platformUrl,\r\n    body: platformBody2,\r\n    headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json',\r\n        ttl: 300,\r\n        'X-TenantID': req.headers['x-tenantid'],\r\n        'X-Remote-User': 'ekaApp'\r\n    },\r\n    json: true\r\n};\r\nif (req.headers.hasOwnProperty('device-id')) {\r\n    collection2.headers['Device-Id'] = req.headers['device-id'];\r\n}\r\nfunction get_collection() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + collection.url);\r\n        request(collection, function (err, response, body) {\r\n            console.log('Response - ' + JSON.stringify(body));\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction get_collection2() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + collection2.url);\r\n        request(collection2, function (err, response, body) {\r\n            console.log('Response - ' + JSON.stringify(body));\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nvar collection_voyage = {\r\n    method: 'GET',\r\n    url: voyage_collection_url,\r\n    headers: {\r\n        Authorization: req.headers.authorization\r\n    },\r\n    json: true\r\n};\r\nif (req.headers.hasOwnProperty('device-id')) {\r\n    collection_voyage.headers['Device-Id'] = req.headers['device-id'];\r\n}\r\nfunction get_collection_voyage() {\r\n    return new Promise(function (resolve, reject) {\r\n        console.log('Request - ' + collection_voyage.url);\r\n        request(collection_voyage, function (err, response, body) {\r\n            console.log('Response - ' + JSON.stringify(body));\r\n            if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n                resolve(body);\r\n            }\r\n            else {\r\n                reject(body);\r\n            }\r\n        });\r\n    });\r\n}\r\nvar result = [];\r\nPromise.all([get_collection2(), get_connect_LoadingPort(), get_connect_DischargePort()])\r\n    .then(result => {\r\n        var collection = [];\r\n        var collection_discharge = [];\r\n        var collectionData = result[0];\r\n        var loadingports = result[1].data;\r\n        var dischargeports = result[2].data;\r\n        var response = {};\r\n        response.loadingports = [];\r\n        response.dischargeports = [];\r\n        for (var g = 0; g < collectionData.length; g++) {\r\n            if (collectionData[g]['ISLOADPORT'] == 'Y') {\r\n                collection.push(collectionData[g]);\r\n            } else if (collectionData[g]['ISLOADPORT'] == 'N') {\r\n                collection_discharge.push(collectionData[g]);\r\n            }\r\n        }\r\n        if (collection) {\r\n            for (var i = 0; i < collection.length; i++) {\r\n                if (collection[i]['PLAN BULK SHIP NO'] === req.body.queryParams.plannedBulkShipmentNo[0]) {\r\n                    response.loadingports.push({\r\n                        plannedBulkShipmentNo: req.body.queryParams.plannedBulkShipmentNo[0],\r\n                        uniqueId: collection[i]['PORT'] + req.body.queryParams.plannedBulkShipmentNo[0],\r\n                        loadingPort: collection[i]['PORT'],\r\n                        portId: collection[i]['PORTID'],\r\n                        loadingNorTenderedDate: '',\r\n                        loadingVesselETBDate: '',\r\n                        loadingVesselETCDate: '',\r\n                        loadingblreleasedDate: '',\r\n                        collectionName: 'voyage_loadingport',\r\n                        collectionHeaderProperty: 'loadingports_collectionHeader',\r\n                        collectionConnectMapProperty: 'loadingport_collectionConnectMap',\r\n                        platformTemplateId: ''\r\n                    });\r\n                }\r\n            }\r\n            if (loadingports.length == 0) {\r\n                response.loadingports = response.loadingports;\r\n            } else {\r\n                for (var i = 0; i < response.loadingports.length; i++) {\r\n                    for (var j = 0; j < loadingports.length; j++) {\r\n                        if (loadingports[j]['uniqueId'] === response.loadingports[i]['uniqueId']) {\r\n                            response.loadingports[i] = {\r\n                                plannedBulkShipmentNo: req.body.queryParams.plannedBulkShipmentNo[0],\r\n                                uniqueId: collection[i]['PORT'] + req.body.queryParams.plannedBulkShipmentNo[0],\r\n                                loadingPort: collection[i]['PORT'],\r\n                                portId: collection[i]['PORTID'],\r\n                                loadingNorTenderedDate: '',\r\n                                loadingVesselETBDate: '',\r\n                                loadingVesselETCDate: '',\r\n                                loadingblreleasedDate: '',\r\n                                collectionName: 'voyage_loadingport',\r\n                                collectionHeaderProperty: 'loadingports_collectionHeader',\r\n                                collectionConnectMapProperty: 'loadingport_collectionConnectMap',\r\n                                platformTemplateId: '',\r\n                                ...loadingports[j]\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (collection_discharge) {\r\n            for (var i = 0; i < collection_discharge.length; i++) {\r\n                if (collection_discharge[i]['PLAN BULK SHIP NO'] === req.body.queryParams.plannedBulkShipmentNo[0]) {\r\n                    response.dischargeports.push({\r\n                        plannedBulkShipmentNo: req.body.queryParams.plannedBulkShipmentNo[0],\r\n                        uniqueId: collection_discharge[i]['PORT'] + req.body.queryParams.plannedBulkShipmentNo[0],\r\n                        dischargePort: collection_discharge[i]['PORT'],\r\n                        dischargeportId: collection_discharge[i]['PORTID'],\r\n                        dischargeNorTenderedDate: '',\r\n                        dischargeVesselETBDate: '',\r\n                        dischargeVesselETCDate: '',\r\n                        collectionName: 'voyage_dischargeport',\r\n                        collectionHeaderProperty: 'dischargeports_collectionHeader',\r\n                        collectionConnectMapProperty: 'dischargeports_collectionConnectMap',\r\n                        platformTemplateId: ''\r\n                    });\r\n                }\r\n            }\r\n            if (dischargeports.length == 0) {\r\n                response.dischargeports = response.dischargeports;\r\n            } else {\r\n                for (var i = 0; i < response.dischargeports.length; i++) {\r\n                    for (var j = 0; j < dischargeports.length; j++) {\r\n                        if (dischargeports[j]['uniqueId'] === response.dischargeports[i]['uniqueId']) {\r\n                            response.dischargeports[i] = {\r\n                                plannedBulkShipmentNo: req.body.queryParams.plannedBulkShipmentNo[0],\r\n                                uniqueId: collection_discharge[i]['PORT'] + req.body.queryParams.plannedBulkShipmentNo[0],\r\n                                dischargePort: collection_discharge[i]['PORT'],\r\n                                dischargeportId: collection_discharge[i]['PORTID'],\r\n                                dischargeNorTenderedDate: '',\r\n                                dischargeVesselETBDate: '',\r\n                                dischargeVesselETCDate: '',\r\n                                collectionName: 'voyage_dischargeport',\r\n                                collectionHeaderProperty: 'dischargeports_collectionHeader',\r\n                                collectionConnectMapProperty: 'dischargeports_collectionConnectMap',\r\n                                platformTemplateId: '',\r\n                                ...dischargeports[j]\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        res.status(200).send(response);\r\n    })\r\n    .catch(err => {\r\n        res.status(500).send(err);\r\n    });\r\n",
  "sys__UUID": "585f2805-5cf2-4924-a882-fafa261be2a0",
  "sys__createdBy": "ekauser@ekaplus.com"
}
