{
    "_id" : "Final_Processor_for_projections_status_log_platform",
    "name" : "Final_Processor_for_projections_status_log_platform",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "e4ba81fc-1304-4f01-b641-7425da52a666",
    "snippet" : "\r\n  var moment = require(\"moment\");\r\nlet selected = req.body.hasOwnProperty(\"selectedData\")\r\n  ? req.body.selectedData\r\n  : {};\r\nvar ekaprojection =\r\n  req.body.propertyList.platform_url +\r\n  \"\/spring\/cashManagement\/projection\/bulkProcess\";\r\nvar ekaprojectionurl = {\r\n  method: \"POST\",\r\n  url: ekaprojection,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"Content-Type\": \"application\/json\",\r\n  },\r\n  json: true,\r\n};\r\nvar get_platformProjection = function get_platformProjection() {\r\n  return new Promise(function (resolve, reject) {\r\n    request(ekaprojectionurl, function (err, response, body) {\r\n      if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n        resolve(body);\r\n      } else {\r\n        reject(body);\r\n      }\r\n    });\r\n  });\r\n};\r\nvar statusLogUrl =\r\n  req.body.propertyList.platform_url +\r\n  \"\/spring\/liquidityManagement\/bulkProcessStatusLog?processType=Projection\";\r\nvar platformEntityStatusLogData = {\r\n  method: \"GET\",\r\n  url: statusLogUrl,\r\n  headers: {\r\n    Authorization: req.headers.authorization,\r\n    \"Content-Type\": \"application\/json\",\r\n    \"X-TenantID\": req.headers[\"x-tenantid\"],\r\n  },\r\n  json: true,\r\n};\r\nvar get_platformEntityStatusLogData =\r\n  function get_platformEntityStatusLogData() {\r\n    return new Promise(function (resolve, reject) {\r\n      request(platformEntityStatusLogData, function (err, response, body) {\r\n        if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n          resolve(body);\r\n        } else {\r\n          reject(body);\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\nget_platformProjection()\r\n  .then(function (ent) {\r\n    get_platformEntityStatusLogData().then(function (ent) {\r\n      Promise.all([get_platformEntityStatusLogData()])\r\n        .then((results) => {\r\n          let statusLog = [];\r\n          for (let i = 0; i < results[0].length; i++) {\r\n            statusLog[i] = results[0][i];\r\n            statusLog[i][\"processID\"] = statusLog[i][\"c1\"];\r\n            statusLog[i][\"totalRecords\"] = statusLog[i][\"c2\"];\r\n            statusLog[i][\"successfulRecords\"] = statusLog[i][\"c3\"];\r\n            statusLog[i][\"failedRecords\"] = statusLog[i][\"c4\"];\r\n            statusLog[i][\"status\"] = statusLog[i][\"c5\"];\r\n            statusLog[i][\"user\"] = statusLog[i][\"c6\"];\r\n            statusLog[i][\"createdDate\"] = moment(statusLog[i][\"c7\"]).format(\r\n              \"DD-MMM-YYYY\"\r\n            );\r\n          }\r\n          res.status(200).send([...statusLog]);\r\n        })\r\n        .catch((err) => {\r\n          res.status(500).send(err);\r\n        });\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    res.status(500).send(err);\r\n  });\r\n\r\n",
    "sys__UUID" : "d6103711-141f-4909-adea-c92c8618b957",
    "sys__createdBy" : "Jay"
}