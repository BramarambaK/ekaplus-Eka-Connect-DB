{
    "_id" : "Final_Processor_for_addbanktransaction",
    "name" : "Final_Processor_for_addbanktransaction",
    "type" : "processor",
    "refType" : "app",
    "refTypeId" : "e4ba81fc-1304-4f01-b641-7425da52a666",
    "snippet" : "    var moment = require('moment');\r\n    function findbody(data) {\r\n      return [\r\n        {\r\n          bankID: data.hasOwnProperty('bankID')?data.bankID:null,\r\n          currencyCode: data.hasOwnProperty('currencyCode')?data.currencyCode:null,\r\n          accountNumber: data.hasOwnProperty('accountNumber')?data.accountNumber:null,\r\n          transactionAmount: Number(data.transactionAmount),\r\n          valueDate: moment(data.valueDate).format('YYYY-MM-DD'),\r\n          direction: data.direction,\r\n          entity:data.entity,\r\n          comments: data.comments,\r\n          classification: data.classification,\r\n\t\t  transactionRefNo: data.transactionRefNo,\r\n\t\t  bankName: data.bankName\r\n\t\t  \r\n        }\r\n      ];\r\n    }\r\n    var ekabanktransaction = req.body.propertyList.platform_url + '/spring/cashManagement/transaction';\r\n    var ekabanktransactionurl = {\r\n      method: 'POST',\r\n      url: ekabanktransaction,\r\n      body: findbody(req.body),\r\n      headers: {\r\n        Authorization: req.headers.authorization,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      json: true\r\n    };\r\n    var get_platformBankTransaction = function get_platformBankTransaction() {\r\n      return new Promise(function(resolve, reject) {\r\n        request(ekabanktransactionurl, function(err, response, body) {\r\n          if (response.statusCode >= 200 && response.statusCode <= 299) {\r\n            resolve(body);\r\n          } else {\r\n            reject(body);\r\n          }\r\n        });\r\n      });\r\n    };\r\n    get_platformBankTransaction()\r\n      .then(function(ent) {\r\n        res.status(200).send({'msg':'Bank Transaction Created Successfully'});\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n\t\tlet message = 'Failed to Create';\r\n\t\tif(err.message.includes(\"Value Date is required\")) {\r\n\t\t\tmessage = 'Transaction Date is required';\r\n\t\t} else if(err.message.includes('Transaction Amount is required')){\r\n\t\t\tmessage = 'Amount is required';\r\n\t\t} else if(err.message.includes('Transaction Amount must be greater than 0')){\r\n\t\t\tmessage = 'Amount must be greater than 0';\r\n\t\t} else if(err.message.includes(\"TransactionRefNo is required\")){\r\n\t\t\tmessage = \"Transaction No is required\";\r\n\t\t} else if(err.message.includes('Duplicate Transaction Number is not allowed')){\r\n\t\t\tmessage = 'Duplicate Transaction Number is not allowed';\r\n\t\t} else if(err.message.includes(\"Currency code is required\")){\r\n\t\t\tmessage = \"Currency is required\";\r\n\t\t} else if(err.message.includes(\"Bank Account Number is required\")){\r\n\t\t\tmessage = 'Bank Account Number is required';\r\n\t\t} else if(err.message.includes(\"Direction code is required\")) {\r\n\t\t\tmessage = 'Direction code is required';\r\n\t\t} \r\n\t\t\r\n\t\tres.status(500).send(message);\r\n      });\r\n  ",
    "sys__UUID" : "8978b460-4df3-4728-98e4-bdc91cc32753",
    "sys__createdBy" : "jay"
}